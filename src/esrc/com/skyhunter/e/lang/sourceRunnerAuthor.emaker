
# Copyright 2002 Combex, Inc. under the terms of the MIT X license
# found at http://www.opensource.org/licenses/mit-license.html ................

def sourceRunnerAuthor(<unsafe>, interp, traceline, stdout, stderr) :near {
    def makeScopeSetup := <unsafe:org.erights.e.elang.interp.makeScopeSetup>
    def runSource(sourceText) :near {
        def interpret() :any {
            traceline("starting run prep")
            def subInterp extends interp {
                to blockAtTop() :void {
                    # ignored
                }
                to continueAtTop() :void {
                    # ignored
                }
            }
            def scope := makeScopeSetup.privileged("__main$",
                                                   stdout,
                                                   stderr,
                                                   subInterp)
            traceline("made scope")
            try {
                def tree := e__quasiParser(sourceText)
                def result := tree.eval(scope)
                traceline(`$\n# value: $result`)
                traceline("shown")
                result
            } catch problem {
                traceline("\n# problem: " + problem)
                traceline("problem shown")
            }
        }
        interpret()
    }
}
