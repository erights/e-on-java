#!/usr/bin/env rune

# Copyright 2006 Hewlett Packard, under the terms of the MIT X license
# found at http://www.opensource.org/licenses/mit-license.html ................

pragma.syntax("0.9")

def Opaque := any # assumed to be some else's Box.
def dist := rcvr # A possibly-remote reference.
def Resolver := <type:org.erights.e.elib.ref.Resolver>

def makeWho(moniker :String, sealer) {
    def who {
        
        to getMoniker() :String { return moniker }
        
        to sealArg(arg :any) :Opaque {
            return sealer(["arg", arg])
        }
        to sealRequest(verb :String,
                       sealedArgs :List[Opaque],
                       resolver :dist[Resolver]) :Opaque {
            return sealer(["request", verb, sealedArgs, resolver])
        }
        to sealIntro(why :String,
                     other :dist[Who],
                     resolver :dist[Resolver]) :Opaque {
            return sealer(["intro", why, other, resolver])
        }
    }
    return who
}
