#!/usr/bin/env rune

# Copyright 2005 Mark S. Miller, under the terms of the MIT X license
# found at http://www.opensource.org/licenses/mit-license.html ................

pragma.syntax("0.9")

def makeAct() :any {
    def act {
        to send(receiver, verb, args, continuation) :void {
            def p := E.send(receiver, verb, args)
            when (p) -> {
                continuation.resolve(p)
            } catch ex {
                continuation.smash(ex)
            }
        }
        to sendOnly(receiver, verb, args) :void {
            E.sendOnly(receiver, verb, args)
        }
        to callCC__control_0_1ej(compoundFn) :any {
            def [_, cont1Block] := compoundFn()
            def control {
                to run__control() {
                    cont1Block(def result, null)
                    return result
                }
            }
            return control
        }
    }
    return act
}
