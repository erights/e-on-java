# Copyright 2008 Kevin Reid, under the terms of the MIT X license
# found at http://www.opensource.org/licenses/mit-license.html ................

pragma.syntax("0.9")

def substFromProps := <import:org.erights.e.install.props.substFromProps>

def copySubstFromProps(props, files) {
  for record in files {
    def [source, target] := record
    target.setText(substFromProps(source.getText(), props))
  }
}


? def copySubstFromProps := <import:org.erights.e.install.props.copySubstFromProps>
# value: <copySubstFromProps>

? def t1 := <unsafe:java.io.makeFile>.createTempFile("ePropsTSrc", "")
> def t2 := <unsafe:java.io.makeFile>.createTempFile("ePropsTDst", "")
> t1.deleteOnExit()
> t2.deleteOnExit()
> null

? t1.setText("${{foo}} ${{bar}} baz jkdjfghjkdfgjl")
? copySubstFromProps(["bar" => "bear"], [[t1, t2]])
? t2.getText()
# value: " bear baz jkdjfghjkdfgjl
#        "

# (XXX how does the newline get in there?)


# Checking for proper failure on this mistake:
? copySubstFromProps([].asMap(), [t1, t2])
# problem: <ClassCastException: File doesn't coerce to an EList>