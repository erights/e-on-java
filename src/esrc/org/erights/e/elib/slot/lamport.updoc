#!/usr/bin/env rune

Copyright 2002 Combex, Inc. under the terms of the MIT X license
found at http://www.opensource.org/licenses/mit-license.html ..................

# pragma.syntax("0.9")
# def updoc(args) { return rune(["~/e/src/esrc/scripts/updoc.e"] + args) }
# updoc(["~/e/src/esrc/org/erights/e/elib/slot/lamport.updoc"])

    ? pragma.syntax("0.8")

    ? def makeLamportSlot := <elib:slot.makeLamportSlot>
    # value: <makeLamportSlot>

    ? def whenever := <elib:slot.whenever>
    # value: <whenever>

    ? def &x := makeLamportSlot(2)
    # value: <lamport 2 as of 0>

    ? x
    # value: 2

    ? (&x).get()
    # value: 2

Note that getValue/setValue are now deprecated, but was removed as of 0.8.37e.
This tests that it's back, though still deprecated.

    ? (&x).getValue()
    # value: 2

    ? (&x).getCurrent()
    # value: [2, 0]

    ? x := 3
    # value: 3

    ? (&x).getCurrent()
    # value: [3, 1]


    ? def &y := makeLamportSlot(5)
    # value: <lamport 5 as of 0>

    ? def &z := whenever([&x,&y],
    >                    fn{x+y})
    # value: <_>

    ? whenever([&z],
    >          fn{println(z)},
    >          fn{true})
    ?
    # stdout: 8
    #

    ? x := "foo"
    # value: "foo"

    ?
    # stdout: foo5
    #

    ? y := "bar"
    # value: "bar"

    ?
    # stdout: foobar
    #

    ? x := 33
    # value: 33

    ?
    # stdout: <ref broken by problem: \
    #                  <ClassCastException: String doesn't coerce to a Number>>
    #

    ? z
    # value: <ref broken by problem: \
    #                  <ClassCastException: String doesn't coerce to a Number>>

    ? y := 3.4
    # value: 3.4

    ?
    # stdout: 36.4
    #

    ?
