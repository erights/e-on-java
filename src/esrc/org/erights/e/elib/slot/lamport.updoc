#!/usr/bin/env rune

? pragma.syntax("0.8")

# Copyright 2002 Combex, Inc. under the terms of the MIT X license
# found at http://www.opensource.org/licenses/mit-license.html ................

? def makeLamportSlot := <elib:slot.makeLamportSlot>
# value: <makeLamportSlot>

? def whenever := <elib:slot.whenever>
# value: <whenever>

? def &x := makeLamportSlot(3)
# value: <lamport 3 as of 0>

? def &y := makeLamportSlot(5)
# value: <lamport 5 as of 0>

? def &z := whenever([&x,&y], 
>                    fn{x+y})
# value: <_>

? whenever([&z],
>          fn{println(z)},
>          fn{true})
# stdout: 8
#

? x := "foo"
# value: "foo"

# stdout: foo5
#

? y := "bar"
# value: "bar"

# stdout: foobar
#

? x := 33
# value: 33

# stderr: <ref broken by problem: <ClassCastException: String doesn't coerce to an int>>

? z
# value: <ref broken by problem: <ClassCastException: \
#        String doesn't coerce to an int>>

? y := 3.4
# value: 3.4

# stdout: 36.4
#

?
