# Copyright 2002 Combex, Inc. under the terms of the MIT X license
# found at http://www.opensource.org/licenses/mit-license.html ................

# Copyright University of Southampton IT Innovation Centre, 2010,
# under the terms of the MIT X license, available from
# http://www.opensource.org/licenses/mit-license.html

pragma.syntax("0.9")

def makeParseFuncAuthor := <elang:cmd.makeParseFuncAuthor>
def runeAuthor := <elang:cmd.runeAuthor>

def makeParseSetup(<unsafe>) {
    def auths := runeAuthor.defaultAuths(<unsafe>)
    def makeParseFunc := makeParseFuncAuthor(auths["makeELexer"])

    return def makeParseSetup {
        to parseFile(fname :String, props :Map, isInteractive :boolean) {
            def name := fname.split("/").last()

            def input := if (fname =~ `-` || fname.startsWith("-.")) {
                auths["metain"]
            } else {
                def <file> := auths["file__uriGetter"]
                <file>[fname].textReader()
            }

            def optPromptOut := if (isInteractive) {
                auths["metaout"]
            } else {
                null
            }

            def lineFeeder := auths["makeFileFeeder"](fname,
                                                      input,
                                                      optPromptOut)

            return makeParseFunc(lineFeeder, props, auths["metaerr"])
        }

        to parseTwine(src :Twine, props :Map, isInteractive :boolean) {
                def makeTwineFeeder := <import:org.quasiliteral.syntax.makeTwineFeeder>

                def optPromptOut := if (isInteractive) {
                    auths["metaout"]
                } else {
                    null
                }

                def lineFeeder := makeTwineFeeder(src)

                return makeParseFunc(lineFeeder, props, auths["metaerr"])
        }
    }
}
