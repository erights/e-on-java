#!/usr/bin/env rune

# Copyright 2006 Hewlett Packard, under the terms of the MIT X license
# found at http://www.opensource.org/licenses/mit-license.html ................

pragma.syntax("0.9")

def Opaque   := any  # assumed to be some else's Box.
def dist     := rcvr # A possibly-remote reference.
def Resolver := <type:org.erights.e.elib.ref.Resolver>

def easyServPolicy {
    
    to getOldDeliverator(myTarget,
                         responsibleWho,
                         __return) {
        # do nothing
    }
    
    to getClientPolicy() { return easyClientPolicy }
    
    to send(responsibleWho,
            myTarget, # the acceptor
            verb,
            args) {
        return E.send(myTarget, verb, args)
    }
    
    to makeServPolicy(responsibleWho,
                      why :IntroLetter,
                      recipientWho,
                      myTarget) {
        def [`introLetter`, blameMe :boolean, stuff :Data] := why
        if (blameMe) {
            return easyServPolicy
        } else {
            throw("Delegator refuses responsibility")
        }
    }
}
