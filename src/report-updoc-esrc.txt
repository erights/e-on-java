
updoc: started

c:/Documents and Settings/millerm1/e/src/esrc/com/hp/donutLab/makeIOUIssuer.updoc:......
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/com/hp/donutLab/makeIOUIssuer.updoc#:span::24:2::24:37>
expr: def am1 := issuer.makeAccountMgr(33)
missing new value
original value: <manages <has (33 - 0) Sugar>>
missing original problem
new problem: <NoSuchMethodException: <an issuer>.makeAccountMgr/1>
***-----------------------***
*** Trace data written to ***
'C:/Documents and Settings/millerm1/.e/etrace/etrace.2006-11-12T06_59_25.142Z.txt'
***-----------------------***

c:/Documents and Settings/millerm1/e/src/esrc/com/hp/orc/orc.updoc:.................................
c:/Documents and Settings/millerm1/e/src/esrc/com/opencola/drm/example/MintMaker.updoc:....
c:/Documents and Settings/millerm1/e/src/esrc/com/skyhunter/convertForEDoc/bounds.updoc:......
c:/Documents and Settings/millerm1/e/src/esrc/com/skyhunter/convertForEDoc/edoc.updoc:......
c:/Documents and Settings/millerm1/e/src/esrc/edu/jhu/cs448/contact/contactKit.updoc:.........................................
c:/Documents and Settings/millerm1/e/src/esrc/edu/jhu/cs448/contact/makeOpenQueue.emaker:........................
c:/Documents and Settings/millerm1/e/src/esrc/edu/jhu/markm/thesis/actors.updoc:.........
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc:....
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc#:span::22:6::22:31>
expr: def scope := makeScope([])
missing new value
original value: <makeScope>
missing original problem
new problem: <NoSuchMethodException: <a Scope__Maker>.run/1>

c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/cmd/cmdMakerMaker.updoc:...........
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/cmd/cmdMakerMaker.updoc#:span::46:6::46:64>
expr: bind cmdLoop := cmdLoopMaker(["a", "b"], props, privileged)
missing new value
original value: <cmdLoop>
missing original problem
new problem: <NoSuchMethodException: <a cmdLoopMaker>.run/3>

c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc:..................
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc#:span::68:6::68:45>
expr: def exitPairVow := ctrl.getExitPairVow()
missing new value
original value: <Promise>
missing original problem
new problem: <NoSuchMethodException: <a controlLoop>.getExitPairVow/0>

c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/control/makeSeries.emaker:.........
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/control/__dynamicExtent.emaker:......
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/expand/__bind.emaker:......
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/expand/__Empty.emaker:.....
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/expand/__extract.emaker:...
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/expand/__extract.emaker#:span::61:6::61:56>
expr: def [=>x, "y" => y, => z := 3] := ["x"=>a, "y"=> b]
original and new expansion differ
original expansion: def via (__extract.run("x")) [x, via (__extract.run("y")) [y, via (__extract.depr("z", 3)) [z, :__Empty]]] := __makeMap.fromPairs(__makeList.run(__makeList.run("x", a), __makeList.run("y", b)))
     new expansion: def via (__extract.run("x")) [x, via (__extract.run("y")) [y, via (__extract.depr("z", 3)) [z, _ :__Empty]]] := __makeMap.fromPairs(__makeList.run(__makeList.run("x", a), __makeList.run("y", b)))
....
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/expand/__extract.emaker#:span::82:6::82:63>
expr: def ["i" => j, (j) => k] := ["i" => "foo", "foo" => "bar"]
original and new expansion differ
original expansion: def via (__extract.run("i")) [j, via (__extract.run(j)) [k, :__Empty]] := __makeMap.fromPairs(__makeList.run(__makeList.run("i", "foo"), __makeList.run("foo", "bar")))
     new expansion: def via (__extract.run("i")) [j, via (__extract.run(j)) [k, _ :__Empty]] := __makeMap.fromPairs(__makeList.run(__makeList.run("i", "foo"), __makeList.run("foo", "bar")))
..
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/expand/__is.emaker:..
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/expand/__is.emaker#:span::61:6::61:13>
expr: 3 =~ ==3
original and new expansion differ
original expansion: 3 =~ via (__is.run(3)) _
     new expansion: escape ej__1 {
                    def via (__is.run(3)) _ exit ej__1 := 3
                    true
                    } catch _ {
                    false
                    }

c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/expand/__matchBind.emaker:......
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/expand/__splitList.emaker:......
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/expand/__suchThat.emaker:..
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/expand/__suchThat.emaker#:span::35:6::35:65>
expr: def foo(G1, G2, x :G1 ? (x =~ y :G2)) :any { return [x, y] }
original and new expansion differ
original expansion: def foo := def "__main$foo__C" {
                    
                    method run(G1,
                    G2,
                    via (__suchThat)
                    [x :G1,
                    via (__suchThat.run(x =~ y :G2)) _]) :any {
                    escape __return {
                    __return.run(__makeList.run(x, y))
                    }
                    }
                    }
     new expansion: def foo {
                    
                    method run(G1, G2, via (__suchThat) [x :G1, via (__suchThat.run(def [rs__7, &y] := escape ej__1 {
                    def y :G2 exit ej__1 := x
                    __makeList.run(true, &y)
                    } catch ex__3 {
                    def br__5 := Ref.broken(ex__3)
                    __makeList.run(false, br__5)
                    }
                    rs__7)) _]) :any {
                    escape __return {
                    __return.run(__makeList.run(x, y))
                    null
                    }
                    }
                    }
...
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/interp/makeBootServer.updoc:............
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/interp/makeBootServer.updoc#:span::36:2::36:7>
expr: [p,sr]
original and new value differ
original value: [null, <a SturdyRef>]
     new value: [null, <SturdyRef to 3>]
....
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/interp/makeServer.updoc:......
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/interp/makeServer.updoc#:span::23:2::23:11>
expr: env.size()
missing new value
original value: 105
missing original problem
new problem: Failed: not synchronously callable

c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/interp/promiseAllResolved.emaker:............
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/interp/promiseAllResolved.emaker#:span::92:6::92:6>
expr: a
original and new value differ
original value: [4, <ref broken by problem: boom>, [***CYCLE***]]
     new value: [4, <ref broken by problem: boom>, [<***CYCLE***>]]

c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/interp/require.emaker:......
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/syntax/termE__quasiParser.emaker:.......
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elang/visitors/makeMetaEval.emaker:........
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elib/extern/CommandMakerAuthor.updoc:......
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elib/extern/CommandMakerAuthor.updoc#:span::25:6::25:48>
expr: bash("-c", "cygpath -w `type -p echo.exe`")
missing new problem
original problem: c:/cygwin/bin/bash.exe failed with(127,,/usr/bin/bash: cygpath: command not found
                  )
.
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elib/ref/makeLazyPromiseAuthor.emaker:.........
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elib/sealing/makeVOCPair.emaker:.............
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elib/slot/lamport.updoc:...
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elib/slot/lamport.updoc#:span::14:2::14:35>
expr: def forever := <elib:slot.forever>
missing new value
original value: <trackLamportSlot>
missing original problem
new problem: Failed: org.erights.e.elib.slot.forever not found

c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elib/slot/makeLazySlot.emaker:..
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elib/slot/makeLazySlot.emaker#:span::54:4::54:27>
expr: makeLazySlot :DeepFrozen
missing new value
original value: <makeLazySlot>
missing original problem
new problem: Not audited by DeepFrozen

c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elib/slot/near.emaker:....
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elib/slot/near.emaker#:span::40:6::40:31>
expr: def [p,r] := Ref.promise()
original and new value differ
original value: [<Promise>, <Unresolved Resolver>]
     new value: [<Promise>, <Resolver>]
.
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elib/slot/near.emaker#:span::52:6::52:11>
expr: x := r
original and new value differ
original value: <Unresolved Resolver>
     new value: <Resolver>
.....
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elib/slot/near.emaker#:span::64:6::64:11>
expr: y := 3
missing new value
original value: 3
missing original problem
new problem: Failed: Can't assign to final variable: y

c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/elib/slot/whenever.emaker:..........................
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/examples/concurrency/makeQueue.emaker:............
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/examples/concurrency/QMaker.emaker:............
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/extern/persist/persist.updoc:....................
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/facet/makeCaretaker.updoc:..........
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/facet/makeCaretaker.updoc#:span::33:2::33:8>
expr: help(f)
original and new value differ
original value: an org.erights.e.elang.evm.EImplByProxy
                /**
                * Forwards all non-Miranda methods, so this pattern should
                * only be used if 'underlying' is known not to have any
                * protocol that gives itself away.
                * <p>
                * Therefore, this is only for 'Cooperative (with the underlying)
                * revocability'. Uncooperative revocability requires the Membrane pattern,
                * for which we eventually expect to provide a library.
                * <p>
                * Besides non-Miranda methods, this also forwards the Miranda methods
                * __printOn/1 (sort of) and __reactToLostClient/1.
                */
                interface "org.erights.e.facet.makeCaretaker$makeCaretaker__C$forwarder__C" {
                }
                
     new value: an org.erights.e.elang.evm.EImplByProxy
                /**
                * Forwards all non-Miranda methods, so this pattern should
                * only be used if 'underlying' is known not to have any
                * protocol that gives itself away.
                * <p>
                * Therefore, this is only for 'Cooperative (with the underlying)
                * revocability'. Uncooperative revocability requires the Membrane pattern,
                * for which we eventually expect to provide a library.
                * <p>
                * Besides non-Miranda methods, this also forwards the Miranda methods
                * __printOn/1 (sort of) and __reactToLostClient/1.
                */
                interface "org.erights.e.facet.makeCaretaker$makeCaretaker$forwarder" {
                }
                

c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/facet/once.emaker:.....
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/tools/args/interimArgParser.updoc:.......
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/tools/args/makeCapExporter.updoc:..
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/tools/args/makeCapExporter.updoc#:span::11:6::11:24>
expr: def uriGetters := [
          "file" => <file>,
          "http" => <http>,
          "ftp"  => <ftp>]
original and new value differ
original value: ["file" => <a FileGetter>, "http" => http__uriGetter, "ftp" => ftp__uriGetter]
     new value: ["file" => <file>, "http" => <http>, "ftp" => <ftp>]

at: <file:c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/tools/args/makeCapExporter.updoc#:span::19:6::19:69>
expr: def exportCap := makeCapExporter(introducer, <file>, uriGetters)
missing new value
original value: <exportCap>
missing original problem
new problem: <NoSuchMethodException: <a makeCapExporter>.run/3>

c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/tools/collect/propUtils.updoc:.....
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/tools/collect/propUtils.updoc#:span::24:6::24:47>
expr: propUtils.testProp(props, "e.enable.bind")
original and new value differ
original value: true
     new value: false
..
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/tools/collect/reverse.emaker:.
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/tools/collect/reverse.emaker#:span::32:6::32:67>
expr: for i => x in reverse(["a", "b", "c"]) { println(`$i => $x`) }
missing new stdout
original stdout: 2 => c
                 1 => b
                 0 => a
missing original problem
new problem: Failed: Undefined variable: reverse

c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/tools/files/leaves.emaker:..
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/tools/html/html2txt.emaker:.......
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/tools/html/html2updoc.emaker:......
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/tools/html/htmlTokenizer.emaker:.....
expr: 
missing new A bug we're just going to live with for now
original A bug we're just going to live with for now: 
...
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/tools/java/fixImports.emaker:...
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/e/ui/swt/watchAuthor.emaker:.........
c:/Documents and Settings/millerm1/e/src/esrc/org/erights/ex/swing/JPanel__quasiParser.emaker:.
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/org/erights/ex/swing/JPanel__quasiParser.emaker#:span::119:6::119:54>
expr: def fr := <import:javax.swing.makeJFrame>(); null
missing original problem
new problem: <SecurityException: javax.swing.JFrame not approved as safe>

c:/Documents and Settings/millerm1/e/src/esrc/org/quasiliteral/schema/makeSchema.emaker:....
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/org/quasiliteral/schema/makeSchema.emaker#:span::43:6::43:30>
expr: makeSchema.parseGrammar(`
          <expr> ::= <id> | <expr> "+" <expr> | "-" <expr> | <expr> "-" <expr>;
      `)
original and new value differ
original value: term`schema(production(tag("<expr>"),
                seq(onlyChoice(tag("<id>"),
                tag("<expr>")),
                data("+"),
                onlyChoice(tag("<expr>"),
                data("-")),
                onlyChoice(tag("<expr>"),
                tag("<expr>")),
                data("-"),
                tag("<expr>"))))`
     new value: term`schema(production(tag("<expr>"),
                onlyChoice(tag("<id>"),
                seq(tag("<expr>"),
                data("+"),
                tag("<expr>")),
                seq(data("-"),
                tag("<expr>")),
                seq(tag("<expr>"),
                data("-"),
                tag("<expr>")))))`

at: <file:c:/Documents and Settings/millerm1/e/src/esrc/org/quasiliteral/schema/makeSchema.emaker#:span::58:2::58:54>
expr: makeSchema.parseSchema(makeSchema.getMetaSchemaSrc())
original and new value differ
original value: term`schema(production(tag("<schema>"),
                term(tag("schema"),
                oneOrMore(tag("<production>")))),
                production(tag("<production>"),
                term(tag("production"),
                seq(tag("<lhs>"),
                tag("<rhs>")))),
                production(tag("<lhs>"),
                term(tag("tag"),
                tag(".String."))),
                production(tag("<rhs>"),
                onlyChoice(tag("<term>"),
                term(tag("onlyChoice"),
                seq(tag("<rhs>"),
                oneOrMore(tag("<rhs>")))),
                term(tag("firstChoice"),
                seq(tag("<rhs>"),
                oneOrMore(tag("<rhs>")))),
                term(tag("not"),
                tag("<rhs>")),
                term(tag("optional"),
                tag("<rhs>")),
                term(tag("oneOrMore"),
                tag("<rhs>")),
                term(tag("zeroOrMore"),
                tag("<rhs>")),
                tag("any"),
                term(tag("interleave"),
                seq(tag("<rhs>"),
                oneOrMore(tag("<rhs>")))),
                term(tag("seq"),
                seq(tag("<rhs>"),
                oneOrMore(tag("<rhs>")))),
                term(tag("action"),
                seq(tag("<rhs>"),
                tag("<rhs>"))),
                tag("empty"))),
                production(tag("<term>"),
                onlyChoice(term(tag("term"),
                seq(tag("<functor>"),
                tag("<rhs>"))),
                tag("<functor>"))),
                production(tag("<functor>"),
                onlyChoice(term(tag("tag"),
                tag(".String.")),
                term(tag("tag"),
                seq(tag(".String."),
                tag("<hole>"))),
                tag("<hole>"),
                term(tag("data"),
                tag("<literal>")),
                term(tag("range"),
                seq(tag("<literal>"),
                tag("<literal>"))))),
                production(tag("<hole>"),
                onlyChoice(term(tag("dollarHole"),
                onlyChoice(tag(".int."),
                tag(".String."))),
                term(tag("atHole"),
                onlyChoice(tag(".int."),
                tag(".String."))))),
                production(tag("<literal>"),
                onlyChoice(tag(".char."),
                tag(".int."),
                tag(".float64."),
                tag(".String."))))`
     new value: term`schema(production(tag("<schema>"),
                term(tag("schema"),
                oneOrMore(tag("<production>")))),
                production(tag("<production>"),
                term(tag("production"),
                seq(tag("<lhs>"),
                tag("<rhs>")))),
                production(tag("<lhs>"),
                term(tag("tag"),
                tag(".String."))),
                production(tag("<rhs>"),
                onlyChoice(tag("<term>"),
                term(tag("onlyChoice"),
                seq(tag("<rhs>"),
                oneOrMore(tag("<rhs>")))),
                term(tag("firstChoice"),
                seq(tag("<rhs>"),
                oneOrMore(tag("<rhs>")))),
                term(tag("not"),
                tag("<rhs>")),
                term(tag("optional"),
                tag("<rhs>")),
                term(tag("oneOrMore"),
                tag("<rhs>")),
                term(tag("oneOrMore"),
                seq(tag("<rhs>"),
                tag("<rhs>"))),
                term(tag("zeroOrMore"),
                tag("<rhs>")),
                term(tag("zeroOrMore"),
                seq(tag("<rhs>"),
                tag("<rhs>"))),
                tag("any"),
                term(tag("interleave"),
                seq(tag("<rhs>"),
                oneOrMore(tag("<rhs>")))),
                term(tag("seq"),
                seq(tag("<rhs>"),
                oneOrMore(tag("<rhs>")))),
                term(tag("action"),
                seq(tag("<rhs>"),
                tag("<rhs>"))),
                tag("empty"))),
                production(tag("<term>"),
                onlyChoice(term(tag("term"),
                seq(tag("<functor>"),
                tag("<rhs>"))),
                tag("<functor>"))),
                production(tag("<functor>"),
                onlyChoice(term(tag("tag"),
                tag(".String.")),
                term(tag("tag"),
                seq(tag(".String."),
                tag("<hole>"))),
                tag("<hole>"),
                term(tag("data"),
                tag("<literal>")),
                term(tag("range"),
                seq(tag("<literal>"),
                tag("<literal>"))))),
                production(tag("<hole>"),
                onlyChoice(term(tag("dollarHole"),
                onlyChoice(tag(".int."),
                tag(".String."))),
                term(tag("atHole"),
                onlyChoice(tag(".int."),
                tag(".String."))))),
                production(tag("<literal>"),
                onlyChoice(tag(".char."),
                tag(".int."),
                tag(".float64."),
                tag(".String."))))`

c:/Documents and Settings/millerm1/e/src/esrc/scripts/ButtonPointer.e:...
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/scripts/ButtonPointer.e#:span::63:2::63:12>
expr: getLine(tr)
missing new value
original value: [1, elib/]
missing original problem
new problem: Failed: Undefined variable: getLine

c:/Documents and Settings/millerm1/e/src/esrc/scripts/counter-client.updoc:...
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/scripts/counter-client.updoc#:span::14:6::14:44>
expr: def sr := introducer.sturdyFromURI(uri)
missing new value
original value: <a SturdyRef>
missing original problem
new problem: <MalformedURLException: URI captp://213.130.163.34:4451/0Bg1bGDtCQCmpMvfBJ8wvl6dmRHH/08tjK7_p7d8G8u7OfaVHFr6quSvx does not start with captp://*>

c:/Documents and Settings/millerm1/e/src/esrc/scripts/evalServer.updoc:..
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/scripts/evalServer.updoc#:span::11:2::11:94>
expr: def sr := <captp://192.168.0.21:1043/5UmFAqXbepvCOwuSHCEGHt5V1wC/Ray1=9hgEHkC8i_DRs5WKfsLnji>
missing new value
original value: <a SturdyRef>
missing original problem
new problem: <MalformedURLException: URI //192.168.0.21:1043/5UmFAqXbepvCOwuSHCEGHt5V1wC/Ray1=9hgEHkC8i_DRs5WKfsLnji does not start with captp://*>

c:/Documents and Settings/millerm1/e/src/esrc/scripts/intro.updoc:..
c:/Documents and Settings/millerm1/e/src/esrc/scripts/srccheck-post.e:......
c:/Documents and Settings/millerm1/e/src/esrc/scripts/test/audit-test.e:......
c:/Documents and Settings/millerm1/e/src/esrc/scripts/test/dist-cycle.updoc:...
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/scripts/test/dist-cycle.updoc#:span::15:6::15:59>
expr: def apURI := introducer.sturdyToURI(makeSturdyRef(ap))
missing original problem
new problem: <NullPointerException: TimeMachine must be made non-Ephemeral first.
...
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/scripts/test/dist-cycle.updoc#:span::29:6::29:59>
expr: def bpURI := introducer.sturdyToURI(makeSturdyRef(bp))
missing original problem
new problem: <NullPointerException: TimeMachine must be made non-Ephemeral first.

at: <file:c:/Documents and Settings/millerm1/e/src/esrc/scripts/test/dist-cycle.updoc#:span::44:6::44:58>
expr: def bpURI := <file:~/Desktop/bp.cap>.getText().trim()
missing original problem
new problem: <FileNotFoundException: c:\Documents and Settings\millerm1\Desktop\bp.cap (The system cannot find the file specified)>

at: <file:c:/Documents and Settings/millerm1/e/src/esrc/scripts/test/dist-cycle.updoc#:span::57:6::57:15>
expr: [bp,br,ap]
missing new value
original value: [<Promise>, <Resolver>, <Promise>]
missing original problem
new problem: Failed: Undefined variable: ap

at: <file:c:/Documents and Settings/millerm1/e/src/esrc/scripts/test/dist-cycle.updoc#:span::70:6::70:15>
expr: [ap,ar,bp]
missing new value
original value: [<Promise>, <Closed Resolver>, <Promise>]
missing original problem
new problem: Failed: Undefined variable: bp

c:/Documents and Settings/millerm1/e/src/esrc/scripts/test/makeScope.updoc:...
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/scripts/test/makeScope.updoc#:span::22:4::22:49>
expr: for k => v in demoScope { println(k, " ", v) }
original and new stdout differ
original stdout: &y <& 6>
                 &any <& <any>>
                 &x <& 5>
                 &__makeList <& <import:org.erights.e.elib.tables.ConstList>>
                 &uc_construct <& <uc_construct>>
                 
     new stdout: &y <& 6>
                 &any <& any>
                 &x <& 5>
                 &__makeList <& <makeConstList>>
                 &uc_construct <& <uc_construct>>
                 
...
c:/Documents and Settings/millerm1/e/src/esrc/scripts/test/mod.updoc:......
c:/Documents and Settings/millerm1/e/src/esrc/scripts/test/updoc/abc.updoc:.
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/scripts/test/updoc/abc.updoc#:span::9:6::9:27>
expr: (introducer.onTheAir()
       var x := null
       def bob {
           to foo()       :any { 3 }
           to setX(newX) :void { x := newX }
           to getX()      :any { x }
       }
       def sr := makeSturdyRef(bob, timer.now() + 3_600_000)
       def uri := introducer.sturdyToURI(sr)
       <file:~/Desktop/bob.cap>.setText(uri))
missing original problem
new problem: <NullPointerException: TimeMachine must be made non-Ephemeral first.
.....
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/scripts/test/updoc/abc.updoc#:span::38:6::38:16>
expr: result == 3
original and new value differ
original value: true
     new value: false

at: <file:c:/Documents and Settings/millerm1/e/src/esrc/scripts/test/updoc/abc.updoc#:span::41:6::41:26>
expr: farBob <- setX(carol)
original and new value differ
original value: <Eventual ref>
     new value: <ref broken by problem: <IOException: java.net.ConnectException: Connection refused: connect

at: <file:c:/Documents and Settings/millerm1/e/src/esrc/scripts/test/updoc/abc.updoc#:span::46:6::46:29>
expr: def answer := x <- bar()
missing new value
original value: <Eventual ref>
missing original problem
new problem: Failed: Undefined variable: x

c:/Documents and Settings/millerm1/e/src/esrc/scripts/test/updoc/FlexList.updoc:.......
c:/Documents and Settings/millerm1/e/src/esrc/scripts/test/updoc/propUtils.updoc:.......
c:/Documents and Settings/millerm1/e/src/esrc/scripts/test/updoc/race.updoc:.
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/scripts/test/updoc/race.updoc#:span::8:2::8:58>
expr: def race := <import:org.erights.e.tools.concurrency.race>
missing original problem
new problem: Failed: org.erights.e.tools.concurrency.race not found

c:/Documents and Settings/millerm1/e/src/esrc/scripts/test/updoc/shortFlexList.updoc:....
c:/Documents and Settings/millerm1/e/src/esrc/scripts/webServer/ewalnut.html:abc..................................
at: <file:c:/Documents and Settings/millerm1/e/src/esrc/scripts/webServer/ewalnut.html#:span::1181:2::1181:10>
expr: help(add)
original and new value differ
original value: an org.erights.e.elang.evm.EImplByProxy
                interface "__main$add__C" {
                
                /** Invoke as a function */
                to run(:any, :any) :any
                }
                
     new value: an org.erights.e.elang.evm.EImplByProxy
                interface "__main$add" {
                
                to run(:any, :any) :any
                }
                
........................................................
