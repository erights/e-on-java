class("org.eclipse.swt.widgets.Shell",
           statics(method(suppress, "run()"),
                   method(suppress, "run(int)"),
                   method("run(Display)"),
                   method("run(Display, int)"),
                   method("run(Shell)"),
                   method("run(Shell, int)")),
           methods(method(suppress, "motif_new(Display, int)"),
                   method("addShellListener(ShellListener)"),
                   method("close()"),
                   method("computeTrim(int, int, int, int)"),
                   method("dispose()"),
                   method(suppress,
                          "forceActive()",
                          comment("needs a function in a separate capability to cause forceActive to occur, so TCB can do it")),
                   method("getBorderWidth()"),
                   method("getBounds()"),
                   method(suppress, "getDisplay()"),
                   method(suppress, "getImeInputMode()"),
                   method("getLocation()"),
                   method(suppress, "getShell()"),
                   method(suppress, "getShells()"),
                   method("getSize()"),
                   method("getVisible()"),
                   method("isEnabled()"),
                   method("isVisible()"),
                   method("open()",
                          comment("XXXthis is a security vulnerability, but a minor one. Until CapDesk is more robust in informing the user of windows that have been opened that lie in back of other windows, allowing this is probably the right trade off. However, you should consider it deprecated already.")),
                   method("removeShellListener(ShellListener)"),
                   method(suppress,
                          "setActive()",
                          comment("We need an alternative setActive(list of Shells) which sets active if one of the other shells the requestor has authorityy over is indeed actrive, the way we handle focus ")),
                   method(suppress, "setImeInputMode(int)"),
                   method("setMinimized(boolean)"),
                   method("setText(String)"),
                   method("setVisible(boolean)")),
           comment("This could probably be safe, since the gating requirement is to have your hands on Display. naw, not today")) 
