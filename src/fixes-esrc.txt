def p := rune(["~/e/src/esrc/scripts/srccheck-post.e"])
term`changes(change("src/esrc/caplets/capEdit/capEdit.caplet", 19, 32, 40, "x.optCap"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 19, 48, 67, "x.INITIAL_DOC_RCVRS"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 20, 20, 26, "s.size"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 29, 32, 40, "x.optCap"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 29, 48, 57, "x.TRACELN"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 31, 33, 41, "x.optCap"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 31, 49, 62, "x.FRAME_MAKER"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 32, 36, 44, "x.optCap"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 32, 52, 65, "x.DROP_TARGET"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 51, 29, 35, "s.size"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 64, 42, 62, "r.javaFileListFlavor"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 66, 53, 81, "r.javaJVMLocalObjectMimeType"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 80, 49, 64, "t.windowClosing"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 84, 32, 48, "e.getContentPane"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 85, 16, 42, "e.setDefaultCloseOperation"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 85, 65, 86, ">.DO_NOTHING_ON_CLOSE"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 86, 16, 35, "e.addWindowListener"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 88, 15, 26, "e.setLayout"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 90, 23, 26, ") :void {"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 90, 32, 38, "t.save"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 92, 32, 47, "s.newToolButton"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 94, 23, 26, ") :void {"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 95, 39, 60, "x.requestFileRcvrsVow"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 97, 49, 52, ") :void {"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 102, 32, 47, "s.newToolButton"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 106, 15, 28, "e.setLineWrap"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 107, 15, 33, "e.setWrapStyleWord"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 108, 15, 27, "e.setTabSize"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 112, 38, 65, ">.VERTICAL_SCROLLBAR_ALWAYS"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 113, 38, 66, ">.HORIZONTAL_SCROLLBAR_NEVER"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 114, 24, 37, "e.getViewport"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 114, 38, 43, ").add"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 119, 15, 33, "e.setPreferredSize"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 120, 15, 20, "e.add"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 121, 79, 82, ") :void {"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 122, 20, 30, "e.setTitle"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 123, 21, 33, "n.setEnabled"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 124, 19, 28, "e.setText"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 126, 29, 38, "e.getText"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 127, 20, 26, "e.pack"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 128, 20, 29, "e.setSize"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 129, 20, 26, "e.show"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 132, 24, 27, ") :void {"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 139, 20, 23, ") :void {"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 140, 33, 42, "e.getText"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 142, 45, 48, ") :void {"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 151, 29, 32, ") :void {"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 165, 41, 44, ") :void {"),
             change("src/esrc/caplets/capEdit/capEdit.caplet", 173, 38, 44, "t.save"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 15, 32, 40, "x.optCap"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 15, 48, 67, "x.INITIAL_DOC_RCVRS"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 16, 20, 26, "s.size"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 24, 48, 51, ") :void {"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 25, 32, 40, "x.optCap"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 25, 48, 57, "x.TRACELN"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 26, 33, 41, "x.optCap"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 26, 49, 62, "x.FRAME_MAKER"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 27, 36, 44, "x.optCap"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 27, 52, 65, "x.DROP_TARGET"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 41, 34, 37, ") :void {"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 42, 29, 35, "s.size"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 47, 29, 32, ") :void {"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 51, 46, 49, ") :void {"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 55, 42, 62, "r.javaFileListFlavor"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 57, 53, 81, "r.javaJVMLocalObjectMimeType"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 71, 34, 37, ") :void {"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 71, 43, 58, "t.windowClosing"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 75, 32, 48, "e.getContentPane"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 76, 16, 42, "e.setDefaultCloseOperation"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 76, 65, 86, ">.DO_NOTHING_ON_CLOSE"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 77, 16, 35, "e.addWindowListener"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 79, 15, 26, "e.setLayout"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 81, 23, 26, ") :void {"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 81, 32, 38, "t.save"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 83, 32, 47, "s.newToolButton"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 85, 23, 26, ") :void {"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 86, 39, 60, "x.requestFileRcvrsVow"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 88, 49, 52, ") :void {"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 93, 32, 47, "s.newToolButton"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 97, 15, 28, "e.setLineWrap"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 98, 15, 33, "e.setWrapStyleWord"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 99, 15, 27, "e.setTabSize"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 103, 38, 65, ">.VERTICAL_SCROLLBAR_ALWAYS"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 104, 38, 66, ">.HORIZONTAL_SCROLLBAR_NEVER"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 105, 24, 37, "e.getViewport"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 105, 38, 43, ").add"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 110, 15, 33, "e.setPreferredSize"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 111, 15, 20, "e.add"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 112, 79, 82, ") :void {"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 113, 20, 30, "e.setTitle"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 114, 21, 33, "n.setEnabled"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 115, 19, 28, "e.setText"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 117, 29, 38, "e.getText"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 118, 20, 26, "e.pack"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 119, 20, 29, "e.setSize"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 120, 20, 26, "e.show"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 123, 24, 27, ") :void {"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 125, 24, 33, "e.dispose"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 130, 20, 23, ") :void {"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 131, 33, 42, "e.getText"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 133, 45, 48, ") :void {"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 142, 29, 32, ") :void {"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 146, 43, 52, "e.getText"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 151, 84, 87, ") :void {"),
             change("src/esrc/caplets/capEdit/capEditOld.caplet", 158, 38, 44, "t.save"),
             change("src/esrc/caplets/capEdit/testCapEdit.e-awt", 17, 24, 37, "r.getPowerbox"),
             change("src/esrc/caplets/capEdit/testCapEdit.e-awt", 18, 13, 21, "r.setCap"),
             change("src/esrc/caplets/capEdit/testCapEdit.e-awt", 18, 25, 44, "x.INITIAL_DOC_RCVRS"),
             change("src/esrc/caplets/capEdit/testCapEdit.e-awt", 20, 13, 25, "r.launchFile"),
             change("src/esrc/caplets/capEdit/testCapEdit.e-awt", 21, 5, 17, "p.blockAtTop"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 17, 32, 40, "x.optCap"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 17, 48, 67, "x.INITIAL_DOC_RCVRS"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 18, 20, 26, "s.size"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 26, 48, 51, ") :void {"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 27, 32, 40, "x.optCap"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 27, 48, 57, "x.TRACELN"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 29, 33, 41, "x.optCap"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 29, 49, 62, "x.FRAME_MAKER"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 30, 36, 44, "x.optCap"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 30, 52, 65, "x.DROP_TARGET"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 44, 34, 37, ") :void {"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 45, 29, 35, "s.size"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 50, 29, 32, ") :void {"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 54, 46, 49, ") :void {"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 58, 42, 62, "r.javaFileListFlavor"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 60, 53, 81, "r.javaJVMLocalObjectMimeType"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 74, 34, 37, ") :void {"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 74, 43, 58, "t.windowClosing"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 78, 32, 48, "e.getContentPane"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 79, 16, 42, "e.setDefaultCloseOperation"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 79, 65, 86, ">.DO_NOTHING_ON_CLOSE"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 80, 16, 35, "e.addWindowListener"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 82, 15, 26, "e.setLayout"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 84, 23, 26, ") :void {"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 84, 32, 38, "t.save"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 86, 32, 47, "s.newToolButton"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 88, 23, 26, ") :void {"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 89, 39, 60, "x.requestFileRcvrsVow"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 91, 49, 52, ") :void {"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 96, 32, 47, "s.newToolButton"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 100, 15, 28, "e.setLineWrap"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 101, 15, 33, "e.setWrapStyleWord"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 102, 15, 27, "e.setTabSize"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 106, 38, 65, ">.VERTICAL_SCROLLBAR_ALWAYS"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 107, 38, 66, ">.HORIZONTAL_SCROLLBAR_NEVER"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 108, 24, 37, "e.getViewport"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 108, 38, 43, ").add"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 113, 15, 33, "e.setPreferredSize"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 114, 15, 20, "e.add"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 115, 79, 82, ") :void {"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 116, 20, 30, "e.setTitle"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 117, 21, 33, "n.setEnabled"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 118, 19, 28, "e.setText"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 120, 29, 38, "e.getText"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 121, 20, 26, "e.pack"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 122, 20, 29, "e.setSize"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 123, 20, 26, "e.show"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 126, 24, 27, ") :void {"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 128, 24, 33, "e.dispose"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 133, 20, 23, ") :void {"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 134, 33, 42, "e.getText"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 136, 45, 48, ") :void {"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 145, 29, 32, ") :void {"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 149, 43, 52, "e.getText"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 154, 84, 87, ") :void {"),
             change("src/esrc/caplets/capEdit/testcapEdit.caplet", 161, 38, 44, "t.save"),
             change("src/esrc/caplets/capWebServer/capWebServer.caplet", 24, 32, 40, "x.optCap"),
             change("src/esrc/caplets/capWebServer/capWebServer.caplet", 24, 48, 57, "x.TRACELN"),
             change("src/esrc/caplets/capWebServer/capWebServer.caplet", 26, 33, 41, "x.optCap"),
             change("src/esrc/caplets/capWebServer/capWebServer.caplet", 26, 49, 62, "x.FRAME_MAKER"),
             change("src/esrc/caplets/capWebServer/capWebServer.caplet", 27, 30, 38, "x.optCap"),
             change("src/esrc/caplets/capWebServer/capWebServer.caplet", 27, 46, 64, "x.LOCAL__URIGETTER"),
             change("src/esrc/caplets/capWebServer/capWebServer.caplet", 28, 35, 43, "x.optCap"),
             change("src/esrc/caplets/capWebServer/capWebServer.caplet", 28, 51, 66, "x.SERVER_SOCKET"),
             change("src/esrc/caplets/capWebServer/capWebServer.caplet", 35, 29, 32, ") :void {"),
             change("src/esrc/caplets/capWebServer/capWebServer.caplet", 42, 44, 47, ") :void {"),
             change("src/esrc/caplets/capWebServer/capWebServer.caplet", 43, 23, 36, "x.requestExit"),
             change("src/esrc/caplets/capWebServer/capWebServer.caplet", 47, 30, 33, ") :void {"),
             change("src/esrc/caplets/capWebServer/capWebServer.caplet", 54, 44, 47, ") :void {"),
             change("src/esrc/caplets/capWebServer/capWebServer.caplet", 55, 23, 36, "x.requestExit"),
             change("src/esrc/caplets/capWebServer/capWebServer.caplet", 62, 34, 42, "x.optCap"),
             change("src/esrc/caplets/capWebServer/capWebServer.caplet", 62, 50, 69, "x.INITIAL_DOC_RCVRS"),
             change("src/esrc/caplets/capWebServer/capWebServer.caplet", 64, 22, 28, "s.size"),
             change("src/esrc/caplets/capWebServer/capWebServer.caplet", 70, 60, 63, ") :void {"),
             change("src/esrc/caplets/capWebServer/capWebServer.caplet", 76, 50, 61, "x.runSource"),
             change("src/esrc/caplets/capWebServer/capWebServer.caplet", 90, 52, 55, ") :void {"),
             change("src/esrc/caplets/capWebServer/capWebServer.caplet", 91, 32, 42, "r.shutdown"),
             change("src/esrc/caplets/capWebServer/capWebServer.caplet", 92, 35, 42, "t.close"),
             change("src/esrc/caplets/capWebServer/capWebServer.caplet", 93, 31, 44, "x.requestExit"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 12, 32, 40, "x.optCap"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 12, 48, 67, "x.INITIAL_DOC_RCVRS"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 13, 20, 26, "s.size"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 21, 48, 51, ") :void {"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 22, 32, 40, "x.optCap"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 22, 48, 57, "x.TRACELN"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 23, 33, 41, "x.optCap"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 23, 49, 62, "x.FRAME_MAKER"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 24, 36, 44, "x.optCap"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 24, 52, 65, "x.DROP_TARGET"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 38, 29, 32, ") :void {"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 42, 38, 41, ") :void {"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 43, 33, 39, "s.size"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 47, 46, 49, ") :void {"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 52, 42, 62, "r.javaFileListFlavor"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 54, 53, 81, "r.javaJVMLocalObjectMimeType"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 68, 34, 37, ") :void {"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 68, 43, 58, "t.windowClosing"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 72, 32, 48, "e.getContentPane"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 73, 16, 42, "e.setDefaultCloseOperation"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 73, 65, 86, ">.DO_NOTHING_ON_CLOSE"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 74, 16, 35, "e.addWindowListener"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 76, 15, 26, "e.setLayout"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 78, 23, 26, ") :void {"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 78, 32, 38, "t.save"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 80, 32, 47, "s.newToolButton"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 84, 15, 28, "e.setLineWrap"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 85, 15, 33, "e.setWrapStyleWord"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 86, 15, 27, "e.setTabSize"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 90, 38, 65, ">.VERTICAL_SCROLLBAR_ALWAYS"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 91, 38, 66, ">.HORIZONTAL_SCROLLBAR_NEVER"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 92, 24, 37, "e.getViewport"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 92, 38, 43, ").add"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 97, 15, 33, "e.setPreferredSize"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 98, 15, 20, "e.add"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 99, 79, 82, ") :void {"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 100, 20, 30, "e.setTitle"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 101, 21, 33, "n.setEnabled"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 102, 19, 28, "e.setText"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 104, 29, 38, "e.getText"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 105, 20, 26, "e.pack"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 106, 20, 29, "e.setSize"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 107, 20, 26, "e.show"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 110, 24, 27, ") :void {"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 112, 24, 33, "e.dispose"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 117, 20, 23, ") :void {"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 118, 33, 42, "e.getText"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 120, 45, 48, ") :void {"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 129, 29, 32, ") :void {"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 133, 43, 52, "e.getText"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 138, 84, 87, ") :void {"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet", 145, 38, 44, "t.save"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/ewalnut.html", 693, 14, 20, "r.add2"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/ewalnut.html", 694, 14, 20, "r.add3"),
             change("src/esrc/caplets/capWebServer/sampleDocRoot/ewalnut.html", 695, 14, 19, "r.add"),
             change("src/esrc/caplets/capWebServer/testCapEdit.e-awt", 19, 24, 37, "r.getPowerbox"),
             change("src/esrc/caplets/capWebServer/testCapEdit.e-awt", 20, 13, 21, "r.setCap"),
             change("src/esrc/caplets/capWebServer/testCapEdit.e-awt", 20, 25, 44, "x.INITIAL_DOC_RCVRS"),
             change("src/esrc/caplets/capWebServer/testCapEdit.e-awt", 21, 13, 25, "r.launchFile"),
             change("src/esrc/caplets/capWebServer/testCapEdit.e-awt", 22, 5, 17, "p.blockAtTop"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 27, 32, 40, "x.optCap"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 27, 48, 57, "x.TRACELN"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 28, 33, 41, "x.optCap"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 28, 49, 62, "x.FRAME_MAKER"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 29, 31, 39, "x.optCap"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 29, 47, 58, "x.URL_MAKER"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 30, 30, 38, "x.optCap"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 30, 46, 64, "x.LOCAL__URIGETTER"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 47, 19, 29, "t.endsWith"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 51, 36, 49, "h.lastIndexOf"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 53, 23, 36, "h.lastIndexOf"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 54, 38, 51, "t.lastIndexOf"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 54, 61, 67, "t.size"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 72, 55, 61, "h.size"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 72, 75, 81, "x.size"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 83, 37, 47, "r.relative"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 85, 21, 37, "t.toExternalForm"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 91, 24, 33, "].diverge"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 95, 25, 32, "].asMap"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 95, 33, 42, ").diverge"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 96, 24, 33, "x.TRACELN"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 99, 23, 28, "p.get"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 101, 30, 33, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 105, 33, 42, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 105, 70, 76, "y.size"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 107, 34, 40, "r.size"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 107, 68, 74, "s.maps"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 108, 37, 46, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 108, 74, 80, "y.size"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 122, 41, 50, "x.TRACELN"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 126, 41, 44, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 128, 21, 32, "e.setLayout"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 129, 21, 39, "e.setPreferredSize"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 130, 21, 38, "e.setViewportView"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 134, 48, 51, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 142, 34, 37, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 143, 27, 39, "t.getKeyCode"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 143, 64, 74, ">.VK_ENTER"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 144, 29, 38, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 149, 15, 31, "d.addKeyListener"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 151, 15, 28, "e.setEditable"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 152, 15, 31, "e.setContentType"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 154, 13, 39, "w.setDefaultCloseOperation"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 154, 62, 80, ">.DISPOSE_ON_CLOSE"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 155, 29, 45, "w.getContentPane"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 157, 17, 45, "e.setVerticalScrollBarPolicy"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 159, 17, 35, "e.setPreferredSize"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 161, 23, 26, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 161, 35, 44, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 162, 30, 41, "t.newButton"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 163, 25, 28, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 164, 41, 62, "x.requestFileRcvrsVow"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 165, 53, 56, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 166, 30, 36, "s.size"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 168, 42, 51, "d.getText"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 169, 30, 36, "t.size"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 169, 54, 63, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 173, 34, 45, "t.newButton"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 178, 15, 26, "e.setLayout"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 179, 15, 20, "e.add"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 190, 23, 26, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 191, 40, 49, "d.getText"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 192, 22, 28, "y.push"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 197, 38, 54, "l.openConnection"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 198, 27, 36, "n.connect"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 199, 44, 56, "n.getContent"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 201, 31, 52, "x.spinoffCapletStream"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 204, 27, 39, "r.reactToURL"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 205, 41, 50, "l.getText"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 207, 27, 44, "r.reactToPageText"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 213, 30, 33, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 214, 23, 32, "d.setText"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 215, 25, 34, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 217, 22, 25, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 218, 22, 27, "y.pop"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 219, 26, 32, "y.size"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 219, 50, 59, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 219, 66, 71, "y.pop"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 222, 43, 56, "r.reactToCopy"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowser.caplet", 227, 51, 64, "r.reactToCopy"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 27, 32, 40, "x.optCap"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 27, 48, 57, "x.TRACELN"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 28, 33, 41, "x.optCap"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 28, 49, 62, "x.FRAME_MAKER"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 29, 31, 39, "x.optCap"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 29, 47, 58, "x.URL_MAKER"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 30, 30, 38, "x.optCap"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 30, 46, 64, "x.LOCAL__URIGETTER"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 41, 63, 69, "e.size"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 53, 19, 29, "t.endsWith"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 57, 36, 49, "h.lastIndexOf"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 59, 23, 36, "h.lastIndexOf"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 60, 38, 51, "t.lastIndexOf"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 60, 61, 67, "t.size"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 76, 37, 47, "r.relative"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 78, 21, 37, "t.toExternalForm"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 88, 41, 51, "r.relative"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 119, 29, 36, "].asMap"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 119, 37, 46, ").diverge"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 120, 28, 37, "x.TRACELN"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 124, 27, 32, "p.get"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 127, 45, 54, "x.TRACELN"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 138, 30, 33, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 139, 45, 54, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 145, 26, 29, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 151, 45, 48, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 153, 21, 32, "e.setLayout"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 154, 21, 39, "e.setPreferredSize"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 155, 21, 38, "e.setViewportView"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 159, 48, 51, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 162, 61, 80, "r.getRenderPGranter"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 169, 34, 37, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 170, 27, 39, "t.getKeyCode"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 170, 64, 74, ">.VK_ENTER"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 171, 29, 38, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 176, 15, 31, "d.addKeyListener"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 178, 15, 28, "e.setEditable"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 179, 15, 31, "e.setContentType"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 180, 15, 24, "e.setText"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 184, 13, 39, "w.setDefaultCloseOperation"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 184, 62, 80, ">.DISPOSE_ON_CLOSE"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 185, 29, 45, "w.getContentPane"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 187, 17, 45, "e.setVerticalScrollBarPolicy"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 189, 17, 35, "e.setPreferredSize"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 191, 23, 26, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 191, 35, 44, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 192, 30, 41, "t.newButton"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 193, 25, 28, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 194, 41, 62, "x.requestFileRcvrsVow"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 195, 53, 56, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 196, 30, 36, "s.size"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 199, 42, 51, "d.getText"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 200, 30, 36, "t.size"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 200, 54, 63, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 204, 34, 45, "t.newButton"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 210, 15, 26, "e.setLayout"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 211, 15, 20, "e.add"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 221, 23, 26, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 222, 40, 49, "d.getText"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 224, 30, 42, "k.isSelected"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 225, 43, 51, "r.revoke"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 233, 38, 54, "l.openConnection"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 234, 27, 36, "n.connect"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 235, 44, 56, "n.getContent"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 237, 31, 52, "x.spinoffCapletStream"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 243, 47, 69, "r.getUrlRequestReactor"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 246, 27, 39, "r.reactToURL"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 246, 55, 67, "r.getTreeVow"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 248, 65, 77, "r.getHandler"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 250, 34, 43, "l.getText"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 262, 38, 45, "r.parse"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 270, 27, 44, "r.reactToPageText"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 276, 26, 29, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 277, 23, 32, "d.setText"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 277, 35, 51, "l.toExternalForm"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 278, 25, 34, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 288, 43, 56, "r.reactToCopy"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet", 293, 51, 64, "r.reactToCopy"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 25, 32, 40, "x.optCap"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 25, 48, 57, "x.TRACELN"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 26, 33, 41, "x.optCap"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 26, 49, 62, "x.FRAME_MAKER"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 27, 31, 39, "x.optCap"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 27, 47, 58, "x.URL_MAKER"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 28, 30, 38, "x.optCap"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 28, 46, 64, "x.LOCAL__URIGETTER"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 45, 19, 29, "t.endsWith"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 49, 36, 49, "h.lastIndexOf"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 51, 23, 36, "h.lastIndexOf"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 52, 38, 51, "t.lastIndexOf"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 52, 61, 67, "t.size"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 70, 55, 61, "h.size"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 70, 75, 81, "x.size"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 81, 37, 47, "r.relative"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 83, 21, 37, "t.toExternalForm"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 89, 24, 33, "].diverge"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 93, 25, 32, "].asMap"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 93, 33, 42, ").diverge"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 94, 24, 33, "x.TRACELN"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 97, 23, 28, "p.get"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 99, 30, 33, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 103, 33, 42, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 103, 70, 76, "y.size"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 105, 34, 40, "r.size"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 105, 68, 74, "s.maps"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 106, 37, 46, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 106, 74, 80, "y.size"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 120, 41, 50, "x.TRACELN"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 124, 41, 44, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 126, 21, 32, "e.setLayout"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 127, 21, 39, "e.setPreferredSize"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 128, 21, 38, "e.setViewportView"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 132, 48, 51, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 140, 34, 37, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 141, 27, 39, "t.getKeyCode"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 141, 64, 74, ">.VK_ENTER"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 142, 29, 38, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 147, 15, 31, "d.addKeyListener"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 149, 15, 28, "e.setEditable"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 150, 15, 31, "e.setContentType"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 151, 15, 24, "e.setText"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 155, 13, 39, "w.setDefaultCloseOperation"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 155, 62, 80, ">.DISPOSE_ON_CLOSE"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 156, 29, 45, "w.getContentPane"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 158, 17, 45, "e.setVerticalScrollBarPolicy"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 160, 17, 35, "e.setPreferredSize"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 162, 23, 26, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 162, 35, 44, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 163, 30, 41, "t.newButton"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 164, 25, 28, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 165, 41, 62, "x.requestFilesPromise"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 166, 53, 56, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 167, 30, 36, "s.size"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 169, 42, 51, "d.getText"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 170, 30, 36, "t.size"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 170, 54, 63, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 174, 34, 45, "t.newButton"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 179, 15, 26, "e.setLayout"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 180, 15, 20, "e.add"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 191, 23, 26, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 192, 40, 49, "d.getText"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 193, 22, 28, "y.push"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 198, 38, 54, "l.openConnection"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 199, 27, 36, "n.connect"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 200, 44, 56, "n.getContent"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 202, 31, 52, "x.spinoffCapletStream"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 205, 27, 39, "r.reactToURL"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 206, 41, 50, "l.getText"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 208, 27, 44, "r.reactToPageText"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 214, 30, 33, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 215, 23, 32, "d.setText"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 216, 25, 34, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 218, 22, 25, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 219, 22, 27, "y.pop"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 220, 26, 32, "y.size"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 220, 50, 59, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 220, 66, 71, "y.pop"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 223, 43, 56, "r.reactToCopy"),
             change("src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet", 228, 51, 64, "r.reactToCopy"),
             change("src/esrc/caplets/darpaBrowser/testDarpaBrowser.e-awt", 22, 24, 37, "r.getPowerbox"),
             change("src/esrc/caplets/darpaBrowser/testDarpaBrowser.e-awt", 23, 13, 21, "r.setCap"),
             change("src/esrc/caplets/darpaBrowser/testDarpaBrowser.e-awt", 23, 25, 44, "x.INITIAL_DOC_RCVRS"),
             change("src/esrc/caplets/darpaBrowser/testDarpaBrowser.e-awt", 24, 13, 25, "r.launchFile"),
             change("src/esrc/caplets/darpaBrowser/testDarpaBrowser.e-awt", 25, 5, 17, "p.blockAtTop"),
             change("src/esrc/caplets/darpaBrowser/testMemless.e-awt", 22, 24, 37, "r.getPowerbox"),
             change("src/esrc/caplets/darpaBrowser/testMemless.e-awt", 23, 13, 21, "r.setCap"),
             change("src/esrc/caplets/darpaBrowser/testMemless.e-awt", 23, 25, 44, "x.INITIAL_DOC_RCVRS"),
             change("src/esrc/caplets/darpaBrowser/testMemless.e-awt", 24, 13, 25, "r.launchFile"),
             change("src/esrc/caplets/darpaBrowser/testMemless.e-awt", 25, 5, 17, "p.blockAtTop"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 27, 32, 40, "x.optCap"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 27, 48, 57, "x.TRACELN"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 28, 33, 41, "x.optCap"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 28, 49, 62, "x.FRAME_MAKER"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 29, 31, 39, "x.optCap"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 29, 47, 58, "x.URL_MAKER"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 30, 30, 38, "x.optCap"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 30, 46, 64, "x.LOCAL__URIGETTER"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 47, 19, 29, "t.endsWith"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 51, 36, 49, "h.lastIndexOf"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 53, 23, 36, "h.lastIndexOf"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 54, 38, 51, "t.lastIndexOf"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 54, 61, 67, "t.size"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 72, 55, 61, "h.size"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 72, 75, 81, "x.size"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 83, 37, 47, "r.relative"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 85, 21, 37, "t.toExternalForm"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 91, 24, 33, "].diverge"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 95, 25, 32, "].asMap"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 95, 33, 42, ").diverge"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 96, 24, 33, "x.TRACELN"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 99, 23, 28, "p.get"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 101, 30, 33, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 105, 33, 42, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 105, 70, 76, "y.size"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 107, 34, 40, "r.size"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 107, 68, 74, "s.maps"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 108, 37, 46, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 108, 74, 80, "y.size"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 122, 41, 50, "x.TRACELN"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 126, 41, 44, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 128, 21, 32, "e.setLayout"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 129, 21, 39, "e.setPreferredSize"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 130, 21, 38, "e.setViewportView"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 134, 48, 51, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 142, 34, 37, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 143, 27, 39, "t.getKeyCode"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 143, 64, 74, ">.VK_ENTER"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 144, 29, 38, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 149, 15, 31, "d.addKeyListener"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 151, 15, 28, "e.setEditable"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 152, 15, 31, "e.setContentType"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 153, 15, 24, "e.setText"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 157, 13, 39, "w.setDefaultCloseOperation"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 157, 62, 80, ">.DISPOSE_ON_CLOSE"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 158, 29, 45, "w.getContentPane"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 160, 17, 45, "e.setVerticalScrollBarPolicy"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 162, 17, 35, "e.setPreferredSize"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 164, 23, 26, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 164, 35, 44, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 165, 30, 41, "t.newButton"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 166, 25, 28, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 167, 41, 62, "x.requestFilesPromise"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 168, 53, 56, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 169, 30, 36, "s.size"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 171, 42, 51, "d.getText"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 172, 30, 36, "t.size"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 172, 54, 63, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 176, 34, 45, "t.newButton"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 181, 15, 26, "e.setLayout"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 182, 15, 20, "e.add"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 193, 23, 26, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 194, 40, 49, "d.getText"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 195, 22, 28, "y.push"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 200, 38, 54, "l.openConnection"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 201, 27, 36, "n.connect"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 202, 44, 56, "n.getContent"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 204, 31, 52, "x.spinoffCapletStream"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 207, 27, 39, "r.reactToURL"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 208, 41, 50, "l.getText"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 210, 27, 44, "r.reactToPageText"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 216, 30, 33, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 217, 23, 32, "d.setText"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 218, 25, 34, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 220, 22, 25, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 221, 22, 27, "y.pop"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 222, 26, 32, "y.size"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 222, 50, 59, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 222, 66, 71, "y.pop"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 225, 43, 56, "r.reactToCopy"),
             change("src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet", 230, 51, 64, "r.reactToCopy"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 29, 32, 40, "x.optCap"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 29, 48, 57, "x.TRACELN"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 30, 33, 41, "x.optCap"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 30, 49, 62, "x.FRAME_MAKER"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 31, 31, 39, "x.optCap"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 31, 47, 58, "x.URL_MAKER"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 32, 30, 38, "x.optCap"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 32, 46, 64, "x.LOCAL__URIGETTER"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 49, 19, 29, "t.endsWith"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 53, 36, 49, "h.lastIndexOf"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 55, 23, 36, "h.lastIndexOf"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 56, 38, 51, "t.lastIndexOf"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 56, 61, 67, "t.size"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 74, 55, 61, "h.size"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 74, 75, 81, "x.size"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 85, 37, 47, "r.relative"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 87, 21, 37, "t.toExternalForm"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 93, 24, 33, "].diverge"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 97, 25, 32, "].asMap"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 97, 33, 42, ").diverge"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 98, 24, 33, "x.TRACELN"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 101, 23, 28, "p.get"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 103, 30, 33, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 107, 33, 42, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 107, 70, 76, "y.size"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 109, 34, 40, "r.size"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 109, 68, 74, "s.maps"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 110, 37, 46, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 110, 74, 80, "y.size"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 124, 41, 50, "x.TRACELN"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 128, 41, 44, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 130, 21, 32, "e.setLayout"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 131, 21, 39, "e.setPreferredSize"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 132, 21, 38, "e.setViewportView"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 136, 48, 51, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 147, 34, 37, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 148, 27, 39, "t.getKeyCode"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 148, 64, 74, ">.VK_ENTER"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 149, 29, 38, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 154, 15, 31, "d.addKeyListener"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 156, 15, 28, "e.setEditable"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 157, 15, 31, "e.setContentType"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 158, 15, 24, "e.setText"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 162, 13, 39, "w.setDefaultCloseOperation"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 162, 62, 80, ">.DISPOSE_ON_CLOSE"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 163, 29, 45, "w.getContentPane"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 165, 17, 45, "e.setVerticalScrollBarPolicy"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 167, 17, 35, "e.setPreferredSize"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 169, 23, 26, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 169, 35, 44, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 170, 30, 41, "t.newButton"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 171, 25, 28, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 172, 41, 62, "x.requestFileRcvrsVow"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 173, 53, 56, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 174, 30, 36, "s.size"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 176, 42, 51, "d.getText"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 177, 30, 36, "t.size"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 177, 54, 63, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 181, 34, 45, "t.newButton"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 186, 15, 26, "e.setLayout"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 187, 15, 20, "e.add"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 198, 23, 26, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 199, 40, 49, "d.getText"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 200, 22, 28, "y.push"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 205, 38, 54, "l.openConnection"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 206, 27, 36, "n.connect"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 207, 44, 56, "n.getContent"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 209, 31, 52, "x.spinoffCapletStream"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 212, 27, 39, "r.reactToURL"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 213, 41, 50, "l.getText"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 215, 27, 44, "r.reactToPageText"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 221, 30, 33, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 222, 23, 32, "d.setText"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 223, 25, 34, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 225, 22, 25, ") :void {"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 226, 22, 27, "y.pop"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 227, 26, 32, "y.size"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 227, 50, 59, "r.gotoURL"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 227, 66, 71, "y.pop"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 230, 43, 56, "r.reactToCopy"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 235, 51, 64, "r.reactToCopy"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 249, 24, 37, "r.getPowerbox"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 250, 13, 21, "r.setCap"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 250, 24, 42, "x.LOCAL__URIGETTER"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 251, 13, 34, "r.startExternalCaplet"),
             change("src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt", 253, 5, 17, "p.blockAtTop"),
             change("src/esrc/caplets/loveBug/loveBug.caplet", 19, 32, 40, "x.optCap"),
             change("src/esrc/caplets/loveBug/loveBug.caplet", 19, 48, 57, "x.TRACELN"),
             change("src/esrc/caplets/loveBug/loveBug.caplet", 20, 33, 41, "x.optCap"),
             change("src/esrc/caplets/loveBug/loveBug.caplet", 20, 49, 62, "x.FRAME_MAKER"),
             change("src/esrc/caplets/loveBug/loveBug.caplet", 21, 36, 44, "x.optCap"),
             change("src/esrc/caplets/loveBug/loveBug.caplet", 21, 52, 65, "x.DROP_TARGET"),
             change("src/esrc/caplets/loveBug/loveBug.caplet", 37, 57, 60, ") :void {"),
             change("src/esrc/caplets/loveBug/loveBug.caplet", 38, 39, 60, "x.requestFileRcvrsVow"),
             change("src/esrc/caplets/loveBug/loveBug.caplet", 40, 50, 53, ") :void {"),
             change("src/esrc/caplets/loveBug/loveBug.caplet", 41, 28, 34, "s.size"),
             change("src/esrc/caplets/testCaplets/helloWorldCapletAuthor.caplet", 7, 32, 40, "x.optCap"),
             change("src/esrc/caplets/testCaplets/helloWorldCapletAuthor.caplet", 7, 48, 57, "x.TRACELN"),
             change("src/esrc/caplets/testCaplets/helloWorldCapletAuthor.caplet", 9, 15, 28, "x.requestExit"),
             change("src/esrc/caplets/testCaplets/helloWorldCapletPlusAuthor.caplet", 9, 32, 40, "x.optCap"),
             change("src/esrc/caplets/testCaplets/helloWorldCapletPlusAuthor.caplet", 9, 48, 57, "x.TRACELN"),
             change("src/esrc/caplets/testCaplets/helloWorldCapletPlusAuthor.caplet", 11, 33, 41, "x.optCap"),
             change("src/esrc/caplets/testCaplets/helloWorldCapletPlusAuthor.caplet", 11, 49, 62, "x.FRAME_MAKER"),
             change("src/esrc/caplets/testCaplets/helloWorldCapletPlusAuthor.caplet", 15, 12, 28, "e.getContentPane"),
             change("src/esrc/caplets/testCaplets/helloWorldCapletPlusAuthor.caplet", 15, 29, 34, ").add"),
             change("src/esrc/caplets/testCaplets/helloWorldCapletPlusAuthor.caplet", 17, 34, 37, ") :void {"),
             change("src/esrc/caplets/testCaplets/helloWorldCapletPlusAuthor.caplet", 18, 23, 36, "x.requestExit"),
             change("src/esrc/caplets/testCaplets/helloWorldCapletPlusAuthor.caplet", 22, 12, 31, "e.addWindowListener"),
             change("src/esrc/caplets/testCaplets/helloWorldCapletPlusAuthor.caplet", 23, 12, 18, "e.pack"),
             change("src/esrc/caplets/testCaplets/helloWorldCapletPlusAuthor.caplet", 24, 12, 18, "e.show"),
             change("src/esrc/caplets/testCaplets/helloWorldCapletPlusAuthor.caplet", 28, 49, 52, ") :void {"),
             change("src/esrc/caplets/testCaplets/helloWorldCapletPlusAuthor.caplet", 29, 43, 46, ") :void {"),
             change("src/esrc/caplets/testCaplets/helloWorldCapletPlusAuthor.caplet", 30, 54, 57, ") :void {"),
             change("src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet", 13, 32, 40, "x.optCap"),
             change("src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet", 13, 48, 57, "x.TRACELN"),
             change("src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet", 15, 33, 41, "x.optCap"),
             change("src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet", 15, 49, 62, "x.FRAME_MAKER"),
             change("src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet", 16, 30, 38, "x.optCap"),
             change("src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet", 16, 46, 64, "x.LOCAL__URIGETTER"),
             change("src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet", 18, 62, 71, ">.getText"),
             change("src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet", 21, 12, 28, "e.getContentPane"),
             change("src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet", 21, 29, 34, ").add"),
             change("src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet", 23, 34, 37, ") :void {"),
             change("src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet", 24, 23, 36, "x.requestExit"),
             change("src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet", 28, 12, 31, "e.addWindowListener"),
             change("src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet", 29, 12, 18, "e.pack"),
             change("src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet", 30, 12, 18, "e.show"),
             change("src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet", 34, 34, 37, ") :void {"),
             change("src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet", 35, 43, 46, ") :void {"),
             change("src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet", 36, 43, 46, ") :void {"),
             change("src/esrc/caplets/testCaplets/testURLrequest.caplet", 20, 32, 40, "x.optCap"),
             change("src/esrc/caplets/testCaplets/testURLrequest.caplet", 20, 48, 57, "x.TRACELN"),
             change("src/esrc/caplets/testCaplets/testURLrequest.caplet", 22, 20, 23, ") :void {"),
             change("src/esrc/caplets/testCaplets/testURLrequest.caplet", 24, 39, 47, "x.optCap"),
             change("src/esrc/caplets/testCaplets/testURLrequest.caplet", 24, 55, 66, "x.URL_MAKER"),
             change("src/esrc/caplets/testCaplets/testURLrequest.caplet", 30, 23, 29, "t.init"),
             change("src/esrc/com/skyhunter/capDesk/testConfigurator.updoc", 16, 40, 43, ") :void {"),
             change("src/esrc/com/skyhunter/capDesk/testNavPanel.e-awt", 20, 7, 23, "l.setDiskNavRcvr"),
             change("src/esrc/com/skyhunter/capDesk/testNavPanel.e-awt", 22, 4, 20, "e.setContentPane"),
             change("src/esrc/com/skyhunter/capDesk/testNavPanel.e-awt", 22, 28, 42, "l.getMainPanel"),
             change("src/esrc/com/skyhunter/capDesk/testNavPanel.e-awt", 24, 4, 10, "e.show"),
             change("src/esrc/com/skyhunter/capDesk/testNavPanel.updoc", 20, 9, 25, "l.setDiskNavRcvr"),
             change("src/esrc/com/skyhunter/capDesk/testNavPanel.updoc", 22, 6, 22, "e.setContentPane"),
             change("src/esrc/com/skyhunter/capDesk/testNavPanel.updoc", 22, 30, 44, "l.getMainPanel"),
             change("src/esrc/com/skyhunter/capDesk/testNavPanel.updoc", 23, 6, 12, "e.show"),
             change("src/esrc/com/skyhunter/capDesk/testNavWidget.e-swt", 13, 4, 13, "e.setText"),
             change("src/esrc/com/skyhunter/capDesk/testNavWidget.e-swt", 24, 18, 34, "r.setDiskNavRcvr"),
             change("src/esrc/com/skyhunter/capDesk/testNavWidget.e-swt", 26, 36, 50, "r.getMainPanel"),
             change("src/esrc/com/skyhunter/capDesk/testNavWidget.e-swt", 29, 27, 30, ") :void {"),
             change("src/esrc/com/skyhunter/capDesk/testNavWidget.e-swt", 30, 21, 33, "t.disposeAll"),
             change("src/esrc/com/skyhunter/capDesk/testNavWidget.e-swt", 34, 4, 24, "e.addDisposeListener"),
             change("src/esrc/com/skyhunter/capDesk/testNavWidget.e-swt", 35, 4, 10, "e.open"),
             change("src/esrc/com/skyhunter/capDesk/testNavWidget.e-swt", 36, 5, 17, "p.blockAtTop"),
             change("src/esrc/com/skyhunter/convertForEDoc/bounds.updoc", 12, 25, 32, "r.split"),
             change("src/esrc/com/skyhunter/convertForEDoc/bounds.updoc", 13, 25, 31, "s.size"),
             change("src/esrc/com/skyhunter/convertForEDoc/bounds.updoc", 16, 21, 27, "h.size"),
             change("src/esrc/com/skyhunter/convertForEDoc/edoc.updoc", 1, 23, 26, ") :void {"),
             change("src/esrc/com/skyhunter/convertForEDoc/edoc.updoc", 1, 32, 41, "r.println"),
             change("src/esrc/com/skyhunter/e/awt/dnd/testSetupDropFunc.e-awt", 10, 4, 13, "t.setText"),
             change("src/esrc/com/skyhunter/e/awt/dnd/testSetupDropFunc.e-awt", 11, 4, 20, "e.getContentPane"),
             change("src/esrc/com/skyhunter/e/awt/dnd/testSetupDropFunc.e-awt", 11, 21, 26, ").add"),
             change("src/esrc/com/skyhunter/e/awt/dnd/testSetupDropFunc.e-awt", 13, 22, 25, ") :void {"),
             change("src/esrc/com/skyhunter/e/awt/dnd/testSetupDropFunc.e-awt", 15, 33, 39, "s.size"),
             change("src/esrc/com/skyhunter/e/awt/dnd/testSetupDropFunc.e-awt", 16, 21, 27, "s.size"),
             change("src/esrc/com/skyhunter/e/awt/dnd/testSetupDropFunc.e-awt", 17, 34, 43, "].getText"),
             change("src/esrc/com/skyhunter/e/awt/dnd/testSetupDropFunc.e-awt", 22, 31, 51, "r.javaFileListFlavor"),
             change("src/esrc/com/skyhunter/e/awt/dnd/testSetupDropFunc.e-awt", 24, 4, 10, "e.pack"),
             change("src/esrc/com/skyhunter/e/awt/dnd/testSetupDropFunc.e-awt", 25, 4, 10, "e.show"),
             change("src/esrc/com/skyhunter/e/awt/dnd/testSetupDropFunc.e-awt", 27, 5, 17, "p.blockAtTop"),
             change("src/esrc/com/skyhunter/e/lang/vatTester.e", 6, 17, 20, ") :void {"),
             change("src/esrc/com/skyhunter/e/lang/vatTester.e", 6, 25, 34, "r.println"),
             change("src/esrc/com/skyhunter/e/lang/vatTester.e", 8, 9, 19, "r.onTheAir"),
             change("src/esrc/com/skyhunter/e/lang/vatTester.e", 9, 70, 75, ">.run"),
             change("src/esrc/com/skyhunter/e/lang/vatTester.e", 16, 48, 58, "p.getProps"),
             change("src/esrc/com/skyhunter/e/lang/vatTester.e", 19, 29, 51, "r.promisePrimordialObj"),
             change("src/esrc/com/skyhunter/e/lang/vatTester.e", 21, 20, 32, "r.readStdout"),
             change("src/esrc/com/skyhunter/e/lang/vatTester.e", 22, 20, 32, "r.readStderr"),
             change("src/esrc/com/skyhunter/e/lang/vatTester.e", 25, 26, 34, "r.getVat"),
             change("src/esrc/com/skyhunter/e/lang/vatTester.e", 29, 28, 31, ") :void {"),
             change("src/esrc/com/skyhunter/e/lang/vatTester.e", 33, 30, 33, ") :void {"),
             change("src/esrc/com/skyhunter/e/lang/vatTester.e", 36, 13, 28, "p.continueAtTop"),
             change("src/esrc/com/skyhunter/e/lang/vatTester.e", 42, 5, 17, "p.blockAtTop"),
             change("src/esrc/com/skyhunter/e/security/powerBoxControllerMakerAuthorTester.e-awt", 6, 17, 20, ") :void {"),
             change("src/esrc/com/skyhunter/e/security/powerBoxControllerMakerAuthorTester.e-awt", 6, 25, 34, "r.println"),
             change("src/esrc/com/skyhunter/e/security/powerBoxControllerMakerAuthorTester.e-awt", 7, 85, 90, ">.run"),
             change("src/esrc/com/skyhunter/e/security/powerBoxControllerMakerAuthorTester.e-awt", 15, 17, 20, ") :void {"),
             change("src/esrc/com/skyhunter/e/security/powerBoxControllerMakerAuthorTester.e-awt", 16, 36, 44, "x.optCap"),
             change("src/esrc/com/skyhunter/e/security/powerBoxControllerMakerAuthorTester.e-awt", 16, 52, 61, "x.TRACELN"),
             change("src/esrc/com/skyhunter/e/security/powerBoxControllerMakerAuthorTester.e-awt", 20, 7, 14, "t.start"),
             change("src/esrc/com/skyhunter/e/security/powerBoxControllerMakerAuthorTester.e-awt", 29, 12, 33, "r.startExternalCaplet"),
             change("src/esrc/com/skyhunter/e/security/powerBoxControllerMakerAuthorTester.e-awt", 29, 57, 70, "r.getPowerbox"),
             change("src/esrc/com/skyhunter/e/security/powerBoxControllerMakerAuthorTester.e-awt", 55, 25, 38, "r.getPowerbox"),
             change("src/esrc/com/skyhunter/e/security/powerBoxControllerMakerAuthorTester.e-awt", 57, 5, 17, "p.blockAtTop"),
             change("src/esrc/com/skyhunter/e/util/testDomTreeKit.e", 8, 12, 15, ") :void {"),
             change("src/esrc/com/skyhunter/e/util/testDomTreeKit.e", 10, 37, 56, "t.extractChildNodes"),
             change("src/esrc/com/skyhunter/e/util/testDomTreeKit.e", 11, 38, 50, "t.xmlFromMap"),
             change("src/esrc/com/skyhunter/e/util/timer.e", 11, 15, 18, ") :void {"),
             change("src/esrc/com/skyhunter/e/util/timer.e", 13, 12, 18, "E.call"),
             change("src/esrc/com/skyhunter/e/util/timer.e", 17, 57, 67, ">.theTimer"),
             change("src/esrc/com/skyhunter/e/util/timer.e", 18, 8, 15, "r.after"),
             change("src/esrc/com/skyhunter/eBrowser/syncServerTester.e-awt", 6, 17, 20, ") :void {"),
             change("src/esrc/com/skyhunter/eBrowser/syncServerTester.e-awt", 6, 25, 34, "r.println"),
             change("src/esrc/com/skyhunter/eBrowser/syncServerTester.e-awt", 7, 71, 76, ">.run"),
             change("src/esrc/com/skyhunter/eBrowser/syncServerTester.e-awt", 13, 19, 33, "r.refreshFuncs"),
             change("src/esrc/com/skyhunter/ex/swing/dialogtest.e-awt", 13, 5, 17, "p.blockAtTop"),
             change("src/esrc/com/skyhunter/ex/swing/toolButtonTest.e-awt", 9, 13, 16, ") :void {"),
             change("src/esrc/com/skyhunter/ex/swing/toolButtonTest.e-awt", 12, 18, 21, ") :void {"),
             change("src/esrc/com/skyhunter/ex/swing/toolButtonTest.e-awt", 12, 26, 35, "r.println"),
             change("src/esrc/com/skyhunter/ex/swing/toolButtonTest.e-awt", 15, 20, 35, "s.newToolButton"),
             change("src/esrc/com/skyhunter/ex/swing/toolButtonTest.e-awt", 19, 4, 20, "e.getContentPane"),
             change("src/esrc/com/skyhunter/ex/swing/toolButtonTest.e-awt", 19, 21, 26, ").add"),
             change("src/esrc/com/skyhunter/ex/swing/toolButtonTest.e-awt", 20, 4, 20, "e.getContentPane"),
             change("src/esrc/com/skyhunter/ex/swing/toolButtonTest.e-awt", 20, 21, 26, ").add"),
             change("src/esrc/com/skyhunter/ex/swing/toolButtonTest.e-awt", 20, 33, 44, "s.labelIcon"),
             change("src/esrc/com/skyhunter/ex/swing/toolButtonTest.e-awt", 21, 4, 10, "e.pack"),
             change("src/esrc/com/skyhunter/ex/swing/toolButtonTest.e-awt", 22, 4, 10, "e.show"),
             change("src/esrc/com/skyhunter/ex/swing/toolButtonTest.e-awt", 24, 5, 17, "p.blockAtTop"),
             change("src/esrc/com/skyhunter/installer/testAgreedCapsVow.e-swt", 6, 81, 86, ">.run"),
             change("src/esrc/com/skyhunter/installer/testAgreedCapsVow.e-swt", 30, 36, 47, ">.getParent"),
             change("src/esrc/com/skyhunter/installer/testAgreedCapsVow.e-swt", 35, 31, 34, ") :void {"),
             change("src/esrc/com/skyhunter/installer/testAgreedCapsVow.e-swt", 36, 39, 51, "t.getCapsXML"),
             change("src/esrc/com/skyhunter/installer/testAgreedCapsVow.e-swt", 37, 30, 41, "t.getPetMap"),
             change("src/esrc/com/skyhunter/installer/testAgreedCapsVow.e-swt", 40, 5, 17, "p.blockAtTop"),
             change("src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc", 5, 16, 19, ") :void {"),
             change("src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc", 7, 38, 42, ">.gc"),
             change("src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc", 21, 10, 17, "e.asMap"),
             change("src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc", 25, 39, 49, "p.getProps"),
             change("src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc", 29, 12, 21, "p.getArgs"),
             change("src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc", 32, 12, 22, "p.getProps"),
             change("src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc", 32, 23, 29, ").size"),
             change("src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc", 35, 12, 23, "p.getExpand"),
             change("src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc", 38, 12, 23, "p.setExpand"),
             change("src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc", 39, 12, 23, "p.getExpand"),
             change("src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc", 42, 12, 24, "p.pushResult"),
             change("src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc", 43, 12, 24, "p.pushResult"),
             change("src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc", 44, 12, 23, "p.getResult"),
             change("src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc", 47, 12, 23, "p.getResult"),
             change("src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc", 50, 12, 23, "p.getResult"),
             change("src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc", 57, 12, 24, "p.pushResult"),
             change("src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc", 58, 12, 23, "p.getResult"),
             change("src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc", 61, 12, 23, "p.getResult"),
             change("src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc", 64, 12, 16, "p.gc"),
             change("src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc", 66, 12, 23, "p.getResult"),
             change("src/esrc/org/erights/e/elang/cmd/cmdMakerMaker.updoc", 11, 16, 19, ") :void {"),
             change("src/esrc/org/erights/e/elang/cmd/cmdMakerMaker.updoc", 13, 38, 42, ">.gc"),
             change("src/esrc/org/erights/e/elang/cmd/cmdMakerMaker.updoc", 24, 47, 66, "r.makeBufferingPair"),
             change("src/esrc/org/erights/e/elang/cmd/cmdMakerMaker.updoc", 27, 47, 66, "r.makeBufferingPair"),
             change("src/esrc/org/erights/e/elang/cmd/cmdMakerMaker.updoc", 33, 24, 34, "p.getProps"),
             change("src/esrc/org/erights/e/elang/cmd/cmdMakerMaker.updoc", 34, 33, 45, "p.privileged"),
             change("src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc", 17, 9, 27, "l.addStatusReactor"),
             change("src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc", 18, 9, 18, "l.enqueue"),
             change("src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc", 24, 10, 19, "l.enqueue"),
             change("src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc", 25, 10, 22, "l.blockAtTop"),
             change("src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc", 26, 10, 19, "l.enqueue"),
             change("src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc", 32, 9, 24, "l.continueAtTop"),
             change("src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc", 42, 16, 19, ") :void {"),
             change("src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc", 45, 13, 22, "l.enqueue"),
             change("src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc", 46, 13, 24, "l.waitAtTop"),
             change("src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc", 50, 9, 18, "l.enqueue"),
             change("src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc", 59, 6, 15, "r.resolve"),
             change("src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc", 64, 28, 44, "l.getExitPairVow"),
             change("src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc", 70, 17, 20, ") :void {"),
             change("src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc", 71, 13, 24, "l.exitAtTop"),
             change("src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc", 72, 30, 46, "l.getExitPairVow"),
             change("src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc", 73, 13, 22, "l.enqueue"),
             change("src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc", 77, 9, 18, "l.enqueue"),
             change("src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc", 91, 17, 20, ") :void {"),
             change("src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc", 94, 14, 23, "3.enqueue"),
             change("src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc", 95, 14, 26, "3.blockAtTop"),
             change("src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc", 102, 10, 28, "3.addStatusReactor"),
             change("src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc", 103, 10, 19, "3.enqueue"),
             change("src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc", 111, 30, 46, "3.getExitPairVow"),
             change("src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc", 117, 10, 21, "3.exitAtTop"),
             change("src/esrc/org/erights/e/tools/args/argParserCya.updoc", 32, 24, 38, "g.getOptString"),
             change("src/esrc/org/erights/e/tools/args/argParserCya.updoc", 82, 44, 58, "m.getOptString"),
             change("src/esrc/org/erights/e/tools/args/argParserCya.updoc", 122, 34, 40, "s.size"),
             change("src/esrc/org/erights/e/tools/args/argParserCya.updoc", 124, 27, 33, "s.size"),
             change("src/esrc/org/erights/e/tools/args/argParserCya.updoc", 146, 24, 38, "t.getOptString"),
             change("src/esrc/org/erights/e/tools/args/argParserCya.updoc", 158, 49, 63, "t.getOptString"),
             change("src/esrc/org/erights/e/tools/args/argParserCya.updoc", 161, 46, 60, "m.getOptString"),
             change("src/esrc/org/erights/e/tools/args/argParserCya.updoc", 161, 75, 89, "t.getOptString"),
             change("src/esrc/org/erights/e/tools/args/argParserCya.updoc", 164, 47, 61, "t.getOptString"),
             change("src/esrc/org/erights/e/tools/args/argParserCya.updoc", 170, 49, 63, "t.getOptString"),
             change("src/esrc/org/erights/e/tools/args/argParserCya.updoc", 204, 24, 33, "].diverge"),
             change("src/esrc/org/erights/e/tools/args/argParserCya.updoc", 205, 28, 37, "].diverge"),
             change("src/esrc/org/erights/e/tools/args/argParserCya.updoc", 207, 26, 33, "r.split"),
             change("src/esrc/org/erights/e/tools/args/argParserCya.updoc", 208, 35, 42, "r.split"),
             change("src/esrc/org/erights/e/tools/args/argParserCya.updoc", 209, 32, 38, "s.size"),
             change("src/esrc/org/erights/e/tools/args/argParserCya.updoc", 210, 22, 28, "s.push"),
             change("src/esrc/org/erights/e/tools/args/argParserCya.updoc", 211, 18, 24, "s.push"),
             change("src/esrc/org/erights/e/tools/args/argParserCya.updoc", 214, 46, 55, ").diverge"),
             change("src/esrc/org/erights/e/tools/args/argParserCya.updoc", 217, 47, 53, "l.size"),
             change("src/esrc/org/erights/e/tools/args/argParserCya.updoc", 223, 58, 64, "l.size"),
             change("src/esrc/org/erights/e/tools/args/argParserCya.updoc", 250, 35, 38, ") :void {"),
             change("src/esrc/org/erights/e/tools/args/argParserCya.updoc", 253, 29, 43, "y.getOptString"),
             change("src/esrc/org/erights/e/tools/args/argParserCya.updoc", 254, 36, 41, "p.get"),
             change("src/esrc/org/erights/e/tools/args/argParserCya.updoc", 279, 26, 33, "w.eject"),
             change("src/esrc/org/erights/e/tools/args/makeCapExporter.updoc", 15, 15, 25, "r.onTheAir"),
             change("src/esrc/org/erights/e/tools/args/makeCapExporter.updoc", 25, 35, 38, ") :void {"),
             change("src/esrc/org/erights/e/tools/args/makeCapExporter.updoc", 26, 26, 35, "f.getRcvr"),
             change("src/esrc/org/erights/e/tools/args/makeCapExporter.updoc", 33, 29, 42, "r.sturdyToURI"),
             change("src/esrc/org/erights/e/tools/args/makeCapExporter.updoc", 53, 17, 26, "2.getRcvr"),
             change("src/esrc/org/erights/e/tools/args/makeCapExporter.updoc", 59, 8, 17, "3.getRcvr"),
             change("src/esrc/org/erights/e/tools/collect/propUtils.updoc", 7, 24, 34, "p.getProps"),
             change("src/esrc/org/erights/e/tools/collect/propUtils.updoc", 8, 14, 24, "s.testProp"),
             change("src/esrc/org/erights/e/tools/collect/propUtils.updoc", 11, 14, 24, "s.testProp"),
             change("src/esrc/org/erights/e/tools/collect/propUtils.updoc", 18, 14, 24, "s.testProp"),
             change("src/esrc/org/erights/e/tools/collect/propUtils.updoc", 21, 14, 24, "s.testProp"),
             change("src/esrc/scripts/ButtonPointer.e", 8, 22, 25, ") :void {"),
             change("src/esrc/scripts/ButtonPointer.e", 13, 13, 16, ") :void {"),
             change("src/esrc/scripts/ButtonPointer.e", 14, 9, 16, "r.print"),
             change("src/esrc/scripts/ButtonPointer.e", 16, 17, 20, ") :void {"),
             change("src/esrc/scripts/ButtonPointer.e", 17, 9, 18, "r.println"),
             change("src/esrc/scripts/ButtonPointer.e", 20, 36, 39, ") :void {"),
             change("src/esrc/scripts/ButtonPointer.e", 21, 11, 19, "e.exists"),
             change("src/esrc/scripts/ButtonPointer.e", 22, 23, 32, "e.getText"),
             change("src/esrc/scripts/ButtonPointer.e", 26, 15, 24, "e.setText"),
             change("src/esrc/scripts/ButtonPointer.e", 40, 21, 31, "r.readLine"),
             change("src/esrc/scripts/ButtonPointer.e", 44, 27, 33, "e.trim"),
             change("src/esrc/scripts/ButtonPointer.e", 46, 33, 39, "e.size"),
             change("src/esrc/scripts/ButtonPointer.e", 46, 47, 53, "e.size"),
             change("src/esrc/scripts/ButtonPointer.e", 66, 16, 19, ") :void {"),
             change("src/esrc/scripts/ButtonPointer.e", 67, 35, 47, "].textReader"),
             change("src/esrc/scripts/ButtonPointer.e", 71, 13, 16, ") :void {"),
             change("src/esrc/scripts/ButtonPointer.e", 78, 15, 18, ") :void {"),
             change("src/esrc/scripts/ButtonPointer.e", 79, 11, 26, "v.setNextButton"),
             change("src/esrc/scripts/ButtonPointer.e", 81, 23, 38, "t.getParentFile"),
             change("src/esrc/scripts/ButtonPointer.e", 93, 17, 32, "t.setDownButton"),
             change("src/esrc/scripts/ButtonPointer.e", 107, 14, 29, "t.setPrevButton"),
             change("src/esrc/scripts/ButtonPointer.e", 108, 31, 46, "v.setNextButton"),
             change("src/esrc/scripts/ButtonPointer.e", 109, 14, 27, "t.setUpButton"),
             change("src/esrc/scripts/ButtonPointer.e", 110, 14, 29, "t.setDownButton"),
             change("src/esrc/scripts/ButtonPointer.e", 116, 23, 29, "e.size"),
             change("src/esrc/scripts/ButtonPointer.e", 117, 15, 25, "e.endsWith"),
             change("src/esrc/scripts/ButtonPointer.e", 120, 20, 33, "e.lastIndexOf"),
             change("src/esrc/scripts/ButtonPointer.e", 121, 43, 49, "e.size"),
             change("src/esrc/scripts/ButtonPointer.e", 141, 16, 25, "\".diverge"),
             change("src/esrc/scripts/ButtonPointer.e", 142, 19, 31, "t.startsWith"),
             change("src/esrc/scripts/ButtonPointer.e", 144, 15, 25, "e.endsWith"),
             change("src/esrc/scripts/ButtonPointer.e", 145, 14, 22, "f.append"),
             change("src/esrc/scripts/ButtonPointer.e", 149, 27, 37, "c.endsWith"),
             change("src/esrc/scripts/ButtonPointer.e", 152, 6, 14, "f.append"),
             change("src/esrc/scripts/ButtonPointer.e", 153, 25, 35, "f.snapshot"),
             change("src/esrc/scripts/ButtonPointer.e", 154, 13, 23, "t.endsWith"),
             change("src/esrc/scripts/ButtonPointer.e", 188, 26, 39, "r.isDirectory"),
             change("src/esrc/scripts/ButtonPointer.e", 194, 36, 39, ") :void {"),
             change("src/esrc/scripts/ButtonPointer.e", 194, 46, 57, "r.__printOn"),
             change("src/esrc/scripts/ButtonPointer.e", 197, 19, 27, "e.exists"),
             change("src/esrc/scripts/ButtonPointer.e", 198, 21, 30, "e.getText"),
             change("src/esrc/scripts/ButtonPointer.e", 200, 30, 36, "e.trim"),
             change("src/esrc/scripts/ButtonPointer.e", 202, 19, 27, "e.exists"),
             change("src/esrc/scripts/ButtonPointer.e", 203, 21, 30, "e.getText"),
             change("src/esrc/scripts/ButtonPointer.e", 205, 30, 36, "e.trim"),
             change("src/esrc/scripts/ButtonPointer.e", 209, 22, 31, "r.getName"),
             change("src/esrc/scripts/ButtonPointer.e", 214, 30, 33, ") :void {"),
             change("src/esrc/scripts/ButtonPointer.e", 221, 46, 56, "e.getTitle"),
             change("src/esrc/scripts/ButtonPointer.e", 230, 30, 33, ") :void {"),
             change("src/esrc/scripts/ButtonPointer.e", 237, 48, 58, "e.getTitle"),
             change("src/esrc/scripts/ButtonPointer.e", 246, 30, 33, ") :void {"),
             change("src/esrc/scripts/ButtonPointer.e", 249, 50, 60, "e.getTitle"),
             change("src/esrc/scripts/ButtonPointer.e", 258, 27, 30, ") :void {"),
             change("src/esrc/scripts/ButtonPointer.e", 260, 25, 34, "].diverge"),
             change("src/esrc/scripts/ButtonPointer.e", 262, 19, 25, "t.push"),
             change("src/esrc/scripts/ButtonPointer.e", 267, 29, 35, "t.size"),
             change("src/esrc/scripts/ButtonPointer.e", 268, 24, 33, "\".diverge"),
             change("src/esrc/scripts/ButtonPointer.e", 269, 36, 49, "r.isDirectory"),
             change("src/esrc/scripts/ButtonPointer.e", 271, 18, 26, "f.append"),
             change("src/esrc/scripts/ButtonPointer.e", 275, 37, 47, "f.snapshot"),
             change("src/esrc/scripts/ButtonPointer.e", 277, 64, 75, "r.getParent"),
             change("src/esrc/scripts/ButtonPointer.e", 311, 9, 18, "p.getArgs"),
             change("src/esrc/scripts/ButtonPointer.e", 327, 18, 29, "m.javaStack"),
             change("src/esrc/scripts/ButtonPointer.e", 328, 18, 26, "m.eStack"),
             change("src/esrc/scripts/capBriefer.e-awt", 9, 17, 20, ") :void {"),
             change("src/esrc/scripts/capBriefer.e-awt", 9, 26, 35, "r.println"),
             change("src/esrc/scripts/capBriefer.e-awt", 14, 45, 55, ").getImage"),
             change("src/esrc/scripts/capBriefer.e-awt", 17, 9, 23, "t.setIconImage"),
             change("src/esrc/scripts/capBriefer.e-awt", 44, 19, 22, ") :void {"),
             change("src/esrc/scripts/capBriefer.e-awt", 45, 36, 54, "e.getSelectedIndex"),
             change("src/esrc/scripts/capBriefer.e-awt", 47, 24, 42, "e.setSelectedIndex"),
             change("src/esrc/scripts/capBriefer.e-awt", 51, 15, 18, ") :void {"),
             change("src/esrc/scripts/capBriefer.e-awt", 52, 36, 54, "e.getSelectedIndex"),
             change("src/esrc/scripts/capBriefer.e-awt", 53, 49, 55, "t.size"),
             change("src/esrc/scripts/capBriefer.e-awt", 54, 24, 42, "e.setSelectedIndex"),
             change("src/esrc/scripts/capBriefer.e-awt", 57, 28, 39, "s.newButton"),
             change("src/esrc/scripts/capBriefer.e-awt", 58, 28, 39, "s.newButton"),
             change("src/esrc/scripts/capBriefer.e-awt", 59, 25, 32, "s.label"),
             change("src/esrc/scripts/capBriefer.e-awt", 60, 25, 32, "s.label"),
             change("src/esrc/scripts/capBriefer.e-awt", 64, 11, 24, "e.setEditable"),
             change("src/esrc/scripts/capBriefer.e-awt", 65, 11, 27, "e.setContentType"),
             change("src/esrc/scripts/capBriefer.e-awt", 66, 11, 20, "e.setText"),
             change("src/esrc/scripts/capBriefer.e-awt", 68, 25, 41, "w.getContentPane"),
             change("src/esrc/scripts/capBriefer.e-awt", 70, 52, 62, "t.snapshot"),
             change("src/esrc/scripts/capBriefer.e-awt", 73, 29, 32, ") :void {"),
             change("src/esrc/scripts/capBriefer.e-awt", 74, 19, 28, "e.setPage"),
             change("src/esrc/scripts/capBriefer.e-awt", 74, 41, 59, "e.getSelectedValue"),
             change("src/esrc/scripts/capBriefer.e-awt", 78, 16, 42, "e.addListSelectionListener"),
             change("src/esrc/scripts/capBriefer.e-awt", 80, 11, 29, "r.setLeftComponent"),
             change("src/esrc/scripts/capBriefer.e-awt", 81, 11, 30, "r.setRightComponent"),
             change("src/esrc/scripts/capBriefer.e-awt", 87, 11, 16, "e.add"),
             change("src/esrc/scripts/capBriefer.e-awt", 92, 25, 28, ") :void {"),
             change("src/esrc/scripts/capBriefer.e-awt", 92, 33, 48, "p.continueAtTop"),
             change("src/esrc/scripts/capBriefer.e-awt", 101, 31, 34, ") :void {"),
             change("src/esrc/scripts/capBriefer.e-awt", 111, 1, 8, "\".split"),
             change("src/esrc/scripts/capBriefer.e-awt", 112, 17, 26, "p.getArgs"),
             change("src/esrc/scripts/capBriefer.e-awt", 113, 7, 13, "s.size"),
             change("src/esrc/scripts/capBriefer.e-awt", 114, 31, 40, ">.getText"),
             change("src/esrc/scripts/capBriefer.e-awt", 114, 41, 48, ").split"),
             change("src/esrc/scripts/capBriefer.e-awt", 117, 6, 18, "r.showSlides"),
             change("src/esrc/scripts/capBriefer.e-awt", 119, 5, 17, "p.blockAtTop"),
             change("src/esrc/scripts/capDesk.e-awt", 9, 17, 20, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 9, 26, 35, "r.println"),
             change("src/esrc/scripts/capDesk.e-awt", 13, 61, 70, ">.getText"),
             change("src/esrc/scripts/capDesk.e-awt", 13, 71, 77, ").trim"),
             change("src/esrc/scripts/capDesk.e-awt", 32, 19, 28, "].diverge"),
             change("src/esrc/scripts/capDesk.e-awt", 34, 26, 29, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 34, 34, 40, "e.push"),
             change("src/esrc/scripts/capDesk.e-awt", 35, 21, 24, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 44, 18, 24, "E.send"),
             change("src/esrc/scripts/capDesk.e-awt", 44, 58, 61, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 48, 21, 28, "r.smash"),
             change("src/esrc/scripts/capDesk.e-awt", 57, 18, 21, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 58, 79, 84, ">.run"),
             change("src/esrc/scripts/capDesk.e-awt", 63, 13, 23, "p.getProps"),
             change("src/esrc/scripts/capDesk.e-awt", 69, 32, 35, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 70, 98, 103, ">.run"),
             change("src/esrc/scripts/capDesk.e-awt", 75, 29, 32, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 92, 25, 40, "r.getANavigator"),
             change("src/esrc/scripts/capDesk.e-awt", 109, 63, 89, "w.makeFileProgressObserver"),
             change("src/esrc/scripts/capDesk.e-awt", 111, 35, 38, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 114, 53, 61, "b.eStack"),
             change("src/esrc/scripts/capDesk.e-awt", 127, 49, 52, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 128, 15, 20, "s.add"),
             change("src/esrc/scripts/capDesk.e-awt", 128, 33, 48, "r.makeActionVow"),
             change("src/esrc/scripts/capDesk.e-awt", 131, 45, 48, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 136, 63, 66, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 138, 54, 78, "r.promiseOverwriteAnswer"),
             change("src/esrc/scripts/capDesk.e-awt", 139, 63, 66, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 149, 15, 26, "s.finishAll"),
             change("src/esrc/scripts/capDesk.e-awt", 151, 11, 26, "s.promiseFinish"),
             change("src/esrc/scripts/capDesk.e-awt", 161, 26, 29, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 167, 39, 42, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 172, 19, 26, "r.smash"),
             change("src/esrc/scripts/capDesk.e-awt", 192, 53, 66, "h.toLowerCase"),
             change("src/esrc/scripts/capDesk.e-awt", 192, 78, 91, "h.toLowerCase"),
             change("src/esrc/scripts/capDesk.e-awt", 206, 87, 90, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 210, 44, 67, "w.makeOverwriteAnswerer"),
             change("src/esrc/scripts/capDesk.e-awt", 215, 18, 23, "e.add"),
             change("src/esrc/scripts/capDesk.e-awt", 216, 40, 43, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 218, 44, 58, "r.copyDirBegin"),
             change("src/esrc/scripts/capDesk.e-awt", 222, 44, 55, "r.pasteFile"),
             change("src/esrc/scripts/capDesk.e-awt", 228, 14, 25, "e.finishAll"),
             change("src/esrc/scripts/capDesk.e-awt", 229, 20, 35, "e.promiseFinish"),
             change("src/esrc/scripts/capDesk.e-awt", 229, 49, 52, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 231, 28, 37, "w.refresh"),
             change("src/esrc/scripts/capDesk.e-awt", 233, 28, 37, "w.refresh"),
             change("src/esrc/scripts/capDesk.e-awt", 234, 27, 46, "w.connectionWarning"),
             change("src/esrc/scripts/capDesk.e-awt", 240, 39, 42, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 242, 44, 59, "r.makeActionVow"),
             change("src/esrc/scripts/capDesk.e-awt", 245, 42, 45, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 251, 48, 51, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 255, 57, 60, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 259, 52, 69, ">.showInputDialog"),
             change("src/esrc/scripts/capDesk.e-awt", 262, 89, 107, ">.QUESTION_MESSAGE"),
             change("src/esrc/scripts/capDesk.e-awt", 278, 36, 55, "w.connectionWarning"),
             change("src/esrc/scripts/capDesk.e-awt", 286, 57, 73, "r.isProperSubDir"),
             change("src/esrc/scripts/capDesk.e-awt", 288, 30, 40, "s.contains"),
             change("src/esrc/scripts/capDesk.e-awt", 288, 57, 75, "r.getCanonicalPath"),
             change("src/esrc/scripts/capDesk.e-awt", 288, 100, 116, "r.isProperSubDir"),
             change("src/esrc/scripts/capDesk.e-awt", 290, 33, 41, "r.exists"),
             change("src/esrc/scripts/capDesk.e-awt", 291, 30, 40, "r.makeSelf"),
             change("src/esrc/scripts/capDesk.e-awt", 293, 30, 36, "s.push"),
             change("src/esrc/scripts/capDesk.e-awt", 293, 51, 69, "r.getCanonicalPath"),
             change("src/esrc/scripts/capDesk.e-awt", 295, 19, 24, "s.add"),
             change("src/esrc/scripts/capDesk.e-awt", 295, 51, 68, "r.getDirNavigator"),
             change("src/esrc/scripts/capDesk.e-awt", 295, 86, 103, "r.getDirNavigator"),
             change("src/esrc/scripts/capDesk.e-awt", 296, 52, 69, "r.getDirNavigator"),
             change("src/esrc/scripts/capDesk.e-awt", 297, 54, 57, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 302, 27, 32, "s.add"),
             change("src/esrc/scripts/capDesk.e-awt", 303, 60, 77, "r.getDirNavigator"),
             change("src/esrc/scripts/capDesk.e-awt", 305, 56, 73, "r.getDirNavigator"),
             change("src/esrc/scripts/capDesk.e-awt", 308, 58, 61, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 309, 52, 71, "r.copyDirCautiously"),
             change("src/esrc/scripts/capDesk.e-awt", 311, 39, 58, "w.connectionWarning"),
             change("src/esrc/scripts/capDesk.e-awt", 312, 37, 44, "r.smash"),
             change("src/esrc/scripts/capDesk.e-awt", 315, 23, 34, "s.finishAll"),
             change("src/esrc/scripts/capDesk.e-awt", 317, 23, 34, "s.finishAll"),
             change("src/esrc/scripts/capDesk.e-awt", 318, 15, 30, "s.promiseFinish"),
             change("src/esrc/scripts/capDesk.e-awt", 323, 32, 41, "].diverge"),
             change("src/esrc/scripts/capDesk.e-awt", 325, 40, 43, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 326, 60, 69, "r.getName"),
             change("src/esrc/scripts/capDesk.e-awt", 328, 40, 43, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 329, 40, 59, "r.copyDirCautiously"),
             change("src/esrc/scripts/capDesk.e-awt", 332, 38, 45, "r.smash"),
             change("src/esrc/scripts/capDesk.e-awt", 333, 31, 50, "w.connectionWarning"),
             change("src/esrc/scripts/capDesk.e-awt", 341, 16, 24, "].asKeys"),
             change("src/esrc/scripts/capDesk.e-awt", 341, 25, 34, ").diverge"),
             change("src/esrc/scripts/capDesk.e-awt", 343, 23, 31, ">.exists"),
             change("src/esrc/scripts/capDesk.e-awt", 344, 38, 56, ">.getCanonicalPath"),
             change("src/esrc/scripts/capDesk.e-awt", 346, 31, 49, ">.getCanonicalPath"),
             change("src/esrc/scripts/capDesk.e-awt", 357, 38, 41, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 358, 28, 37, "p.getArgs"),
             change("src/esrc/scripts/capDesk.e-awt", 362, 18, 24, "s.size"),
             change("src/esrc/scripts/capDesk.e-awt", 363, 18, 24, "s.size"),
             change("src/esrc/scripts/capDesk.e-awt", 366, 18, 24, "s.size"),
             change("src/esrc/scripts/capDesk.e-awt", 368, 59, 73, "].deepReadOnly"),
             change("src/esrc/scripts/capDesk.e-awt", 378, 42, 45, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 379, 17, 25, "e.exists"),
             change("src/esrc/scripts/capDesk.e-awt", 405, 28, 37, "p.getArgs"),
             change("src/esrc/scripts/capDesk.e-awt", 407, 18, 24, "s.size"),
             change("src/esrc/scripts/capDesk.e-awt", 408, 18, 24, "s.size"),
             change("src/esrc/scripts/capDesk.e-awt", 409, 18, 24, "s.size"),
             change("src/esrc/scripts/capDesk.e-awt", 419, 26, 34, "e.exists"),
             change("src/esrc/scripts/capDesk.e-awt", 421, 36, 52, "r.newVatIdentity"),
             change("src/esrc/scripts/capDesk.e-awt", 422, 21, 31, "r.onTheAir"),
             change("src/esrc/scripts/capDesk.e-awt", 423, 38, 52, "r.getNetConfig"),
             change("src/esrc/scripts/capDesk.e-awt", 434, 21, 35, "r.setNetConfig"),
             change("src/esrc/scripts/capDesk.e-awt", 435, 21, 37, "r.setVatIdentity"),
             change("src/esrc/scripts/capDesk.e-awt", 436, 21, 31, "r.onTheAir"),
             change("src/esrc/scripts/capDesk.e-awt", 442, 28, 41, "r.sturdyToURI"),
             change("src/esrc/scripts/capDesk.e-awt", 444, 14, 23, "e.setText"),
             change("src/esrc/scripts/capDesk.e-awt", 452, 17, 27, "r.onTheAir"),
             change("src/esrc/scripts/capDesk.e-awt", 456, 26, 29, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 458, 31, 46, "s.promiseObject"),
             change("src/esrc/scripts/capDesk.e-awt", 462, 45, 48, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 467, 31, 50, "w.connectionWarning"),
             change("src/esrc/scripts/capDesk.e-awt", 470, 27, 46, "w.connectionWarning"),
             change("src/esrc/scripts/capDesk.e-awt", 475, 54, 57, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 480, 49, 52, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 482, 17, 24, "r.paste"),
             change("src/esrc/scripts/capDesk.e-awt", 488, 22, 25, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 489, 38, 62, "w.getRemoteConnectionURI"),
             change("src/esrc/scripts/capDesk.e-awt", 494, 32, 35, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 496, 35, 38, ") :void {"),
             change("src/esrc/scripts/capDesk.e-awt", 499, 31, 50, "w.connectionWarning"),
             change("src/esrc/scripts/capDesk.e-awt", 507, 5, 17, "p.blockAtTop"),
             change("src/esrc/scripts/capDesk.e-swt", 9, 17, 20, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 9, 26, 35, "r.println"),
             change("src/esrc/scripts/capDesk.e-swt", 12, 83, 92, ">.getText"),
             change("src/esrc/scripts/capDesk.e-swt", 12, 93, 99, ").trim"),
             change("src/esrc/scripts/capDesk.e-swt", 30, 19, 28, "].diverge"),
             change("src/esrc/scripts/capDesk.e-swt", 32, 26, 29, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 32, 34, 40, "e.push"),
             change("src/esrc/scripts/capDesk.e-swt", 33, 21, 24, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 42, 18, 24, "E.send"),
             change("src/esrc/scripts/capDesk.e-swt", 42, 58, 61, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 46, 21, 28, "r.smash"),
             change("src/esrc/scripts/capDesk.e-swt", 55, 18, 21, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 56, 79, 84, ">.run"),
             change("src/esrc/scripts/capDesk.e-swt", 61, 13, 23, "p.getProps"),
             change("src/esrc/scripts/capDesk.e-swt", 67, 32, 35, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 68, 98, 103, ">.run"),
             change("src/esrc/scripts/capDesk.e-swt", 73, 29, 32, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 90, 25, 40, "r.getANavigator"),
             change("src/esrc/scripts/capDesk.e-swt", 107, 63, 89, "w.makeFileProgressObserver"),
             change("src/esrc/scripts/capDesk.e-swt", 109, 35, 38, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 112, 53, 61, "b.eStack"),
             change("src/esrc/scripts/capDesk.e-swt", 125, 49, 52, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 126, 15, 20, "s.add"),
             change("src/esrc/scripts/capDesk.e-swt", 126, 33, 48, "r.makeActionVow"),
             change("src/esrc/scripts/capDesk.e-swt", 129, 45, 48, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 134, 63, 66, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 136, 54, 78, "r.promiseOverwriteAnswer"),
             change("src/esrc/scripts/capDesk.e-swt", 137, 63, 66, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 147, 15, 26, "s.finishAll"),
             change("src/esrc/scripts/capDesk.e-swt", 149, 11, 26, "s.promiseFinish"),
             change("src/esrc/scripts/capDesk.e-swt", 159, 26, 29, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 165, 39, 42, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 170, 19, 26, "r.smash"),
             change("src/esrc/scripts/capDesk.e-swt", 190, 53, 66, "h.toLowerCase"),
             change("src/esrc/scripts/capDesk.e-swt", 190, 78, 91, "h.toLowerCase"),
             change("src/esrc/scripts/capDesk.e-swt", 204, 87, 90, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 208, 44, 67, "w.makeOverwriteAnswerer"),
             change("src/esrc/scripts/capDesk.e-swt", 213, 18, 23, "e.add"),
             change("src/esrc/scripts/capDesk.e-swt", 214, 40, 43, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 216, 44, 58, "r.copyDirBegin"),
             change("src/esrc/scripts/capDesk.e-swt", 220, 44, 55, "r.pasteFile"),
             change("src/esrc/scripts/capDesk.e-swt", 226, 14, 25, "e.finishAll"),
             change("src/esrc/scripts/capDesk.e-swt", 227, 20, 35, "e.promiseFinish"),
             change("src/esrc/scripts/capDesk.e-swt", 227, 49, 52, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 229, 28, 37, "w.refresh"),
             change("src/esrc/scripts/capDesk.e-swt", 231, 28, 37, "w.refresh"),
             change("src/esrc/scripts/capDesk.e-swt", 232, 27, 46, "w.connectionWarning"),
             change("src/esrc/scripts/capDesk.e-swt", 238, 39, 42, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 240, 44, 59, "r.makeActionVow"),
             change("src/esrc/scripts/capDesk.e-swt", 243, 42, 45, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 249, 48, 51, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 253, 57, 60, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 258, 46, 61, "w.makeDialogVow"),
             change("src/esrc/scripts/capDesk.e-swt", 263, 88, 91, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 264, 67, 73, "t.size"),
             change("src/esrc/scripts/capDesk.e-swt", 278, 36, 55, "w.connectionWarning"),
             change("src/esrc/scripts/capDesk.e-swt", 286, 57, 73, "r.isProperSubDir"),
             change("src/esrc/scripts/capDesk.e-swt", 288, 30, 40, "s.contains"),
             change("src/esrc/scripts/capDesk.e-swt", 288, 57, 75, "r.getCanonicalPath"),
             change("src/esrc/scripts/capDesk.e-swt", 288, 100, 116, "r.isProperSubDir"),
             change("src/esrc/scripts/capDesk.e-swt", 290, 33, 41, "r.exists"),
             change("src/esrc/scripts/capDesk.e-swt", 291, 30, 40, "r.makeSelf"),
             change("src/esrc/scripts/capDesk.e-swt", 293, 30, 36, "s.push"),
             change("src/esrc/scripts/capDesk.e-swt", 293, 51, 69, "r.getCanonicalPath"),
             change("src/esrc/scripts/capDesk.e-swt", 295, 19, 24, "s.add"),
             change("src/esrc/scripts/capDesk.e-swt", 295, 51, 68, "r.getDirNavigator"),
             change("src/esrc/scripts/capDesk.e-swt", 295, 86, 103, "r.getDirNavigator"),
             change("src/esrc/scripts/capDesk.e-swt", 296, 52, 69, "r.getDirNavigator"),
             change("src/esrc/scripts/capDesk.e-swt", 297, 54, 57, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 302, 27, 32, "s.add"),
             change("src/esrc/scripts/capDesk.e-swt", 303, 60, 77, "r.getDirNavigator"),
             change("src/esrc/scripts/capDesk.e-swt", 305, 56, 73, "r.getDirNavigator"),
             change("src/esrc/scripts/capDesk.e-swt", 308, 58, 61, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 309, 52, 71, "r.copyDirCautiously"),
             change("src/esrc/scripts/capDesk.e-swt", 311, 39, 58, "w.connectionWarning"),
             change("src/esrc/scripts/capDesk.e-swt", 312, 37, 44, "r.smash"),
             change("src/esrc/scripts/capDesk.e-swt", 315, 23, 34, "s.finishAll"),
             change("src/esrc/scripts/capDesk.e-swt", 317, 23, 34, "s.finishAll"),
             change("src/esrc/scripts/capDesk.e-swt", 318, 15, 30, "s.promiseFinish"),
             change("src/esrc/scripts/capDesk.e-swt", 323, 32, 41, "].diverge"),
             change("src/esrc/scripts/capDesk.e-swt", 325, 40, 43, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 326, 60, 69, "r.getName"),
             change("src/esrc/scripts/capDesk.e-swt", 328, 40, 43, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 329, 40, 59, "r.copyDirCautiously"),
             change("src/esrc/scripts/capDesk.e-swt", 332, 38, 45, "r.smash"),
             change("src/esrc/scripts/capDesk.e-swt", 333, 31, 50, "w.connectionWarning"),
             change("src/esrc/scripts/capDesk.e-swt", 341, 16, 24, "].asKeys"),
             change("src/esrc/scripts/capDesk.e-swt", 341, 25, 34, ").diverge"),
             change("src/esrc/scripts/capDesk.e-swt", 343, 23, 31, ">.exists"),
             change("src/esrc/scripts/capDesk.e-swt", 344, 38, 56, ">.getCanonicalPath"),
             change("src/esrc/scripts/capDesk.e-swt", 346, 31, 49, ">.getCanonicalPath"),
             change("src/esrc/scripts/capDesk.e-swt", 357, 38, 41, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 358, 28, 37, "p.getArgs"),
             change("src/esrc/scripts/capDesk.e-swt", 362, 18, 24, "s.size"),
             change("src/esrc/scripts/capDesk.e-swt", 363, 18, 24, "s.size"),
             change("src/esrc/scripts/capDesk.e-swt", 366, 18, 24, "s.size"),
             change("src/esrc/scripts/capDesk.e-swt", 368, 59, 73, "].deepReadOnly"),
             change("src/esrc/scripts/capDesk.e-swt", 378, 42, 45, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 379, 17, 25, "e.exists"),
             change("src/esrc/scripts/capDesk.e-swt", 405, 28, 37, "p.getArgs"),
             change("src/esrc/scripts/capDesk.e-swt", 407, 18, 24, "s.size"),
             change("src/esrc/scripts/capDesk.e-swt", 408, 18, 24, "s.size"),
             change("src/esrc/scripts/capDesk.e-swt", 409, 18, 24, "s.size"),
             change("src/esrc/scripts/capDesk.e-swt", 418, 26, 34, "e.exists"),
             change("src/esrc/scripts/capDesk.e-swt", 420, 36, 52, "r.newVatIdentity"),
             change("src/esrc/scripts/capDesk.e-swt", 421, 21, 31, "r.onTheAir"),
             change("src/esrc/scripts/capDesk.e-swt", 422, 38, 52, "r.getNetConfig"),
             change("src/esrc/scripts/capDesk.e-swt", 433, 21, 35, "r.setNetConfig"),
             change("src/esrc/scripts/capDesk.e-swt", 434, 21, 37, "r.setVatIdentity"),
             change("src/esrc/scripts/capDesk.e-swt", 435, 21, 31, "r.onTheAir"),
             change("src/esrc/scripts/capDesk.e-swt", 441, 28, 41, "r.sturdyToURI"),
             change("src/esrc/scripts/capDesk.e-swt", 443, 14, 23, "e.setText"),
             change("src/esrc/scripts/capDesk.e-swt", 452, 17, 27, "r.onTheAir"),
             change("src/esrc/scripts/capDesk.e-swt", 456, 26, 29, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 458, 31, 46, "s.promiseObject"),
             change("src/esrc/scripts/capDesk.e-swt", 462, 45, 48, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 467, 31, 50, "w.connectionWarning"),
             change("src/esrc/scripts/capDesk.e-swt", 470, 27, 46, "w.connectionWarning"),
             change("src/esrc/scripts/capDesk.e-swt", 475, 54, 57, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 480, 49, 52, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 482, 17, 24, "r.paste"),
             change("src/esrc/scripts/capDesk.e-swt", 488, 22, 25, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 489, 38, 62, "w.getRemoteConnectionURI"),
             change("src/esrc/scripts/capDesk.e-swt", 494, 32, 35, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 496, 35, 38, ") :void {"),
             change("src/esrc/scripts/capDesk.e-swt", 499, 31, 50, "w.connectionWarning"),
             change("src/esrc/scripts/capDesk.e-swt", 507, 5, 17, "p.blockAtTop"),
             change("src/esrc/scripts/capletLauncher.e-awt", 9, 17, 20, ") :void {"),
             change("src/esrc/scripts/capletLauncher.e-awt", 9, 26, 35, "r.println"),
             change("src/esrc/scripts/capletLauncher.e-awt", 13, 42, 52, ").getImage"),
             change("src/esrc/scripts/capletLauncher.e-awt", 17, 16, 30, "e.setIconImage"),
             change("src/esrc/scripts/capletLauncher.e-awt", 52, 62, 71, ">.getText"),
             change("src/esrc/scripts/capletLauncher.e-awt", 52, 72, 78, ").trim"),
             change("src/esrc/scripts/capletLauncher.e-awt", 55, 13, 21, "r.exists"),
             change("src/esrc/scripts/capletLauncher.e-awt", 55, 33, 41, "r.mkdirs"),
             change("src/esrc/scripts/capletLauncher.e-awt", 56, 91, 100, ">.getText"),
             change("src/esrc/scripts/capletLauncher.e-awt", 56, 101, 107, ").trim"),
             change("src/esrc/scripts/capletLauncher.e-awt", 59, 18, 26, "e.exists"),
             change("src/esrc/scripts/capletLauncher.e-awt", 59, 43, 52, "e.setText"),
             change("src/esrc/scripts/capletLauncher.e-awt", 83, 42, 62, "r.optAppBySourcePath"),
             change("src/esrc/scripts/capletLauncher.e-awt", 83, 72, 90, "e.getCanonicalPath"),
             change("src/esrc/scripts/capletLauncher.e-awt", 84, 42, 49, "].asMap"),
             change("src/esrc/scripts/capletLauncher.e-awt", 88, 22, 28, "c.maps"),
             change("src/esrc/scripts/capletLauncher.e-awt", 92, 30, 38, "e.exists"),
             change("src/esrc/scripts/capletLauncher.e-awt", 95, 27, 35, "e.exists"),
             change("src/esrc/scripts/capletLauncher.e-awt", 96, 64, 82, "e.getCanonicalPath"),
             change("src/esrc/scripts/capletLauncher.e-awt", 96, 85, 95, ").getImage"),
             change("src/esrc/scripts/capletLauncher.e-awt", 104, 38, 56, "e.getCanonicalPath"),
             change("src/esrc/scripts/capletLauncher.e-awt", 107, 18, 24, "c.maps"),
             change("src/esrc/scripts/capletLauncher.e-awt", 108, 48, 57, ">.getText"),
             change("src/esrc/scripts/capletLauncher.e-awt", 112, 18, 23, "c.get"),
             change("src/esrc/scripts/capletLauncher.e-awt", 115, 36, 49, "r.getPowerbox"),
             change("src/esrc/scripts/capletLauncher.e-awt", 117, 25, 33, "r.setCap"),
             change("src/esrc/scripts/capletLauncher.e-awt", 117, 36, 48, "x.DOC_SUFFIX"),
             change("src/esrc/scripts/capletLauncher.e-awt", 117, 58, 63, "c.get"),
             change("src/esrc/scripts/capletLauncher.e-awt", 119, 25, 33, "r.setCap"),
             change("src/esrc/scripts/capletLauncher.e-awt", 119, 36, 55, "x.INITIAL_DOC_RCVRS"),
             change("src/esrc/scripts/capletLauncher.e-awt", 120, 25, 45, "r.addPowerboxReactor"),
             change("src/esrc/scripts/capletLauncher.e-awt", 121, 34, 37, ") :void {"),
             change("src/esrc/scripts/capletLauncher.e-awt", 126, 25, 37, "r.launchFile"),
             change("src/esrc/scripts/capletLauncher.e-awt", 132, 24, 33, "p.getArgs"),
             change("src/esrc/scripts/capletLauncher.e-awt", 133, 14, 20, "s.size"),
             change("src/esrc/scripts/capletLauncher.e-awt", 139, 35, 38, ") :void {"),
             change("src/esrc/scripts/capletLauncher.e-awt", 140, 13, 28, "p.continueAtTop"),
             change("src/esrc/scripts/capletLauncher.e-awt", 148, 29, 35, "s.size"),
             change("src/esrc/scripts/copyOnly.e", 6, 26, 29, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 11, 44, 54, ").getImage"),
             change("src/esrc/scripts/eBrowser.e-awt", 15, 13, 27, "t.setIconImage"),
             change("src/esrc/scripts/eBrowser.e-awt", 37, 49, 57, ">.asType"),
             change("src/esrc/scripts/eBrowser.e-awt", 44, 17, 20, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 44, 26, 35, "r.println"),
             change("src/esrc/scripts/eBrowser.e-awt", 57, 13, 21, "r.exists"),
             change("src/esrc/scripts/eBrowser.e-awt", 57, 33, 41, "r.mkdirs"),
             change("src/esrc/scripts/eBrowser.e-awt", 59, 24, 32, "f.exists"),
             change("src/esrc/scripts/eBrowser.e-awt", 59, 55, 64, "f.setText"),
             change("src/esrc/scripts/eBrowser.e-awt", 61, 22, 25, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 63, 47, 56, "f.getText"),
             change("src/esrc/scripts/eBrowser.e-awt", 63, 57, 63, ").trim"),
             change("src/esrc/scripts/eBrowser.e-awt", 64, 25, 31, "h.size"),
             change("src/esrc/scripts/eBrowser.e-awt", 83, 18, 26, "].asKeys"),
             change("src/esrc/scripts/eBrowser.e-awt", 83, 27, 36, ").diverge"),
             change("src/esrc/scripts/eBrowser.e-awt", 86, 28, 44, "e.getContentPane"),
             change("src/esrc/scripts/eBrowser.e-awt", 88, 11, 22, "e.setLayout"),
             change("src/esrc/scripts/eBrowser.e-awt", 91, 30, 33, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 92, 31, 46, "r.windowClosing"),
             change("src/esrc/scripts/eBrowser.e-awt", 94, 29, 32, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 95, 20, 31, "t.removeKey"),
             change("src/esrc/scripts/eBrowser.e-awt", 96, 24, 30, "t.size"),
             change("src/esrc/scripts/eBrowser.e-awt", 97, 21, 36, "p.continueAtTop"),
             change("src/esrc/scripts/eBrowser.e-awt", 102, 12, 31, "e.addWindowListener"),
             change("src/esrc/scripts/eBrowser.e-awt", 111, 58, 61, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 112, 27, 46, "e.getSelectionStart"),
             change("src/esrc/scripts/eBrowser.e-awt", 113, 11, 29, "e.replaceSelection"),
             change("src/esrc/scripts/eBrowser.e-awt", 114, 11, 29, "e.setCaretPosition"),
             change("src/esrc/scripts/eBrowser.e-awt", 115, 11, 30, "e.moveCaretPosition"),
             change("src/esrc/scripts/eBrowser.e-awt", 115, 52, 58, "t.size"),
             change("src/esrc/scripts/eBrowser.e-awt", 116, 18, 33, ">.transferFocus"),
             change("src/esrc/scripts/eBrowser.e-awt", 119, 16, 19, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 136, 22, 31, "].diverge"),
             change("src/esrc/scripts/eBrowser.e-awt", 137, 13, 21, "r.exists"),
             change("src/esrc/scripts/eBrowser.e-awt", 139, 19, 28, "h.getName"),
             change("src/esrc/scripts/eBrowser.e-awt", 140, 24, 30, "s.push"),
             change("src/esrc/scripts/eBrowser.e-awt", 144, 12, 22, "s.snapshot"),
             change("src/esrc/scripts/eBrowser.e-awt", 147, 18, 25, "].asMap"),
             change("src/esrc/scripts/eBrowser.e-awt", 147, 26, 35, ").diverge"),
             change("src/esrc/scripts/eBrowser.e-awt", 165, 34, 41, "].asMap"),
             change("src/esrc/scripts/eBrowser.e-awt", 165, 42, 51, ").diverge"),
             change("src/esrc/scripts/eBrowser.e-awt", 166, 48, 67, ">.currentTimeMillis"),
             change("src/esrc/scripts/eBrowser.e-awt", 167, 27, 36, "e.getText"),
             change("src/esrc/scripts/eBrowser.e-awt", 169, 36, 50, "e.lastModified"),
             change("src/esrc/scripts/eBrowser.e-awt", 177, 21, 30, "e.getName"),
             change("src/esrc/scripts/eBrowser.e-awt", 180, 21, 39, "e.getCanonicalPath"),
             change("src/esrc/scripts/eBrowser.e-awt", 184, 53, 56, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 185, 49, 52, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 189, 53, 56, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 190, 32, 43, "t.removeKey"),
             change("src/esrc/scripts/eBrowser.e-awt", 192, 26, 29, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 196, 73, 76, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 201, 50, 64, "h.linesChanged"),
             change("src/esrc/scripts/eBrowser.e-awt", 212, 16, 19, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 213, 21, 30, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-awt", 214, 40, 54, "e.lastModified"),
             change("src/esrc/scripts/eBrowser.e-awt", 216, 26, 29, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 218, 24, 35, "s.removeKey"),
             change("src/esrc/scripts/eBrowser.e-awt", 218, 45, 63, "e.getCanonicalPath"),
             change("src/esrc/scripts/eBrowser.e-awt", 221, 20, 26, "l.save"),
             change("src/esrc/scripts/eBrowser.e-awt", 223, 42, 45, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 229, 39, 53, "e.lastModified"),
             change("src/esrc/scripts/eBrowser.e-awt", 232, 31, 40, "e.getText"),
             change("src/esrc/scripts/eBrowser.e-awt", 233, 40, 54, "e.lastModified"),
             change("src/esrc/scripts/eBrowser.e-awt", 237, 33, 36, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 238, 40, 54, "e.lastModified"),
             change("src/esrc/scripts/eBrowser.e-awt", 240, 17, 20, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 241, 50, 61, "s.removeKey"),
             change("src/esrc/scripts/eBrowser.e-awt", 241, 71, 89, "e.getCanonicalPath"),
             change("src/esrc/scripts/eBrowser.e-awt", 262, 13, 22, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-awt", 274, 25, 31, "e.eval"),
             change("src/esrc/scripts/eBrowser.e-awt", 276, 21, 29, "e.append"),
             change("src/esrc/scripts/eBrowser.e-awt", 279, 21, 29, "e.append"),
             change("src/esrc/scripts/eBrowser.e-awt", 288, 31, 34, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 289, 17, 26, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-awt", 289, 42, 54, ").replaceAll"),
             change("src/esrc/scripts/eBrowser.e-awt", 290, 30, 37, ").split"),
             change("src/esrc/scripts/eBrowser.e-awt", 290, 45, 51, "].trim"),
             change("src/esrc/scripts/eBrowser.e-awt", 291, 14, 24, "g.endsWith"),
             change("src/esrc/scripts/eBrowser.e-awt", 292, 28, 34, "g.size"),
             change("src/esrc/scripts/eBrowser.e-awt", 294, 17, 26, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-awt", 295, 17, 26, "e.repaint"),
             change("src/esrc/scripts/eBrowser.e-awt", 296, 18, 24, "m.leaf"),
             change("src/esrc/scripts/eBrowser.e-awt", 297, 23, 35, "r.selectSpan"),
             change("src/esrc/scripts/eBrowser.e-awt", 297, 38, 49, "x.optDamage"),
             change("src/esrc/scripts/eBrowser.e-awt", 299, 45, 53, "m.eStack"),
             change("src/esrc/scripts/eBrowser.e-awt", 300, 20, 26, "m.leaf"),
             change("src/esrc/scripts/eBrowser.e-awt", 300, 27, 38, ").javaStack"),
             change("src/esrc/scripts/eBrowser.e-awt", 301, 21, 29, "e.append"),
             change("src/esrc/scripts/eBrowser.e-awt", 301, 39, 51, "e.replaceAll"),
             change("src/esrc/scripts/eBrowser.e-awt", 307, 74, 77, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 308, 13, 22, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-awt", 309, 13, 22, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-awt", 311, 24, 37, "l.getFilePath"),
             change("src/esrc/scripts/eBrowser.e-awt", 318, 18, 21, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 321, 26, 29, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 324, 29, 32, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 344, 29, 35, "e.eval"),
             change("src/esrc/scripts/eBrowser.e-awt", 346, 21, 30, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-awt", 347, 21, 30, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-awt", 367, 15, 21, "y.trim"),
             change("src/esrc/scripts/eBrowser.e-awt", 373, 31, 49, "e.getSelectedIndex"),
             change("src/esrc/scripts/eBrowser.e-awt", 376, 49, 67, "e.getSelectedValue"),
             change("src/esrc/scripts/eBrowser.e-awt", 378, 48, 54, "t.size"),
             change("src/esrc/scripts/eBrowser.e-awt", 395, 33, 36, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 398, 44, 55, ">.addKeymap"),
             change("src/esrc/scripts/eBrowser.e-awt", 399, 11, 22, "e.setKeymap"),
             change("src/esrc/scripts/eBrowser.e-awt", 400, 24, 27, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 401, 31, 49, "e.getCaretPosition"),
             change("src/esrc/scripts/eBrowser.e-awt", 403, 15, 29, "e.replaceRange"),
             change("src/esrc/scripts/eBrowser.e-awt", 404, 15, 33, "e.setCaretPosition"),
             change("src/esrc/scripts/eBrowser.e-awt", 404, 52, 58, "e.size"),
             change("src/esrc/scripts/eBrowser.e-awt", 408, 12, 23, "n.setAction"),
             change("src/esrc/scripts/eBrowser.e-awt", 409, 33, 47, ">.getKeyStroke"),
             change("src/esrc/scripts/eBrowser.e-awt", 409, 67, 75, ">.VK_TAB"),
             change("src/esrc/scripts/eBrowser.e-awt", 410, 9, 32, "p.addActionForKeyStroke"),
             change("src/esrc/scripts/eBrowser.e-awt", 411, 23, 26, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 412, 36, 54, "e.getCaretPosition"),
             change("src/esrc/scripts/eBrowser.e-awt", 414, 30, 36, "e.size"),
             change("src/esrc/scripts/eBrowser.e-awt", 416, 19, 36, "e.getSelectedText"),
             change("src/esrc/scripts/eBrowser.e-awt", 418, 31, 40, "e.getText"),
             change("src/esrc/scripts/eBrowser.e-awt", 423, 23, 37, "e.replaceRange"),
             change("src/esrc/scripts/eBrowser.e-awt", 424, 23, 41, "e.setCaretPosition"),
             change("src/esrc/scripts/eBrowser.e-awt", 430, 17, 28, "n.setAction"),
             change("src/esrc/scripts/eBrowser.e-awt", 431, 45, 59, ">.getKeyStroke"),
             change("src/esrc/scripts/eBrowser.e-awt", 432, 27, 35, ">.VK_TAB"),
             change("src/esrc/scripts/eBrowser.e-awt", 432, 48, 60, ">.SHIFT_MASK"),
             change("src/esrc/scripts/eBrowser.e-awt", 433, 9, 32, "p.addActionForKeyStroke"),
             change("src/esrc/scripts/eBrowser.e-awt", 434, 20, 23, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 435, 36, 54, "e.getCaretPosition"),
             change("src/esrc/scripts/eBrowser.e-awt", 436, 38, 41, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 437, 35, 54, "e.getSelectionStart"),
             change("src/esrc/scripts/eBrowser.e-awt", 438, 19, 37, "e.replaceSelection"),
             change("src/esrc/scripts/eBrowser.e-awt", 439, 19, 37, "e.setCaretPosition"),
             change("src/esrc/scripts/eBrowser.e-awt", 439, 59, 65, "n.size"),
             change("src/esrc/scripts/eBrowser.e-awt", 440, 26, 41, ">.transferFocus"),
             change("src/esrc/scripts/eBrowser.e-awt", 445, 30, 47, "e.getLineOfOffset"),
             change("src/esrc/scripts/eBrowser.e-awt", 446, 32, 52, "e.getLineStartOffset"),
             change("src/esrc/scripts/eBrowser.e-awt", 447, 34, 43, "e.getText"),
             change("src/esrc/scripts/eBrowser.e-awt", 448, 33, 39, "e.trim"),
             change("src/esrc/scripts/eBrowser.e-awt", 449, 18, 24, "d.size"),
             change("src/esrc/scripts/eBrowser.e-awt", 456, 14, 25, "n.setAction"),
             change("src/esrc/scripts/eBrowser.e-awt", 457, 39, 53, ">.getKeyStroke"),
             change("src/esrc/scripts/eBrowser.e-awt", 458, 27, 37, ">.VK_ENTER"),
             change("src/esrc/scripts/eBrowser.e-awt", 459, 9, 32, "p.addActionForKeyStroke"),
             change("src/esrc/scripts/eBrowser.e-awt", 462, 42, 45, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 464, 4, 10, "E.call"),
             change("src/esrc/scripts/eBrowser.e-awt", 464, 48, 58, "t.snapshot"),
             change("src/esrc/scripts/eBrowser.e-awt", 465, 36, 54, "e.setSelectedIndex"),
             change("src/esrc/scripts/eBrowser.e-awt", 475, 19, 22, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 476, 12, 18, "E.send"),
             change("src/esrc/scripts/eBrowser.e-awt", 478, 14, 25, "s.newButton"),
             change("src/esrc/scripts/eBrowser.e-awt", 481, 23, 26, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 482, 12, 18, "E.send"),
             change("src/esrc/scripts/eBrowser.e-awt", 484, 14, 29, "s.newToolButton"),
             change("src/esrc/scripts/eBrowser.e-awt", 487, 23, 26, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 488, 12, 18, "E.send"),
             change("src/esrc/scripts/eBrowser.e-awt", 490, 14, 27, "s.addMenuItem"),
             change("src/esrc/scripts/eBrowser.e-awt", 499, 12, 43, "l.addFuncsChangedAlertRecipient"),
             change("src/esrc/scripts/eBrowser.e-awt", 503, 19, 22, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 507, 20, 30, "e.setTitle"),
             change("src/esrc/scripts/eBrowser.e-awt", 507, 55, 68, "l.getFileName"),
             change("src/esrc/scripts/eBrowser.e-awt", 507, 89, 102, "l.getFilePath"),
             change("src/esrc/scripts/eBrowser.e-awt", 509, 12, 15, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 511, 28, 44, "e.getContentPane"),
             change("src/esrc/scripts/eBrowser.e-awt", 512, 12, 38, "e.setDefaultCloseOperation"),
             change("src/esrc/scripts/eBrowser.e-awt", 513, 30, 51, ">.DO_NOTHING_ON_CLOSE"),
             change("src/esrc/scripts/eBrowser.e-awt", 527, 19, 31, "n.setEnabled"),
             change("src/esrc/scripts/eBrowser.e-awt", 541, 14, 26, "n.setEnabled"),
             change("src/esrc/scripts/eBrowser.e-awt", 545, 18, 30, "n.setEnabled"),
             change("src/esrc/scripts/eBrowser.e-awt", 549, 12, 24, "n.setEnabled"),
             change("src/esrc/scripts/eBrowser.e-awt", 553, 11, 22, "e.setMargin"),
             change("src/esrc/scripts/eBrowser.e-awt", 554, 11, 24, "e.setLineWrap"),
             change("src/esrc/scripts/eBrowser.e-awt", 556, 11, 20, "e.setFont"),
             change("src/esrc/scripts/eBrowser.e-awt", 556, 54, 61, ">.PLAIN"),
             change("src/esrc/scripts/eBrowser.e-awt", 558, 29, 32, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 559, 37, 52, ">.transferFocus"),
             change("src/esrc/scripts/eBrowser.e-awt", 562, 34, 61, ">.VERTICAL_SCROLLBAR_ALWAYS"),
             change("src/esrc/scripts/eBrowser.e-awt", 563, 34, 63, ">.HORIZONTAL_SCROLLBAR_ALWAYS"),
             change("src/esrc/scripts/eBrowser.e-awt", 564, 20, 33, "e.getViewport"),
             change("src/esrc/scripts/eBrowser.e-awt", 564, 34, 39, ").add"),
             change("src/esrc/scripts/eBrowser.e-awt", 565, 20, 36, "e.setMinimumSize"),
             change("src/esrc/scripts/eBrowser.e-awt", 566, 20, 38, "e.setPreferredSize"),
             change("src/esrc/scripts/eBrowser.e-awt", 572, 21, 24, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 573, 23, 41, "e.getCanonicalPath"),
             change("src/esrc/scripts/eBrowser.e-awt", 575, 20, 26, "s.maps"),
             change("src/esrc/scripts/eBrowser.e-awt", 576, 26, 38, "].bringToTop"),
             change("src/esrc/scripts/eBrowser.e-awt", 577, 30, 45, "l.saveFileIsSet"),
             change("src/esrc/scripts/eBrowser.e-awt", 578, 28, 37, "e.getText"),
             change("src/esrc/scripts/eBrowser.e-awt", 578, 38, 44, ").trim"),
             change("src/esrc/scripts/eBrowser.e-awt", 578, 45, 51, ").size"),
             change("src/esrc/scripts/eBrowser.e-awt", 579, 20, 37, "l.replaceStubFile"),
             change("src/esrc/scripts/eBrowser.e-awt", 582, 19, 28, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-awt", 582, 37, 45, "l.reload"),
             change("src/esrc/scripts/eBrowser.e-awt", 593, 30, 33, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 594, 25, 31, "s.size"),
             change("src/esrc/scripts/eBrowser.e-awt", 598, 53, 73, ">.javaFileListFlavor"),
             change("src/esrc/scripts/eBrowser.e-awt", 608, 14, 30, "e.setMinimumSize"),
             change("src/esrc/scripts/eBrowser.e-awt", 609, 14, 23, "e.setFont"),
             change("src/esrc/scripts/eBrowser.e-awt", 609, 57, 64, ">.PLAIN"),
             change("src/esrc/scripts/eBrowser.e-awt", 611, 34, 61, ">.VERTICAL_SCROLLBAR_ALWAYS"),
             change("src/esrc/scripts/eBrowser.e-awt", 612, 34, 63, ">.HORIZONTAL_SCROLLBAR_ALWAYS"),
             change("src/esrc/scripts/eBrowser.e-awt", 613, 19, 35, "e.setMinimumSize"),
             change("src/esrc/scripts/eBrowser.e-awt", 614, 19, 32, "e.getViewport"),
             change("src/esrc/scripts/eBrowser.e-awt", 614, 33, 38, ").add"),
             change("src/esrc/scripts/eBrowser.e-awt", 616, 32, 35, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 617, 23, 38, "t.getClickCount"),
             change("src/esrc/scripts/eBrowser.e-awt", 618, 46, 65, "l.getVarLineIndices"),
             change("src/esrc/scripts/eBrowser.e-awt", 620, 43, 61, "e.getSelectedIndex"),
             change("src/esrc/scripts/eBrowser.e-awt", 621, 42, 62, "e.getLineStartOffset"),
             change("src/esrc/scripts/eBrowser.e-awt", 622, 23, 41, "e.setCaretPosition"),
             change("src/esrc/scripts/eBrowser.e-awt", 623, 27, 47, "e.getLineStartOffset"),
             change("src/esrc/scripts/eBrowser.e-awt", 624, 23, 42, "e.moveCaretPosition"),
             change("src/esrc/scripts/eBrowser.e-awt", 627, 30, 46, "t.isPopupTrigger"),
             change("src/esrc/scripts/eBrowser.e-awt", 628, 59, 79, ">.isRightMouseButton"),
             change("src/esrc/scripts/eBrowser.e-awt", 629, 68, 74, "t.getX"),
             change("src/esrc/scripts/eBrowser.e-awt", 629, 85, 91, "t.getY"),
             change("src/esrc/scripts/eBrowser.e-awt", 630, 48, 65, "e.locationToIndex"),
             change("src/esrc/scripts/eBrowser.e-awt", 631, 26, 44, "e.setSelectedIndex"),
             change("src/esrc/scripts/eBrowser.e-awt", 632, 27, 33, "p.show"),
             change("src/esrc/scripts/eBrowser.e-awt", 633, 41, 47, "t.getX"),
             change("src/esrc/scripts/eBrowser.e-awt", 634, 41, 47, "t.getY"),
             change("src/esrc/scripts/eBrowser.e-awt", 639, 14, 32, "e.addMouseListener"),
             change("src/esrc/scripts/eBrowser.e-awt", 640, 19, 35, "e.setMinimumSize"),
             change("src/esrc/scripts/eBrowser.e-awt", 644, 15, 24, "e.setFont"),
             change("src/esrc/scripts/eBrowser.e-awt", 644, 58, 65, ">.PLAIN"),
             change("src/esrc/scripts/eBrowser.e-awt", 646, 34, 61, ">.VERTICAL_SCROLLBAR_ALWAYS"),
             change("src/esrc/scripts/eBrowser.e-awt", 647, 34, 63, ">.HORIZONTAL_SCROLLBAR_ALWAYS"),
             change("src/esrc/scripts/eBrowser.e-awt", 648, 20, 33, "e.getViewport"),
             change("src/esrc/scripts/eBrowser.e-awt", 648, 34, 39, ").add"),
             change("src/esrc/scripts/eBrowser.e-awt", 653, 32, 35, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 654, 23, 38, "t.getClickCount"),
             change("src/esrc/scripts/eBrowser.e-awt", 655, 46, 65, "l.getOutlineIndices"),
             change("src/esrc/scripts/eBrowser.e-awt", 657, 44, 62, "e.getSelectedIndex"),
             change("src/esrc/scripts/eBrowser.e-awt", 658, 42, 62, "e.getLineStartOffset"),
             change("src/esrc/scripts/eBrowser.e-awt", 659, 23, 41, "e.setCaretPosition"),
             change("src/esrc/scripts/eBrowser.e-awt", 660, 27, 47, "e.getLineStartOffset"),
             change("src/esrc/scripts/eBrowser.e-awt", 661, 23, 42, "e.moveCaretPosition"),
             change("src/esrc/scripts/eBrowser.e-awt", 664, 30, 46, "t.isPopupTrigger"),
             change("src/esrc/scripts/eBrowser.e-awt", 665, 59, 79, ">.isRightMouseButton"),
             change("src/esrc/scripts/eBrowser.e-awt", 666, 68, 74, "t.getX"),
             change("src/esrc/scripts/eBrowser.e-awt", 666, 85, 91, "t.getY"),
             change("src/esrc/scripts/eBrowser.e-awt", 667, 49, 66, "e.locationToIndex"),
             change("src/esrc/scripts/eBrowser.e-awt", 668, 27, 45, "e.setSelectedIndex"),
             change("src/esrc/scripts/eBrowser.e-awt", 669, 28, 34, "p.show"),
             change("src/esrc/scripts/eBrowser.e-awt", 670, 42, 48, "t.getX"),
             change("src/esrc/scripts/eBrowser.e-awt", 671, 42, 48, "t.getY"),
             change("src/esrc/scripts/eBrowser.e-awt", 676, 15, 33, "e.addMouseListener"),
             change("src/esrc/scripts/eBrowser.e-awt", 694, 18, 36, "r.setLeftComponent"),
             change("src/esrc/scripts/eBrowser.e-awt", 695, 18, 37, "r.setRightComponent"),
             change("src/esrc/scripts/eBrowser.e-awt", 696, 18, 35, "r.setResizeWeight"),
             change("src/esrc/scripts/eBrowser.e-awt", 702, 18, 36, "r.setLeftComponent"),
             change("src/esrc/scripts/eBrowser.e-awt", 704, 18, 37, "r.setRightComponent"),
             change("src/esrc/scripts/eBrowser.e-awt", 705, 18, 35, "r.setResizeWeight"),
             change("src/esrc/scripts/eBrowser.e-awt", 709, 13, 22, "e.setFont"),
             change("src/esrc/scripts/eBrowser.e-awt", 709, 56, 63, ">.PLAIN"),
             change("src/esrc/scripts/eBrowser.e-awt", 711, 20, 31, "s.labelIcon"),
             change("src/esrc/scripts/eBrowser.e-awt", 712, 20, 31, "s.labelIcon"),
             change("src/esrc/scripts/eBrowser.e-awt", 713, 20, 31, "s.labelIcon"),
             change("src/esrc/scripts/eBrowser.e-awt", 726, 20, 23, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 729, 17, 20, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 730, 17, 26, "g.setMode"),
             change("src/esrc/scripts/eBrowser.e-awt", 730, 42, 48, ">.LOAD"),
             change("src/esrc/scripts/eBrowser.e-awt", 731, 17, 27, "g.setTitle"),
             change("src/esrc/scripts/eBrowser.e-awt", 732, 17, 23, "g.show"),
             change("src/esrc/scripts/eBrowser.e-awt", 733, 33, 42, "g.getFile"),
             change("src/esrc/scripts/eBrowser.e-awt", 734, 39, 45, "e.size"),
             change("src/esrc/scripts/eBrowser.e-awt", 735, 41, 55, "g.getDirectory"),
             change("src/esrc/scripts/eBrowser.e-awt", 741, 17, 20, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 741, 27, 33, "r.save"),
             change("src/esrc/scripts/eBrowser.e-awt", 742, 19, 22, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 743, 17, 26, "g.setMode"),
             change("src/esrc/scripts/eBrowser.e-awt", 743, 42, 48, ">.SAVE"),
             change("src/esrc/scripts/eBrowser.e-awt", 744, 17, 27, "g.setTitle"),
             change("src/esrc/scripts/eBrowser.e-awt", 745, 17, 23, "g.show"),
             change("src/esrc/scripts/eBrowser.e-awt", 746, 33, 42, "g.getFile"),
             change("src/esrc/scripts/eBrowser.e-awt", 747, 39, 45, "e.size"),
             change("src/esrc/scripts/eBrowser.e-awt", 748, 41, 55, "g.getDirectory"),
             change("src/esrc/scripts/eBrowser.e-awt", 751, 31, 49, "e.getCanonicalPath"),
             change("src/esrc/scripts/eBrowser.e-awt", 753, 24, 30, "s.maps"),
             change("src/esrc/scripts/eBrowser.e-awt", 756, 24, 32, "l.saveAs"),
             change("src/esrc/scripts/eBrowser.e-awt", 763, 23, 26, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 764, 30, 39, "e.getFont"),
             change("src/esrc/scripts/eBrowser.e-awt", 765, 29, 41, "t.deriveFont"),
             change("src/esrc/scripts/eBrowser.e-awt", 765, 54, 63, "t.getSize"),
             change("src/esrc/scripts/eBrowser.e-awt", 766, 15, 24, "e.setFont"),
             change("src/esrc/scripts/eBrowser.e-awt", 767, 19, 28, "e.setFont"),
             change("src/esrc/scripts/eBrowser.e-awt", 768, 18, 27, "e.setFont"),
             change("src/esrc/scripts/eBrowser.e-awt", 771, 24, 27, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 772, 30, 39, "e.getFont"),
             change("src/esrc/scripts/eBrowser.e-awt", 773, 29, 41, "t.deriveFont"),
             change("src/esrc/scripts/eBrowser.e-awt", 773, 54, 63, "t.getSize"),
             change("src/esrc/scripts/eBrowser.e-awt", 774, 15, 24, "e.setFont"),
             change("src/esrc/scripts/eBrowser.e-awt", 775, 19, 28, "e.setFont"),
             change("src/esrc/scripts/eBrowser.e-awt", 776, 18, 27, "e.setFont"),
             change("src/esrc/scripts/eBrowser.e-awt", 802, 23, 26, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 803, 23, 34, "r.setStatus"),
             change("src/esrc/scripts/eBrowser.e-awt", 805, 53, 62, "].getText"),
             change("src/esrc/scripts/eBrowser.e-awt", 807, 48, 65, "e.getSelectedText"),
             change("src/esrc/scripts/eBrowser.e-awt", 809, 31, 53, "t.requestsSubstitution"),
             change("src/esrc/scripts/eBrowser.e-awt", 812, 33, 41, "e.append"),
             change("src/esrc/scripts/eBrowser.e-awt", 815, 33, 41, "e.append"),
             change("src/esrc/scripts/eBrowser.e-awt", 818, 38, 46, "e.append"),
             change("src/esrc/scripts/eBrowser.e-awt", 819, 23, 34, "r.setStatus"),
             change("src/esrc/scripts/eBrowser.e-awt", 824, 18, 31, "s.addMenuItem"),
             change("src/esrc/scripts/eBrowser.e-awt", 845, 18, 21, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 846, 18, 21, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 847, 20, 23, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 853, 25, 28, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 854, 24, 27, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 855, 28, 31, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 859, 33, 42, "f.getText"),
             change("src/esrc/scripts/eBrowser.e-awt", 859, 43, 49, ").trim"),
             change("src/esrc/scripts/eBrowser.e-awt", 861, 51, 54, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 862, 29, 47, "g.getClickedButton"),
             change("src/esrc/scripts/eBrowser.e-awt", 863, 37, 46, "f.setText"),
             change("src/esrc/scripts/eBrowser.e-awt", 863, 56, 72, "g.getEnteredText"),
             change("src/esrc/scripts/eBrowser.e-awt", 868, 19, 22, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 868, 29, 36, "r.about"),
             change("src/esrc/scripts/eBrowser.e-awt", 877, 20, 29, "m.menuBar"),
             change("src/esrc/scripts/eBrowser.e-awt", 878, 9, 15, "m.menu"),
             change("src/esrc/scripts/eBrowser.e-awt", 879, 13, 21, "m.action"),
             change("src/esrc/scripts/eBrowser.e-awt", 880, 13, 21, "m.action"),
             change("src/esrc/scripts/eBrowser.e-awt", 881, 13, 21, "m.action"),
             change("src/esrc/scripts/eBrowser.e-awt", 882, 13, 21, "m.action"),
             change("src/esrc/scripts/eBrowser.e-awt", 884, 9, 15, "m.menu"),
             change("src/esrc/scripts/eBrowser.e-awt", 889, 13, 21, "m.action"),
             change("src/esrc/scripts/eBrowser.e-awt", 890, 13, 21, "m.action"),
             change("src/esrc/scripts/eBrowser.e-awt", 892, 9, 15, "m.menu"),
             change("src/esrc/scripts/eBrowser.e-awt", 893, 13, 21, "m.action"),
             change("src/esrc/scripts/eBrowser.e-awt", 895, 9, 15, "m.menu"),
             change("src/esrc/scripts/eBrowser.e-awt", 896, 13, 21, "m.action"),
             change("src/esrc/scripts/eBrowser.e-awt", 900, 12, 25, "e.setJMenuBar"),
             change("src/esrc/scripts/eBrowser.e-awt", 903, 11, 16, "e.add"),
             change("src/esrc/scripts/eBrowser.e-awt", 905, 11, 20, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-awt", 905, 29, 38, "l.getText"),
             change("src/esrc/scripts/eBrowser.e-awt", 906, 11, 29, "e.setCaretPosition"),
             change("src/esrc/scripts/eBrowser.e-awt", 907, 12, 18, "e.pack"),
             change("src/esrc/scripts/eBrowser.e-awt", 908, 12, 21, "e.setSize"),
             change("src/esrc/scripts/eBrowser.e-awt", 909, 12, 25, "e.setLocation"),
             change("src/esrc/scripts/eBrowser.e-awt", 909, 37, 46, "y.nextInt"),
             change("src/esrc/scripts/eBrowser.e-awt", 909, 66, 75, "y.nextInt"),
             change("src/esrc/scripts/eBrowser.e-awt", 910, 4, 10, "E.call"),
             change("src/esrc/scripts/eBrowser.e-awt", 913, 4, 10, "E.call"),
             change("src/esrc/scripts/eBrowser.e-awt", 914, 12, 18, "e.show"),
             change("src/esrc/scripts/eBrowser.e-awt", 919, 28, 31, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 920, 24, 46, "l.storedVersionIsNewer"),
             change("src/esrc/scripts/eBrowser.e-awt", 922, 27, 36, "e.getText"),
             change("src/esrc/scripts/eBrowser.e-awt", 922, 50, 59, "l.getText"),
             change("src/esrc/scripts/eBrowser.e-awt", 926, 54, 73, ">.showConfirmDialog"),
             change("src/esrc/scripts/eBrowser.e-awt", 929, 38, 53, ">.YES_NO_OPTION"),
             change("src/esrc/scripts/eBrowser.e-awt", 930, 54, 66, ">.YES_OPTION"),
             change("src/esrc/scripts/eBrowser.e-awt", 931, 27, 36, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-awt", 931, 45, 53, "l.reload"),
             change("src/esrc/scripts/eBrowser.e-awt", 932, 32, 55, "l.resetSaveTimeNoReload"),
             change("src/esrc/scripts/eBrowser.e-awt", 938, 12, 31, "e.addWindowListener"),
             change("src/esrc/scripts/eBrowser.e-awt", 942, 24, 37, "l.getFilePath"),
             change("src/esrc/scripts/eBrowser.e-awt", 951, 47, 56, "e.getText"),
             change("src/esrc/scripts/eBrowser.e-awt", 952, 13, 23, "r.getTwine"),
             change("src/esrc/scripts/eBrowser.e-awt", 956, 21, 24, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 957, 16, 23, "l.close"),
             change("src/esrc/scripts/eBrowser.e-awt", 959, 20, 29, "e.dispose"),
             change("src/esrc/scripts/eBrowser.e-awt", 965, 16, 19, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 966, 20, 29, "l.setText"),
             change("src/esrc/scripts/eBrowser.e-awt", 966, 37, 46, "e.getText"),
             change("src/esrc/scripts/eBrowser.e-awt", 967, 24, 39, "l.saveFileIsSet"),
             change("src/esrc/scripts/eBrowser.e-awt", 968, 24, 30, "l.save"),
             change("src/esrc/scripts/eBrowser.e-awt", 973, 22, 25, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 991, 22, 25, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 995, 31, 34, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 996, 21, 30, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-awt", 997, 21, 30, "e.repaint"),
             change("src/esrc/scripts/eBrowser.e-awt", 999, 16, 19, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 1000, 19, 30, "r.setStatus"),
             change("src/esrc/scripts/eBrowser.e-awt", 1001, 35, 44, "e.getText"),
             change("src/esrc/scripts/eBrowser.e-awt", 1001, 45, 51, ").size"),
             change("src/esrc/scripts/eBrowser.e-awt", 1002, 43, 61, "e.getCaretPosition"),
             change("src/esrc/scripts/eBrowser.e-awt", 1003, 37, 46, "e.getText"),
             change("src/esrc/scripts/eBrowser.e-awt", 1005, 51, 60, "d.getText"),
             change("src/esrc/scripts/eBrowser.e-awt", 1006, 43, 49, "t.size"),
             change("src/esrc/scripts/eBrowser.e-awt", 1007, 23, 41, "e.setCaretPosition"),
             change("src/esrc/scripts/eBrowser.e-awt", 1008, 23, 42, "e.moveCaretPosition"),
             change("src/esrc/scripts/eBrowser.e-awt", 1009, 48, 57, "d.getText"),
             change("src/esrc/scripts/eBrowser.e-awt", 1009, 58, 64, ").size"),
             change("src/esrc/scripts/eBrowser.e-awt", 1010, 23, 34, "r.setStatus"),
             change("src/esrc/scripts/eBrowser.e-awt", 1014, 27, 38, "r.setStatus"),
             change("src/esrc/scripts/eBrowser.e-awt", 1016, 16, 19, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 1027, 38, 58, "e.getLineStartOffset"),
             change("src/esrc/scripts/eBrowser.e-awt", 1029, 19, 37, "e.setCaretPosition"),
             change("src/esrc/scripts/eBrowser.e-awt", 1030, 23, 43, "e.getLineStartOffset"),
             change("src/esrc/scripts/eBrowser.e-awt", 1032, 19, 38, "e.moveCaretPosition"),
             change("src/esrc/scripts/eBrowser.e-awt", 1037, 17, 20, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 1040, 25, 28, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 1041, 21, 30, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-awt", 1042, 47, 66, "e.getSelectionStart"),
             change("src/esrc/scripts/eBrowser.e-awt", 1043, 47, 64, "e.getSelectionEnd"),
             change("src/esrc/scripts/eBrowser.e-awt", 1048, 26, 29, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 1049, 21, 30, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-awt", 1052, 21, 24, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 1053, 41, 59, "e.getSelectedValue"),
             change("src/esrc/scripts/eBrowser.e-awt", 1054, 39, 45, "t.size"),
             change("src/esrc/scripts/eBrowser.e-awt", 1055, 45, 51, "t.trim"),
             change("src/esrc/scripts/eBrowser.e-awt", 1059, 22, 25, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 1060, 42, 60, "e.getSelectedValue"),
             change("src/esrc/scripts/eBrowser.e-awt", 1061, 39, 45, "t.size"),
             change("src/esrc/scripts/eBrowser.e-awt", 1077, 45, 51, "n.trim"),
             change("src/esrc/scripts/eBrowser.e-awt", 1081, 21, 24, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 1083, 21, 38, "e.getLineOfOffset"),
             change("src/esrc/scripts/eBrowser.e-awt", 1083, 46, 64, "e.getCaretPosition"),
             change("src/esrc/scripts/eBrowser.e-awt", 1085, 35, 54, "l.getVarLineIndices"),
             change("src/esrc/scripts/eBrowser.e-awt", 1086, 41, 47, "s.size"),
             change("src/esrc/scripts/eBrowser.e-awt", 1087, 33, 39, "s.size"),
             change("src/esrc/scripts/eBrowser.e-awt", 1091, 26, 44, "e.setSelectedIndex"),
             change("src/esrc/scripts/eBrowser.e-awt", 1092, 26, 48, "e.ensureIndexIsVisible"),
             change("src/esrc/scripts/eBrowser.e-awt", 1097, 22, 25, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 1099, 21, 38, "e.getLineOfOffset"),
             change("src/esrc/scripts/eBrowser.e-awt", 1099, 46, 64, "e.getCaretPosition"),
             change("src/esrc/scripts/eBrowser.e-awt", 1101, 35, 54, "l.getOutlineIndices"),
             change("src/esrc/scripts/eBrowser.e-awt", 1102, 41, 47, "s.size"),
             change("src/esrc/scripts/eBrowser.e-awt", 1103, 33, 39, "s.size"),
             change("src/esrc/scripts/eBrowser.e-awt", 1107, 27, 45, "e.setSelectedIndex"),
             change("src/esrc/scripts/eBrowser.e-awt", 1108, 27, 49, "e.ensureIndexIsVisible"),
             change("src/esrc/scripts/eBrowser.e-awt", 1113, 20, 23, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 1114, 19, 32, "e.setEditable"),
             change("src/esrc/scripts/eBrowser.e-awt", 1115, 19, 30, "r.setStatus"),
             change("src/esrc/scripts/eBrowser.e-awt", 1116, 21, 30, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-awt", 1117, 22, 25, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 1119, 27, 36, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-awt", 1119, 48, 56, "r.pretty"),
             change("src/esrc/scripts/eBrowser.e-awt", 1120, 27, 38, "r.setStatus"),
             change("src/esrc/scripts/eBrowser.e-awt", 1124, 34, 47, "e.setEditable"),
             change("src/esrc/scripts/eBrowser.e-awt", 1128, 24, 27, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 1129, 59, 75, "l.getOutlineList"),
             change("src/esrc/scripts/eBrowser.e-awt", 1130, 58, 74, "l.getVarLineList"),
             change("src/esrc/scripts/eBrowser.e-awt", 1132, 22, 25, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 1137, 30, 49, ">.getDefaultToolkit"),
             change("src/esrc/scripts/eBrowser.e-awt", 1137, 50, 70, ").getSystemClipboard"),
             change("src/esrc/scripts/eBrowser.e-awt", 1139, 44, 57, "p.getContents"),
             change("src/esrc/scripts/eBrowser.e-awt", 1143, 50, 64, ">.stringFlavor"),
             change("src/esrc/scripts/eBrowser.e-awt", 1146, 35, 52, "t.getTransferData"),
             change("src/esrc/scripts/eBrowser.e-awt", 1152, 30, 37, "e.split"),
             change("src/esrc/scripts/eBrowser.e-awt", 1161, 25, 28, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 1165, 27, 36, "e.getText"),
             change("src/esrc/scripts/eBrowser.e-awt", 1165, 50, 59, "l.getText"),
             change("src/esrc/scripts/eBrowser.e-awt", 1169, 51, 64, "l.getFileName"),
             change("src/esrc/scripts/eBrowser.e-awt", 1173, 76, 79, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-awt", 1180, 35, 41, "r.save"),
             change("src/esrc/scripts/eBrowser.e-awt", 1198, 24, 33, "p.getArgs"),
             change("src/esrc/scripts/eBrowser.e-awt", 1199, 14, 20, "s.size"),
             change("src/esrc/scripts/eBrowser.e-awt", 1205, 26, 44, "e.getCanonicalPath"),
             change("src/esrc/scripts/eBrowser.e-awt", 1208, 5, 17, "p.blockAtTop"),
             change("src/esrc/scripts/eBrowser.e-swt", 9, 17, 20, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 9, 26, 35, "r.println"),
             change("src/esrc/scripts/eBrowser.e-swt", 16, 44, 56, ">.getRuntime"),
             change("src/esrc/scripts/eBrowser.e-swt", 17, 17, 20, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 19, 26, 38, "e.freeMemory"),
             change("src/esrc/scripts/eBrowser.e-swt", 20, 27, 40, "e.totalMemory"),
             change("src/esrc/scripts/eBrowser.e-swt", 44, 34, 42, "T.NORMAL"),
             change("src/esrc/scripts/eBrowser.e-swt", 47, 18, 25, "].asMap"),
             change("src/esrc/scripts/eBrowser.e-swt", 47, 26, 35, ").diverge"),
             change("src/esrc/scripts/eBrowser.e-swt", 50, 55, 67, "L.openStream"),
             change("src/esrc/scripts/eBrowser.e-swt", 56, 13, 22, "t.setText"),
             change("src/esrc/scripts/eBrowser.e-swt", 57, 13, 23, "t.setImage"),
             change("src/esrc/scripts/eBrowser.e-swt", 82, 49, 57, ">.asType"),
             change("src/esrc/scripts/eBrowser.e-swt", 92, 13, 21, "r.exists"),
             change("src/esrc/scripts/eBrowser.e-swt", 92, 33, 41, "r.mkdirs"),
             change("src/esrc/scripts/eBrowser.e-swt", 94, 24, 32, "f.exists"),
             change("src/esrc/scripts/eBrowser.e-swt", 94, 55, 64, "f.setText"),
             change("src/esrc/scripts/eBrowser.e-swt", 96, 22, 25, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 98, 47, 56, "f.getText"),
             change("src/esrc/scripts/eBrowser.e-swt", 98, 57, 63, ").trim"),
             change("src/esrc/scripts/eBrowser.e-swt", 99, 25, 31, "h.size"),
             change("src/esrc/scripts/eBrowser.e-swt", 126, 28, 31, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 127, 16, 22, "t.doit"),
             change("src/esrc/scripts/eBrowser.e-swt", 128, 31, 46, "r.windowClosing"),
             change("src/esrc/scripts/eBrowser.e-swt", 132, 12, 30, "e.addShellListener"),
             change("src/esrc/scripts/eBrowser.e-swt", 134, 31, 34, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 135, 20, 31, "t.removeKey"),
             change("src/esrc/scripts/eBrowser.e-swt", 136, 24, 30, "t.size"),
             change("src/esrc/scripts/eBrowser.e-swt", 136, 43, 58, "p.continueAtTop"),
             change("src/esrc/scripts/eBrowser.e-swt", 139, 12, 32, "e.addDisposeListener"),
             change("src/esrc/scripts/eBrowser.e-swt", 148, 59, 62, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 149, 27, 41, "e.getSelection"),
             change("src/esrc/scripts/eBrowser.e-swt", 149, 42, 45, ").x"),
             change("src/esrc/scripts/eBrowser.e-swt", 150, 11, 19, "e.insert"),
             change("src/esrc/scripts/eBrowser.e-swt", 151, 11, 25, "e.setSelection"),
             change("src/esrc/scripts/eBrowser.e-swt", 151, 57, 63, "t.size"),
             change("src/esrc/scripts/eBrowser.e-swt", 152, 19, 34, ">.transferFocus"),
             change("src/esrc/scripts/eBrowser.e-swt", 155, 16, 19, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 156, 22, 32, "p.getProps"),
             change("src/esrc/scripts/eBrowser.e-swt", 172, 22, 31, "].diverge"),
             change("src/esrc/scripts/eBrowser.e-swt", 173, 13, 21, "r.exists"),
             change("src/esrc/scripts/eBrowser.e-swt", 175, 19, 28, "h.getName"),
             change("src/esrc/scripts/eBrowser.e-swt", 176, 24, 30, "s.push"),
             change("src/esrc/scripts/eBrowser.e-swt", 180, 12, 22, "s.snapshot"),
             change("src/esrc/scripts/eBrowser.e-swt", 183, 18, 25, "].asMap"),
             change("src/esrc/scripts/eBrowser.e-swt", 183, 26, 35, ").diverge"),
             change("src/esrc/scripts/eBrowser.e-swt", 198, 34, 41, "].asMap"),
             change("src/esrc/scripts/eBrowser.e-swt", 198, 42, 51, ").diverge"),
             change("src/esrc/scripts/eBrowser.e-swt", 199, 48, 67, ">.currentTimeMillis"),
             change("src/esrc/scripts/eBrowser.e-swt", 200, 27, 36, "e.getText"),
             change("src/esrc/scripts/eBrowser.e-swt", 202, 36, 50, "e.lastModified"),
             change("src/esrc/scripts/eBrowser.e-swt", 210, 21, 30, "e.getName"),
             change("src/esrc/scripts/eBrowser.e-swt", 213, 21, 39, "e.getCanonicalPath"),
             change("src/esrc/scripts/eBrowser.e-swt", 217, 53, 56, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 218, 49, 52, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 222, 53, 56, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 223, 32, 43, "t.removeKey"),
             change("src/esrc/scripts/eBrowser.e-swt", 225, 26, 29, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 229, 73, 76, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 234, 50, 64, "h.linesChanged"),
             change("src/esrc/scripts/eBrowser.e-swt", 245, 16, 19, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 246, 21, 30, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-swt", 247, 40, 54, "e.lastModified"),
             change("src/esrc/scripts/eBrowser.e-swt", 249, 26, 29, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 251, 24, 35, "s.removeKey"),
             change("src/esrc/scripts/eBrowser.e-swt", 251, 45, 63, "e.getCanonicalPath"),
             change("src/esrc/scripts/eBrowser.e-swt", 254, 20, 26, "l.save"),
             change("src/esrc/scripts/eBrowser.e-swt", 256, 42, 45, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 262, 39, 53, "e.lastModified"),
             change("src/esrc/scripts/eBrowser.e-swt", 265, 31, 40, "e.getText"),
             change("src/esrc/scripts/eBrowser.e-swt", 266, 40, 54, "e.lastModified"),
             change("src/esrc/scripts/eBrowser.e-swt", 270, 33, 36, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 271, 40, 54, "e.lastModified"),
             change("src/esrc/scripts/eBrowser.e-swt", 273, 17, 20, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 275, 24, 35, "s.removeKey"),
             change("src/esrc/scripts/eBrowser.e-swt", 275, 45, 63, "e.getCanonicalPath"),
             change("src/esrc/scripts/eBrowser.e-swt", 297, 13, 22, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-swt", 309, 25, 31, "e.eval"),
             change("src/esrc/scripts/eBrowser.e-swt", 311, 21, 29, "e.append"),
             change("src/esrc/scripts/eBrowser.e-swt", 314, 21, 29, "e.append"),
             change("src/esrc/scripts/eBrowser.e-swt", 323, 31, 34, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 341, 74, 77, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 342, 13, 22, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-swt", 343, 13, 22, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-swt", 345, 24, 37, "l.getFilePath"),
             change("src/esrc/scripts/eBrowser.e-swt", 350, 18, 21, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 353, 26, 29, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 356, 29, 32, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 376, 29, 35, "e.eval"),
             change("src/esrc/scripts/eBrowser.e-swt", 378, 21, 30, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-swt", 379, 21, 30, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-swt", 399, 15, 21, "y.trim"),
             change("src/esrc/scripts/eBrowser.e-swt", 406, 31, 50, "e.getSelectionIndex"),
             change("src/esrc/scripts/eBrowser.e-swt", 409, 50, 64, "e.getSelection"),
             change("src/esrc/scripts/eBrowser.e-swt", 411, 48, 54, "t.size"),
             change("src/esrc/scripts/eBrowser.e-swt", 432, 34, 37, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 434, 32, 50, "e.getLineDelimiter"),
             change("src/esrc/scripts/eBrowser.e-swt", 436, 19, 22, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 437, 31, 45, "e.getSelection"),
             change("src/esrc/scripts/eBrowser.e-swt", 437, 46, 49, ").x"),
             change("src/esrc/scripts/eBrowser.e-swt", 439, 15, 23, "e.insert"),
             change("src/esrc/scripts/eBrowser.e-swt", 440, 15, 29, "e.setSelection"),
             change("src/esrc/scripts/eBrowser.e-swt", 440, 48, 54, "e.size"),
             change("src/esrc/scripts/eBrowser.e-swt", 443, 24, 27, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 444, 36, 52, "e.getCaretOffset"),
             change("src/esrc/scripts/eBrowser.e-swt", 446, 30, 36, "e.size"),
             change("src/esrc/scripts/eBrowser.e-swt", 448, 27, 45, "e.getSelectionText"),
             change("src/esrc/scripts/eBrowser.e-swt", 449, 19, 37, "e.getSelectionText"),
             change("src/esrc/scripts/eBrowser.e-swt", 451, 31, 45, "e.getTextRange"),
             change("src/esrc/scripts/eBrowser.e-swt", 456, 23, 41, "e.replaceTextRange"),
             change("src/esrc/scripts/eBrowser.e-swt", 458, 23, 39, "e.setCaretOffset"),
             change("src/esrc/scripts/eBrowser.e-swt", 464, 21, 24, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 465, 36, 52, "e.getCaretOffset"),
             change("src/esrc/scripts/eBrowser.e-swt", 466, 38, 41, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 467, 35, 49, "e.getSelection"),
             change("src/esrc/scripts/eBrowser.e-swt", 467, 50, 53, ").x"),
             change("src/esrc/scripts/eBrowser.e-swt", 470, 16, 22, "t.text"),
             change("src/esrc/scripts/eBrowser.e-swt", 472, 30, 47, "e.getLineAtOffset"),
             change("src/esrc/scripts/eBrowser.e-swt", 473, 32, 49, "e.getOffsetAtLine"),
             change("src/esrc/scripts/eBrowser.e-swt", 474, 34, 48, "e.getTextRange"),
             change("src/esrc/scripts/eBrowser.e-swt", 476, 33, 39, "e.trim"),
             change("src/esrc/scripts/eBrowser.e-swt", 477, 18, 24, "d.size"),
             change("src/esrc/scripts/eBrowser.e-swt", 485, 27, 30, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 486, 28, 34, "t.text"),
             change("src/esrc/scripts/eBrowser.e-swt", 489, 20, 26, "t.doit"),
             change("src/esrc/scripts/eBrowser.e-swt", 492, 28, 39, "t.stateMask"),
             change("src/esrc/scripts/eBrowser.e-swt", 492, 47, 54, "T.SHIFT"),
             change("src/esrc/scripts/eBrowser.e-swt", 511, 11, 30, "e.addVerifyListener"),
             change("src/esrc/scripts/eBrowser.e-swt", 514, 29, 32, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 515, 20, 28, "t.detail"),
             change("src/esrc/scripts/eBrowser.e-swt", 515, 36, 59, "T.TRAVERSE_TAB_PREVIOUS"),
             change("src/esrc/scripts/eBrowser.e-swt", 516, 20, 26, "t.doit"),
             change("src/esrc/scripts/eBrowser.e-swt", 523, 11, 32, "e.addTraverseListener"),
             change("src/esrc/scripts/eBrowser.e-swt", 526, 42, 45, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 528, 30, 40, "e.getItems"),
             change("src/esrc/scripts/eBrowser.e-swt", 530, 18, 24, "t.size"),
             change("src/esrc/scripts/eBrowser.e-swt", 530, 33, 39, "t.size"),
             change("src/esrc/scripts/eBrowser.e-swt", 533, 30, 36, "t.size"),
             change("src/esrc/scripts/eBrowser.e-swt", 544, 8, 14, "E.call"),
             change("src/esrc/scripts/eBrowser.e-swt", 544, 49, 59, "t.snapshot"),
             change("src/esrc/scripts/eBrowser.e-swt", 546, 19, 33, "e.setSelection"),
             change("src/esrc/scripts/eBrowser.e-swt", 547, 19, 34, "e.showSelection"),
             change("src/esrc/scripts/eBrowser.e-swt", 560, 12, 43, "l.addFuncsChangedAlertRecipient"),
             change("src/esrc/scripts/eBrowser.e-swt", 565, 19, 22, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 569, 20, 29, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-swt", 569, 54, 67, "l.getFileName"),
             change("src/esrc/scripts/eBrowser.e-swt", 570, 48, 61, "l.getFilePath"),
             change("src/esrc/scripts/eBrowser.e-swt", 572, 12, 15, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 579, 28, 31, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 580, 16, 22, "t.doit"),
             change("src/esrc/scripts/eBrowser.e-swt", 584, 12, 30, "e.addShellListener"),
             change("src/esrc/scripts/eBrowser.e-swt", 588, 9, 21, "t.numColumns"),
             change("src/esrc/scripts/eBrowser.e-swt", 589, 9, 23, "t.marginHeight"),
             change("src/esrc/scripts/eBrowser.e-swt", 590, 9, 26, "t.verticalSpacing"),
             change("src/esrc/scripts/eBrowser.e-swt", 591, 9, 22, "t.marginWidth"),
             change("src/esrc/scripts/eBrowser.e-swt", 592, 9, 28, "t.horizontalSpacing"),
             change("src/esrc/scripts/eBrowser.e-swt", 593, 12, 23, "e.setLayout"),
             change("src/esrc/scripts/eBrowser.e-swt", 596, 48, 54, "T.NULL"),
             change("src/esrc/scripts/eBrowser.e-swt", 598, 17, 29, "t.numColumns"),
             change("src/esrc/scripts/eBrowser.e-swt", 599, 17, 31, "t.marginHeight"),
             change("src/esrc/scripts/eBrowser.e-swt", 600, 17, 34, "t.verticalSpacing"),
             change("src/esrc/scripts/eBrowser.e-swt", 601, 17, 30, "t.marginWidth"),
             change("src/esrc/scripts/eBrowser.e-swt", 602, 17, 36, "t.horizontalSpacing"),
             change("src/esrc/scripts/eBrowser.e-swt", 603, 11, 22, "a.setLayout"),
             change("src/esrc/scripts/eBrowser.e-swt", 604, 38, 55, "A.FILL_HORIZONTAL"),
             change("src/esrc/scripts/eBrowser.e-swt", 606, 11, 26, "a.setLayoutData"),
             change("src/esrc/scripts/eBrowser.e-swt", 609, 49, 61, "T.HORIZONTAL"),
             change("src/esrc/scripts/eBrowser.e-swt", 609, 68, 74, "T.FLAT"),
             change("src/esrc/scripts/eBrowser.e-swt", 610, 10, 25, "r.setLayoutData"),
             change("src/esrc/scripts/eBrowser.e-swt", 614, 35, 38, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 615, 16, 22, "E.call"),
             change("src/esrc/scripts/eBrowser.e-swt", 619, 52, 58, "T.PUSH"),
             change("src/esrc/scripts/eBrowser.e-swt", 620, 53, 65, "i.openStream"),
             change("src/esrc/scripts/eBrowser.e-swt", 621, 13, 23, "n.setImage"),
             change("src/esrc/scripts/eBrowser.e-swt", 622, 13, 26, "n.setHotImage"),
             change("src/esrc/scripts/eBrowser.e-swt", 623, 13, 29, "n.setToolTipText"),
             change("src/esrc/scripts/eBrowser.e-swt", 624, 13, 35, "n.addSelectionListener"),
             change("src/esrc/scripts/eBrowser.e-swt", 634, 17, 20, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 635, 48, 59, "T.SEPARATOR"),
             change("src/esrc/scripts/eBrowser.e-swt", 651, 19, 31, "n.setEnabled"),
             change("src/esrc/scripts/eBrowser.e-swt", 655, 14, 26, "n.setEnabled"),
             change("src/esrc/scripts/eBrowser.e-swt", 664, 18, 30, "n.setEnabled"),
             change("src/esrc/scripts/eBrowser.e-swt", 668, 12, 24, "n.setEnabled"),
             change("src/esrc/scripts/eBrowser.e-swt", 677, 45, 53, "T.SINGLE"),
             change("src/esrc/scripts/eBrowser.e-swt", 677, 60, 68, "T.BORDER"),
             change("src/esrc/scripts/eBrowser.e-swt", 678, 14, 29, "d.setLayoutData"),
             change("src/esrc/scripts/eBrowser.e-swt", 678, 46, 63, "A.FILL_HORIZONTAL"),
             change("src/esrc/scripts/eBrowser.e-swt", 679, 14, 23, "d.setFont"),
             change("src/esrc/scripts/eBrowser.e-swt", 680, 14, 29, "d.setBackground"),
             change("src/esrc/scripts/eBrowser.e-swt", 683, 62, 74, "T.HORIZONTAL"),
             change("src/esrc/scripts/eBrowser.e-swt", 684, 18, 33, "r.setLayoutData"),
             change("src/esrc/scripts/eBrowser.e-swt", 684, 50, 61, "A.FILL_BOTH"),
             change("src/esrc/scripts/eBrowser.e-swt", 688, 22, 30, "T.BORDER"),
             change("src/esrc/scripts/eBrowser.e-swt", 688, 38, 48, "T.V_SCROLL"),
             change("src/esrc/scripts/eBrowser.e-swt", 688, 55, 65, "T.H_SCROLL"),
             change("src/esrc/scripts/eBrowser.e-swt", 689, 15, 24, "e.setFont"),
             change("src/esrc/scripts/eBrowser.e-swt", 690, 15, 30, "e.setBackground"),
             change("src/esrc/scripts/eBrowser.e-swt", 692, 15, 25, "e.setItems"),
             change("src/esrc/scripts/eBrowser.e-swt", 697, 51, 63, "T.HORIZONTAL"),
             change("src/esrc/scripts/eBrowser.e-swt", 698, 18, 33, "r.setLayoutData"),
             change("src/esrc/scripts/eBrowser.e-swt", 698, 50, 67, "A.FILL_HORIZONTAL"),
             change("src/esrc/scripts/eBrowser.e-swt", 702, 32, 40, "T.BORDER"),
             change("src/esrc/scripts/eBrowser.e-swt", 702, 48, 58, "T.V_SCROLL"),
             change("src/esrc/scripts/eBrowser.e-swt", 702, 65, 75, "T.H_SCROLL"),
             change("src/esrc/scripts/eBrowser.e-swt", 703, 11, 20, "e.setFont"),
             change("src/esrc/scripts/eBrowser.e-swt", 704, 11, 26, "e.setBackground"),
             change("src/esrc/scripts/eBrowser.e-swt", 706, 29, 32, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 707, 23, 38, ">.transferFocus"),
             change("src/esrc/scripts/eBrowser.e-swt", 714, 21, 24, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 715, 23, 41, "e.getCanonicalPath"),
             change("src/esrc/scripts/eBrowser.e-swt", 717, 20, 26, "s.maps"),
             change("src/esrc/scripts/eBrowser.e-swt", 718, 26, 38, "].bringToTop"),
             change("src/esrc/scripts/eBrowser.e-swt", 719, 30, 45, "l.saveFileIsSet"),
             change("src/esrc/scripts/eBrowser.e-swt", 720, 28, 37, "e.getText"),
             change("src/esrc/scripts/eBrowser.e-swt", 720, 38, 44, ").trim"),
             change("src/esrc/scripts/eBrowser.e-swt", 720, 45, 51, ").size"),
             change("src/esrc/scripts/eBrowser.e-swt", 721, 20, 37, "l.replaceStubFile"),
             change("src/esrc/scripts/eBrowser.e-swt", 724, 19, 28, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-swt", 724, 37, 45, "l.reload"),
             change("src/esrc/scripts/eBrowser.e-swt", 735, 30, 33, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 736, 25, 31, "s.size"),
             change("src/esrc/scripts/eBrowser.e-swt", 742, 45, 58, ">.getInstance"),
             change("src/esrc/scripts/eBrowser.e-swt", 745, 29, 40, "D.DROP_LINK"),
             change("src/esrc/scripts/eBrowser.e-swt", 746, 32, 43, "D.DROP_MOVE"),
             change("src/esrc/scripts/eBrowser.e-swt", 746, 50, 61, "D.DROP_COPY"),
             change("src/esrc/scripts/eBrowser.e-swt", 747, 21, 34, "t.setTransfer"),
             change("src/esrc/scripts/eBrowser.e-swt", 751, 28, 41, "t.getDropData"),
             change("src/esrc/scripts/eBrowser.e-swt", 756, 27, 30, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 760, 39, 56, "r.isSupportedType"),
             change("src/esrc/scripts/eBrowser.e-swt", 761, 36, 53, "t.currentDataType"),
             change("src/esrc/scripts/eBrowser.e-swt", 767, 21, 38, "t.addDropListener"),
             change("src/esrc/scripts/eBrowser.e-swt", 773, 39, 47, "T.BORDER"),
             change("src/esrc/scripts/eBrowser.e-swt", 773, 54, 64, "T.V_SCROLL"),
             change("src/esrc/scripts/eBrowser.e-swt", 774, 14, 23, "e.setFont"),
             change("src/esrc/scripts/eBrowser.e-swt", 776, 14, 24, "e.setItems"),
             change("src/esrc/scripts/eBrowser.e-swt", 778, 20, 23, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 778, 30, 41, "r.insertVar"),
             change("src/esrc/scripts/eBrowser.e-swt", 779, 19, 22, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 779, 29, 40, "r.alignVars"),
             change("src/esrc/scripts/eBrowser.e-swt", 788, 33, 36, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 790, 42, 61, "l.getVarLineIndices"),
             change("src/esrc/scripts/eBrowser.e-swt", 792, 39, 58, "e.getSelectionIndex"),
             change("src/esrc/scripts/eBrowser.e-swt", 793, 38, 55, "e.getOffsetAtLine"),
             change("src/esrc/scripts/eBrowser.e-swt", 795, 33, 50, "e.getOffsetAtLine"),
             change("src/esrc/scripts/eBrowser.e-swt", 796, 19, 33, "e.setSelection"),
             change("src/esrc/scripts/eBrowser.e-swt", 801, 14, 32, "e.addMouseListener"),
             change("src/esrc/scripts/eBrowser.e-swt", 805, 20, 23, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 805, 30, 42, "r.insertFunc"),
             change("src/esrc/scripts/eBrowser.e-swt", 806, 19, 22, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 806, 29, 41, "r.alignFuncs"),
             change("src/esrc/scripts/eBrowser.e-swt", 815, 33, 36, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 817, 42, 61, "l.getOutlineIndices"),
             change("src/esrc/scripts/eBrowser.e-swt", 819, 40, 59, "e.getSelectionIndex"),
             change("src/esrc/scripts/eBrowser.e-swt", 821, 38, 55, "e.getOffsetAtLine"),
             change("src/esrc/scripts/eBrowser.e-swt", 824, 21, 38, "e.getOffsetAtLine"),
             change("src/esrc/scripts/eBrowser.e-swt", 825, 19, 33, "e.setSelection"),
             change("src/esrc/scripts/eBrowser.e-swt", 830, 15, 33, "e.addMouseListener"),
             change("src/esrc/scripts/eBrowser.e-swt", 841, 50, 58, "T.BORDER"),
             change("src/esrc/scripts/eBrowser.e-swt", 842, 13, 22, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-swt", 843, 13, 28, "e.setLayoutData"),
             change("src/esrc/scripts/eBrowser.e-swt", 843, 45, 62, "A.FILL_HORIZONTAL"),
             change("src/esrc/scripts/eBrowser.e-swt", 847, 18, 30, "r.setWeights"),
             change("src/esrc/scripts/eBrowser.e-swt", 848, 18, 30, "r.setWeights"),
             change("src/esrc/scripts/eBrowser.e-swt", 867, 20, 23, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 871, 17, 20, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 872, 59, 65, "T.OPEN"),
             change("src/esrc/scripts/eBrowser.e-swt", 873, 17, 26, "g.setText"),
             change("src/esrc/scripts/eBrowser.e-swt", 874, 17, 23, "g.open"),
             change("src/esrc/scripts/eBrowser.e-swt", 875, 33, 46, "g.getFileName"),
             change("src/esrc/scripts/eBrowser.e-swt", 877, 29, 44, "g.getFilterPath"),
             change("src/esrc/scripts/eBrowser.e-swt", 879, 39, 45, "e.size"),
             change("src/esrc/scripts/eBrowser.e-swt", 886, 17, 20, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 886, 27, 33, "r.save"),
             change("src/esrc/scripts/eBrowser.e-swt", 887, 19, 22, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 888, 59, 65, "T.SAVE"),
             change("src/esrc/scripts/eBrowser.e-swt", 889, 17, 26, "g.setText"),
             change("src/esrc/scripts/eBrowser.e-swt", 890, 17, 23, "g.open"),
             change("src/esrc/scripts/eBrowser.e-swt", 891, 33, 46, "g.getFileName"),
             change("src/esrc/scripts/eBrowser.e-swt", 892, 39, 45, "e.size"),
             change("src/esrc/scripts/eBrowser.e-swt", 893, 44, 59, "g.getFilterPath"),
             change("src/esrc/scripts/eBrowser.e-swt", 895, 31, 49, "e.getCanonicalPath"),
             change("src/esrc/scripts/eBrowser.e-swt", 897, 24, 30, "s.maps"),
             change("src/esrc/scripts/eBrowser.e-swt", 903, 24, 33, "l.setText"),
             change("src/esrc/scripts/eBrowser.e-swt", 903, 41, 50, "e.getText"),
             change("src/esrc/scripts/eBrowser.e-swt", 904, 24, 32, "l.saveAs"),
             change("src/esrc/scripts/eBrowser.e-swt", 911, 23, 26, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 912, 32, 41, "e.getFont"),
             change("src/esrc/scripts/eBrowser.e-swt", 912, 42, 55, ").getFontData"),
             change("src/esrc/scripts/eBrowser.e-swt", 913, 15, 26, "a.setHeight"),
             change("src/esrc/scripts/eBrowser.e-swt", 913, 34, 45, "a.getHeight"),
             change("src/esrc/scripts/eBrowser.e-swt", 915, 15, 26, "r.resetFont"),
             change("src/esrc/scripts/eBrowser.e-swt", 918, 24, 27, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 919, 32, 41, "e.getFont"),
             change("src/esrc/scripts/eBrowser.e-swt", 919, 42, 55, ").getFontData"),
             change("src/esrc/scripts/eBrowser.e-swt", 920, 15, 26, "a.setHeight"),
             change("src/esrc/scripts/eBrowser.e-swt", 920, 34, 45, "a.getHeight"),
             change("src/esrc/scripts/eBrowser.e-swt", 922, 15, 26, "r.resetFont"),
             change("src/esrc/scripts/eBrowser.e-swt", 948, 23, 26, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 949, 23, 34, "r.setStatus"),
             change("src/esrc/scripts/eBrowser.e-swt", 951, 53, 62, "].getText"),
             change("src/esrc/scripts/eBrowser.e-swt", 953, 48, 65, "e.getSelectedText"),
             change("src/esrc/scripts/eBrowser.e-swt", 955, 31, 53, "t.requestsSubstitution"),
             change("src/esrc/scripts/eBrowser.e-swt", 967, 23, 34, "r.setStatus"),
             change("src/esrc/scripts/eBrowser.e-swt", 997, 18, 21, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 998, 18, 21, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 999, 20, 23, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1005, 25, 28, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1006, 24, 27, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1007, 22, 25, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1007, 32, 42, "r.reformat"),
             change("src/esrc/scripts/eBrowser.e-swt", 1008, 28, 31, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1014, 45, 54, "f.getText"),
             change("src/esrc/scripts/eBrowser.e-swt", 1014, 55, 61, ").trim"),
             change("src/esrc/scripts/eBrowser.e-swt", 1016, 51, 54, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1017, 29, 47, "g.optClickedButton"),
             change("src/esrc/scripts/eBrowser.e-swt", 1018, 44, 60, "g.optEnteredText"),
             change("src/esrc/scripts/eBrowser.e-swt", 1018, 61, 67, ").trim"),
             change("src/esrc/scripts/eBrowser.e-swt", 1019, 37, 46, "f.setText"),
             change("src/esrc/scripts/eBrowser.e-swt", 1024, 19, 22, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1024, 29, 36, "r.about"),
             change("src/esrc/scripts/eBrowser.e-swt", 1067, 11, 20, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-swt", 1067, 29, 38, "l.getText"),
             change("src/esrc/scripts/eBrowser.e-swt", 1068, 11, 27, "e.setCaretOffset"),
             change("src/esrc/scripts/eBrowser.e-swt", 1070, 12, 21, "e.setSize"),
             change("src/esrc/scripts/eBrowser.e-swt", 1071, 12, 25, "e.setLocation"),
             change("src/esrc/scripts/eBrowser.e-swt", 1071, 37, 46, "y.nextInt"),
             change("src/esrc/scripts/eBrowser.e-swt", 1072, 37, 46, "y.nextInt"),
             change("src/esrc/scripts/eBrowser.e-swt", 1077, 12, 18, "e.open"),
             change("src/esrc/scripts/eBrowser.e-swt", 1085, 27, 30, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1098, 56, 59, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1113, 12, 30, "e.addShellListener"),
             change("src/esrc/scripts/eBrowser.e-swt", 1117, 24, 37, "l.getFilePath"),
             change("src/esrc/scripts/eBrowser.e-swt", 1128, 47, 56, "e.getText"),
             change("src/esrc/scripts/eBrowser.e-swt", 1129, 13, 23, "r.getTwine"),
             change("src/esrc/scripts/eBrowser.e-swt", 1133, 21, 24, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1135, 16, 23, "l.close"),
             change("src/esrc/scripts/eBrowser.e-swt", 1138, 20, 29, "e.dispose"),
             change("src/esrc/scripts/eBrowser.e-swt", 1145, 16, 19, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1146, 20, 29, "l.setText"),
             change("src/esrc/scripts/eBrowser.e-swt", 1146, 37, 46, "e.getText"),
             change("src/esrc/scripts/eBrowser.e-swt", 1147, 24, 39, "l.saveFileIsSet"),
             change("src/esrc/scripts/eBrowser.e-swt", 1149, 28, 34, "l.save"),
             change("src/esrc/scripts/eBrowser.e-swt", 1159, 22, 25, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1179, 22, 25, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1183, 31, 34, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1184, 21, 30, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-swt", 1187, 16, 19, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1188, 19, 30, "r.setStatus"),
             change("src/esrc/scripts/eBrowser.e-swt", 1189, 35, 44, "e.getText"),
             change("src/esrc/scripts/eBrowser.e-swt", 1189, 45, 51, ").size"),
             change("src/esrc/scripts/eBrowser.e-swt", 1190, 43, 59, "e.getCaretOffset"),
             change("src/esrc/scripts/eBrowser.e-swt", 1191, 37, 46, "e.getText"),
             change("src/esrc/scripts/eBrowser.e-swt", 1193, 51, 60, "d.getText"),
             change("src/esrc/scripts/eBrowser.e-swt", 1194, 43, 49, "t.size"),
             change("src/esrc/scripts/eBrowser.e-swt", 1195, 23, 42, "e.setSelectionRange"),
             change("src/esrc/scripts/eBrowser.e-swt", 1196, 53, 62, "d.getText"),
             change("src/esrc/scripts/eBrowser.e-swt", 1196, 63, 69, ").size"),
             change("src/esrc/scripts/eBrowser.e-swt", 1197, 23, 39, "e.setCaretOffset"),
             change("src/esrc/scripts/eBrowser.e-swt", 1198, 52, 61, "d.getText"),
             change("src/esrc/scripts/eBrowser.e-swt", 1198, 62, 68, ").size"),
             change("src/esrc/scripts/eBrowser.e-swt", 1199, 23, 34, "r.setStatus"),
             change("src/esrc/scripts/eBrowser.e-swt", 1200, 23, 38, "e.showSelection"),
             change("src/esrc/scripts/eBrowser.e-swt", 1202, 27, 38, "r.setStatus"),
             change("src/esrc/scripts/eBrowser.e-swt", 1204, 16, 19, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1207, 38, 55, "e.getOffsetAtLine"),
             change("src/esrc/scripts/eBrowser.e-swt", 1209, 19, 35, "e.setCaretOffset"),
             change("src/esrc/scripts/eBrowser.e-swt", 1211, 38, 55, "e.getOffsetAtLine"),
             change("src/esrc/scripts/eBrowser.e-swt", 1213, 23, 37, "e.setSelection"),
             change("src/esrc/scripts/eBrowser.e-swt", 1219, 17, 20, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1222, 25, 28, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1224, 47, 61, "e.getSelection"),
             change("src/esrc/scripts/eBrowser.e-swt", 1224, 62, 65, ").x"),
             change("src/esrc/scripts/eBrowser.e-swt", 1225, 47, 61, "e.getSelection"),
             change("src/esrc/scripts/eBrowser.e-swt", 1225, 62, 65, ").y"),
             change("src/esrc/scripts/eBrowser.e-swt", 1234, 26, 29, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1242, 21, 24, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1243, 42, 56, "e.getSelection"),
             change("src/esrc/scripts/eBrowser.e-swt", 1244, 39, 45, "t.size"),
             change("src/esrc/scripts/eBrowser.e-swt", 1245, 45, 51, "t.trim"),
             change("src/esrc/scripts/eBrowser.e-swt", 1251, 22, 25, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1252, 43, 57, "e.getSelection"),
             change("src/esrc/scripts/eBrowser.e-swt", 1253, 39, 45, "t.size"),
             change("src/esrc/scripts/eBrowser.e-swt", 1269, 45, 51, "n.trim"),
             change("src/esrc/scripts/eBrowser.e-swt", 1275, 21, 24, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1277, 21, 38, "e.getLineAtOffset"),
             change("src/esrc/scripts/eBrowser.e-swt", 1277, 46, 62, "e.getCaretOffset"),
             change("src/esrc/scripts/eBrowser.e-swt", 1279, 35, 54, "l.getVarLineIndices"),
             change("src/esrc/scripts/eBrowser.e-swt", 1280, 41, 47, "s.size"),
             change("src/esrc/scripts/eBrowser.e-swt", 1281, 33, 39, "s.size"),
             change("src/esrc/scripts/eBrowser.e-swt", 1285, 26, 40, "e.setSelection"),
             change("src/esrc/scripts/eBrowser.e-swt", 1286, 26, 41, "e.showSelection"),
             change("src/esrc/scripts/eBrowser.e-swt", 1290, 22, 25, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1292, 21, 38, "e.getLineAtOffset"),
             change("src/esrc/scripts/eBrowser.e-swt", 1292, 46, 62, "e.getCaretOffset"),
             change("src/esrc/scripts/eBrowser.e-swt", 1294, 35, 54, "l.getOutlineIndices"),
             change("src/esrc/scripts/eBrowser.e-swt", 1295, 41, 47, "s.size"),
             change("src/esrc/scripts/eBrowser.e-swt", 1296, 33, 39, "s.size"),
             change("src/esrc/scripts/eBrowser.e-swt", 1300, 27, 41, "e.setSelection"),
             change("src/esrc/scripts/eBrowser.e-swt", 1301, 27, 42, "e.showSelection"),
             change("src/esrc/scripts/eBrowser.e-swt", 1305, 20, 23, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1306, 19, 32, "e.setEditable"),
             change("src/esrc/scripts/eBrowser.e-swt", 1307, 19, 30, "r.setStatus"),
             change("src/esrc/scripts/eBrowser.e-swt", 1309, 22, 25, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1311, 27, 36, "e.setText"),
             change("src/esrc/scripts/eBrowser.e-swt", 1311, 48, 56, "r.pretty"),
             change("src/esrc/scripts/eBrowser.e-swt", 1312, 27, 38, "r.setStatus"),
             change("src/esrc/scripts/eBrowser.e-swt", 1316, 34, 47, "e.setEditable"),
             change("src/esrc/scripts/eBrowser.e-swt", 1320, 24, 27, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1321, 59, 75, "l.getOutlineList"),
             change("src/esrc/scripts/eBrowser.e-swt", 1322, 58, 74, "l.getVarLineList"),
             change("src/esrc/scripts/eBrowser.e-swt", 1324, 25, 28, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1325, 19, 28, "e.setFont"),
             change("src/esrc/scripts/eBrowser.e-swt", 1326, 23, 32, "e.setFont"),
             change("src/esrc/scripts/eBrowser.e-swt", 1328, 22, 31, "e.setFont"),
             change("src/esrc/scripts/eBrowser.e-swt", 1330, 22, 25, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1337, 44, 57, "p.getContents"),
             change("src/esrc/scripts/eBrowser.e-swt", 1344, 35, 52, "t.getTransferData"),
             change("src/esrc/scripts/eBrowser.e-swt", 1350, 30, 37, "e.split"),
             change("src/esrc/scripts/eBrowser.e-swt", 1359, 25, 28, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1363, 27, 36, "e.getText"),
             change("src/esrc/scripts/eBrowser.e-swt", 1363, 50, 59, "l.getText"),
             change("src/esrc/scripts/eBrowser.e-swt", 1367, 51, 64, "l.getFileName"),
             change("src/esrc/scripts/eBrowser.e-swt", 1371, 76, 79, ") :void {"),
             change("src/esrc/scripts/eBrowser.e-swt", 1378, 35, 41, "r.save"),
             change("src/esrc/scripts/eBrowser.e-swt", 1392, 24, 33, "p.getArgs"),
             change("src/esrc/scripts/eBrowser.e-swt", 1393, 14, 20, "s.size"),
             change("src/esrc/scripts/eBrowser.e-swt", 1399, 26, 44, "e.getCanonicalPath"),
             change("src/esrc/scripts/eBrowser.e-swt", 1402, 5, 17, "p.blockAtTop"),
             change("src/esrc/scripts/eChat.e-swt", 7, 18, 21, ") :void {"),
             change("src/esrc/scripts/eChat.e-swt", 65, 28, 31, ") :void {"),
             change("src/esrc/scripts/eChat.e-swt", 72, 44, 50, "T.PUSH"),
             change("src/esrc/scripts/eChat.e-swt", 73, 9, 18, "n.setText"),
             change("src/esrc/scripts/eChat.e-swt", 134, 10, 19, "n.setText"),
             change("src/esrc/scripts/eChat.e-swt", 135, 10, 21, "n.setBounds"),
             change("src/esrc/scripts/eChat.e-swt", 138, 31, 34, ") :void {"),
             change("src/esrc/scripts/eChat.e-swt", 139, 25, 32, "r.leave"),
             change("src/esrc/scripts/eChat.e-swt", 140, 17, 32, "p.continueAtTop"),
             change("src/esrc/scripts/eChat.e-swt", 143, 10, 30, "n.addDisposeListener"),
             change("src/esrc/scripts/eChat.e-swt", 146, 33, 36, ") :void {"),
             change("src/esrc/scripts/eChat.e-swt", 148, 35, 38, ") :void {"),
             change("src/esrc/scripts/eChat.e-swt", 148, 38, 44, "E.call"),
             change("src/esrc/scripts/eChat.e-swt", 150, 13, 35, "n.addSelectionListener"),
             change("src/esrc/scripts/eChat.e-swt", 154, 49, 57, "T.SINGLE"),
             change("src/esrc/scripts/eChat.e-swt", 154, 64, 72, "T.BORDER"),
             change("src/esrc/scripts/eChat.e-swt", 173, 20, 27, "T.MULTI"),
             change("src/esrc/scripts/eChat.e-swt", 173, 34, 40, "T.WRAP"),
             change("src/esrc/scripts/eChat.e-swt", 173, 49, 57, "T.BORDER"),
             change("src/esrc/scripts/eChat.e-swt", 173, 64, 74, "T.V_SCROLL"),
             change("src/esrc/scripts/eChat.e-swt", 175, 15, 24, "a.setText"),
             change("src/esrc/scripts/eChat.e-swt", 178, 51, 59, "T.SINGLE"),
             change("src/esrc/scripts/eChat.e-swt", 178, 66, 74, "T.BORDER"),
             change("src/esrc/scripts/eChat.e-swt", 179, 17, 26, "x.setText"),
             change("src/esrc/scripts/eChat.e-swt", 193, 10, 16, "n.open"),
             change("src/esrc/scripts/eChat.e-swt", 205, 46, 49, ") :void {"),
             change("src/esrc/scripts/eChat.e-swt", 268, 39, 42, ") :void {"),
             change("src/esrc/scripts/eChat.e-swt", 273, 16, 19, ") :void {"),
             change("src/esrc/scripts/eChat.e-swt", 280, 21, 24, ") :void {"),
             change("src/esrc/scripts/eChat.e-swt", 287, 21, 24, ") :void {"),
             change("src/esrc/scripts/eChat.e-swt", 294, 17, 20, ") :void {"),
             change("src/esrc/scripts/eChat.e-swt", 299, 26, 29, ") :void {"),
             change("src/esrc/scripts/eChat.e-swt", 308, 54, 57, ") :void {"),
             change("src/esrc/scripts/eChat.e-swt", 314, 22, 25, ") :void {"),
             change("src/esrc/scripts/eChat.e-swt", 321, 43, 46, ") :void {"),
             change("src/esrc/scripts/eChat.e-swt", 326, 33, 45, "r.disconnect"),
             change("src/esrc/scripts/eChat.e-swt", 330, 26, 29, ") :void {"),
             change("src/esrc/scripts/eChat.e-swt", 342, 5, 17, "p.blockAtTop"),
             change("src/esrc/scripts/eConfig.e-awt", 47, 17, 20, ") :void {"),
             change("src/esrc/scripts/eConfig.e-awt", 47, 26, 35, "r.println"),
             change("src/esrc/scripts/eConfig.e-awt", 51, 21, 36, "m.getProperties"),
             change("src/esrc/scripts/eConfig.e-awt", 61, 9, 15, "m.exit"),
             change("src/esrc/scripts/eConfig.e-awt", 66, 11, 24, "s.getProperty"),
             change("src/esrc/scripts/eConfig.e-awt", 69, 9, 15, "m.exit"),
             change("src/esrc/scripts/eConfig.e-awt", 73, 3, 22, "t.addWindowListener"),
             change("src/esrc/scripts/eConfig.e-awt", 74, 22, 25, ") :void {"),
             change("src/esrc/scripts/eConfig.e-awt", 75, 13, 28, "p.continueAtTop"),
             change("src/esrc/scripts/eConfig.e-awt", 81, 7, 22, "n.setBackground"),
             change("src/esrc/scripts/eConfig.e-awt", 81, 33, 40, ">.white"),
             change("src/esrc/scripts/eConfig.e-awt", 83, 7, 26, "n.addActionListener"),
             change("src/esrc/scripts/eConfig.e-awt", 84, 24, 27, ") :void {"),
             change("src/esrc/scripts/eConfig.e-awt", 85, 13, 28, "p.continueAtTop"),
             change("src/esrc/scripts/eConfig.e-awt", 90, 49, 57, ">.CENTER"),
             change("src/esrc/scripts/eConfig.e-awt", 92, 3, 19, "t.getContentPane"),
             change("src/esrc/scripts/eConfig.e-awt", 92, 20, 25, ").add"),
             change("src/esrc/scripts/eConfig.e-awt", 97, 42, 52, ").getImage"),
             change("src/esrc/scripts/eConfig.e-awt", 98, 3, 17, "t.setIconImage"),
             change("src/esrc/scripts/eConfig.e-awt", 101, 3, 9, "t.pack"),
             change("src/esrc/scripts/eConfig.e-awt", 102, 3, 14, "t.setBounds"),
             change("src/esrc/scripts/eConfig.e-awt", 103, 3, 9, "t.show"),
             change("src/esrc/scripts/eConfig.e-awt", 104, 14, 28, "r.requestFocus"),
             change("src/esrc/scripts/eConfig.e-awt", 105, 5, 17, "p.blockAtTop"),
             change("src/esrc/scripts/echat.e-awt", 9, 17, 20, ") :void {"),
             change("src/esrc/scripts/echat.e-awt", 10, 9, 18, "r.println"),
             change("src/esrc/scripts/echat.e-awt", 14, 19, 31, "r.negotiable"),
             change("src/esrc/scripts/echat.e-awt", 36, 9, 18, "p.getArgs"),
             change("src/esrc/scripts/echat.e-awt", 77, 9, 15, "g.show"),
             change("src/esrc/scripts/echat.e-awt", 78, 21, 30, "g.getFile"),
             change("src/esrc/scripts/echat.e-awt", 80, 21, 35, "g.getDirectory"),
             change("src/esrc/scripts/echat.e-awt", 91, 50, 56, ">.SAVE"),
             change("src/esrc/scripts/echat.e-awt", 92, 9, 15, "g.show"),
             change("src/esrc/scripts/echat.e-awt", 93, 28, 37, "g.getFile"),
             change("src/esrc/scripts/echat.e-awt", 95, 28, 42, "g.getDirectory"),
             change("src/esrc/scripts/echat.e-awt", 104, 28, 31, ") :void {"),
             change("src/esrc/scripts/echat.e-awt", 106, 7, 16, "e.setText"),
             change("src/esrc/scripts/echat.e-awt", 109, 41, 44, ") :void {"),
             change("src/esrc/scripts/echat.e-awt", 110, 12, 30, "t.setPreferredSize"),
             change("src/esrc/scripts/echat.e-awt", 111, 12, 28, "t.setMaximumSize"),
             change("src/esrc/scripts/echat.e-awt", 112, 12, 27, "t.setAlignmentX"),
             change("src/esrc/scripts/echat.e-awt", 118, 26, 42, "n.getContentPane"),
             change("src/esrc/scripts/echat.e-awt", 120, 11, 22, "e.setLayout"),
             change("src/esrc/scripts/echat.e-awt", 123, 30, 33, ") :void {"),
             change("src/esrc/scripts/echat.e-awt", 124, 25, 32, "r.leave"),
             change("src/esrc/scripts/echat.e-awt", 126, 17, 32, "p.continueAtTop"),
             change("src/esrc/scripts/echat.e-awt", 130, 10, 29, "n.addWindowListener"),
             change("src/esrc/scripts/echat.e-awt", 142, 36, 39, ") :void {"),
             change("src/esrc/scripts/echat.e-awt", 143, 16, 22, "E.call"),
             change("src/esrc/scripts/echat.e-awt", 146, 13, 32, "n.addActionListener"),
             change("src/esrc/scripts/echat.e-awt", 156, 18, 30, "n.setEnabled"),
             change("src/esrc/scripts/echat.e-awt", 160, 19, 31, "n.setEnabled"),
             change("src/esrc/scripts/echat.e-awt", 164, 15, 31, "r.setMaximumSize"),
             change("src/esrc/scripts/echat.e-awt", 165, 15, 33, "r.setPreferredSize"),
             change("src/esrc/scripts/echat.e-awt", 169, 15, 28, "a.setLineWrap"),
             change("src/esrc/scripts/echat.e-awt", 170, 15, 28, "r.getViewport"),
             change("src/esrc/scripts/echat.e-awt", 170, 29, 34, ").add"),
             change("src/esrc/scripts/echat.e-awt", 175, 11, 16, "e.add"),
             change("src/esrc/scripts/echat.e-awt", 180, 20, 32, "n.setEnabled"),
             change("src/esrc/scripts/echat.e-awt", 182, 11, 16, "e.add"),
             change("src/esrc/scripts/echat.e-awt", 188, 10, 16, "n.pack"),
             change("src/esrc/scripts/echat.e-awt", 189, 10, 16, "n.show"),
             change("src/esrc/scripts/echat.e-awt", 208, 26, 29, ") :void {"),
             change("src/esrc/scripts/echat.e-awt", 208, 43, 52, "r.receive"),
             change("src/esrc/scripts/echat.e-awt", 210, 25, 40, "r.receiveFriend"),
             change("src/esrc/scripts/echat.e-awt", 212, 27, 30, ") :void {"),
             change("src/esrc/scripts/echat.e-awt", 212, 44, 61, "r.friendIsLeaving"),
             change("src/esrc/scripts/echat.e-awt", 213, 18, 21, ") :void {"),
             change("src/esrc/scripts/echat.e-awt", 229, 43, 46, ") :void {"),
             change("src/esrc/scripts/echat.e-awt", 230, 17, 34, "I.getChatTextArea"),
             change("src/esrc/scripts/echat.e-awt", 230, 35, 43, ").append"),
             change("src/esrc/scripts/echat.e-awt", 232, 29, 32, ") :void {"),
             change("src/esrc/scripts/echat.e-awt", 240, 20, 23, ") :void {"),
             change("src/esrc/scripts/echat.e-awt", 241, 39, 58, "I.getNextMessageBox"),
             change("src/esrc/scripts/echat.e-awt", 242, 44, 53, "x.getText"),
             change("src/esrc/scripts/echat.e-awt", 243, 25, 34, "x.setText"),
             change("src/esrc/scripts/echat.e-awt", 248, 25, 28, ") :void {"),
             change("src/esrc/scripts/echat.e-awt", 249, 44, 61, ">.showInputDialog"),
             change("src/esrc/scripts/echat.e-awt", 253, 25, 40, "I.getNameButton"),
             change("src/esrc/scripts/echat.e-awt", 253, 41, 51, ").setLabel"),
             change("src/esrc/scripts/echat.e-awt", 254, 25, 40, "I.getNameButton"),
             change("src/esrc/scripts/echat.e-awt", 254, 41, 53, ").setEnabled"),
             change("src/esrc/scripts/echat.e-awt", 255, 25, 45, "I.getOfferChatButton"),
             change("src/esrc/scripts/echat.e-awt", 255, 46, 58, ").setEnabled"),
             change("src/esrc/scripts/echat.e-awt", 256, 25, 46, "I.getFindFriendButton"),
             change("src/esrc/scripts/echat.e-awt", 256, 47, 59, ").setEnabled"),
             change("src/esrc/scripts/echat.e-awt", 259, 25, 28, ") :void {"),
             change("src/esrc/scripts/echat.e-awt", 260, 54, 66, "I.getChatWin"),
             change("src/esrc/scripts/echat.e-awt", 262, 40, 53, "r.sturdyToURI"),
             change("src/esrc/scripts/echat.e-awt", 266, 21, 24, ") :void {"),
             change("src/esrc/scripts/echat.e-awt", 271, 29, 41, "r.disconnect"),
             change("src/esrc/scripts/echat.e-awt", 273, 30, 33, ") :void {"),
             change("src/esrc/scripts/echat.e-awt", 280, 21, 43, "I.getSendMessageButton"),
             change("src/esrc/scripts/echat.e-awt", 280, 44, 56, ").setEnabled"),
             change("src/esrc/scripts/echat.e-awt", 281, 21, 41, "I.getOfferChatButton"),
             change("src/esrc/scripts/echat.e-awt", 281, 42, 54, ").setEnabled"),
             change("src/esrc/scripts/echat.e-awt", 282, 21, 42, "I.getFindFriendButton"),
             change("src/esrc/scripts/echat.e-awt", 282, 43, 55, ").setEnabled"),
             change("src/esrc/scripts/echat.e-awt", 283, 21, 38, "I.getChatTextArea"),
             change("src/esrc/scripts/echat.e-awt", 283, 39, 47, ").append"),
             change("src/esrc/scripts/echat.e-awt", 284, 18, 30, "f.whenBroken"),
             change("src/esrc/scripts/echat.e-awt", 284, 56, 59, ") :void {"),
             change("src/esrc/scripts/echat.e-awt", 285, 33, 45, "r.disconnect"),
             change("src/esrc/scripts/echat.e-awt", 290, 26, 29, ") :void {"),
             change("src/esrc/scripts/echat.e-awt", 291, 48, 60, "I.getChatWin"),
             change("src/esrc/scripts/echat.e-awt", 293, 40, 49, "e.getText"),
             change("src/esrc/scripts/echat.e-awt", 299, 37, 40, ") :void {"),
             change("src/esrc/scripts/echat.e-awt", 302, 37, 52, "r.receiveFriend"),
             change("src/esrc/scripts/echat.e-awt", 305, 37, 49, "r.disconnect"),
             change("src/esrc/scripts/echat.e-awt", 311, 31, 34, ") :void {"),
             change("src/esrc/scripts/echat.e-awt", 312, 29, 41, "r.disconnect"),
             change("src/esrc/scripts/echat.e-awt", 314, 30, 33, ") :void {"),
             change("src/esrc/scripts/echat.e-awt", 315, 21, 43, "I.getSendMessageButton"),
             change("src/esrc/scripts/echat.e-awt", 315, 44, 56, ").setEnabled"),
             change("src/esrc/scripts/echat.e-awt", 319, 21, 38, "I.getChatTextArea"),
             change("src/esrc/scripts/echat.e-awt", 319, 39, 47, ").append"),
             change("src/esrc/scripts/echat.e-awt", 322, 29, 37, "r.revoke"),
             change("src/esrc/scripts/echat.e-awt", 329, 15, 24, "p.getArgs"),
             change("src/esrc/scripts/echat.e-awt", 330, 5, 17, "p.blockAtTop"),
             change("src/esrc/scripts/evalServer.e", 6, 17, 20, ") :void {"),
             change("src/esrc/scripts/evalServer.e", 6, 26, 35, "r.println"),
             change("src/esrc/scripts/evalServer.e", 58, 22, 25, ") :void {"),
             change("src/esrc/scripts/evalServer.e", 82, 53, 56, ") :void {"),
             change("src/esrc/scripts/evalServer.e", 96, 19, 22, ") :void {"),
             change("src/esrc/scripts/evalServer.e", 97, 13, 28, "p.continueAtTop"),
             change("src/esrc/scripts/evalServer.e", 101, 9, 19, "r.onTheAir"),
             change("src/esrc/scripts/evalServer.e", 122, 61, 70, "p.getArgs"),
             change("src/esrc/scripts/evalServer.e", 130, 20, 23, ") :void {"),
             change("src/esrc/scripts/evalServer.e", 137, 5, 17, "p.blockAtTop"),
             change("src/esrc/scripts/evalServer.updoc", 4, 11, 21, "r.onTheAir"),
             change("src/esrc/scripts/evalServer.updoc", 10, 25, 34, "r.getRcvr"),
             change("src/esrc/scripts/evalServer.updoc", 119, 4, 16, "f.isResolved"),
             change("src/esrc/scripts/evalServer.updoc", 122, 4, 16, "f.isResolved"),
             change("src/esrc/scripts/evalServerPool.e", 6, 17, 20, ") :void {"),
             change("src/esrc/scripts/evalServerPool.e", 6, 26, 35, "r.println"),
             change("src/esrc/scripts/evalServerPool.e", 12, 16, 25, "].diverge"),
             change("src/esrc/scripts/evalServerPool.e", 15, 16, 25, "].diverge"),
             change("src/esrc/scripts/evalServerPool.e", 18, 15, 24, "].diverge"),
             change("src/esrc/scripts/evalServerPool.e", 21, 18, 27, "].diverge"),
             change("src/esrc/scripts/evalServerPool.e", 25, 13, 20, "].asMap"),
             change("src/esrc/scripts/evalServerPool.e", 25, 21, 30, ").diverge"),
             change("src/esrc/scripts/evalServerPool.e", 28, 16, 25, "].diverge"),
             change("src/esrc/scripts/evalServerPool.e", 31, 13, 26, "r.sturdyToURI"),
             change("src/esrc/scripts/evalServerPool.e", 34, 17, 20, ") :void {"),
             change("src/esrc/scripts/evalServerPool.e", 35, 14, 20, "g.size"),
             change("src/esrc/scripts/evalServerPool.e", 38, 18, 29, "g.removeRun"),
             change("src/esrc/scripts/evalServerPool.e", 61, 36, 39, ") :void {"),
             change("src/esrc/scripts/evalServerPool.e", 63, 14, 20, "s.push"),
             change("src/esrc/scripts/evalServerPool.e", 64, 27, 36, "r.getRcvr"),
             change("src/esrc/scripts/evalServerPool.e", 65, 13, 19, "e.push"),
             change("src/esrc/scripts/evalServerPool.e", 66, 16, 22, "e.push"),
             change("src/esrc/scripts/evalServerPool.e", 69, 10, 22, "f.whenBroken"),
             change("src/esrc/scripts/evalServerPool.e", 69, 40, 43, ") :void {"),
             change("src/esrc/scripts/evalServerPool.e", 71, 26, 36, "e.indexOf1"),
             change("src/esrc/scripts/evalServerPool.e", 73, 21, 32, "e.removeRun"),
             change("src/esrc/scripts/evalServerPool.e", 76, 25, 35, "e.indexOf1"),
             change("src/esrc/scripts/evalServerPool.e", 78, 24, 35, "e.removeRun"),
             change("src/esrc/scripts/evalServerPool.e", 83, 23, 34, "y.removeKey"),
             change("src/esrc/scripts/evalServerPool.e", 87, 18, 24, "e.push"),
             change("src/esrc/scripts/evalServerPool.e", 116, 41, 47, "s.size"),
             change("src/esrc/scripts/evalServerPool.e", 117, 17, 23, "e.size"),
             change("src/esrc/scripts/evalServerPool.e", 118, 15, 21, "e.size"),
             change("src/esrc/scripts/evalServerPool.e", 119, 21, 27, "e.size"),
             change("src/esrc/scripts/evalServerPool.e", 120, 17, 23, "g.size"),
             change("src/esrc/scripts/evalServerPool.e", 123, 32, 45, "r.sturdyToURI"),
             change("src/esrc/scripts/evalServerPool.e", 138, 19, 22, ") :void {"),
             change("src/esrc/scripts/evalServerPool.e", 142, 13, 28, "p.continueAtTop"),
             change("src/esrc/scripts/evalServerPool.e", 173, 17, 23, "e.size"),
             change("src/esrc/scripts/evalServerPool.e", 175, 37, 43, "e.size"),
             change("src/esrc/scripts/evalServerPool.e", 180, 48, 55, "].asMap"),
             change("src/esrc/scripts/evalServerPool.e", 186, 24, 30, "e.size"),
             change("src/esrc/scripts/evalServerPool.e", 191, 34, 43, "].diverge"),
             change("src/esrc/scripts/evalServerPool.e", 198, 28, 39, "e.removeRun"),
             change("src/esrc/scripts/evalServerPool.e", 202, 78, 81, ") :void {"),
             change("src/esrc/scripts/evalServerPool.e", 206, 38, 57, "t.releaseEvalServer"),
             change("src/esrc/scripts/evalServerPool.e", 208, 36, 42, "s.push"),
             change("src/esrc/scripts/evalServerPool.e", 209, 40, 46, "s.size"),
             change("src/esrc/scripts/evalServerPool.e", 211, 57, 67, "s.snapshot"),
             change("src/esrc/scripts/evalServerPool.e", 222, 42, 61, "t.releaseEvalServer"),
             change("src/esrc/scripts/evalServerPool.e", 224, 35, 42, "r.smash"),
             change("src/esrc/scripts/evalServerPool.e", 234, 18, 24, "g.size"),
             change("src/esrc/scripts/evalServerPool.e", 237, 18, 24, "g.push"),
             change("src/esrc/scripts/evalServerPool.e", 256, 18, 40, "t.requestEvalServerSet"),
             change("src/esrc/scripts/evalServerPool.e", 269, 41, 44, ") :void {"),
             change("src/esrc/scripts/evalServerPool.e", 271, 11, 22, "y.removeKey"),
             change("src/esrc/scripts/evalServerPool.e", 273, 16, 22, "e.push"),
             change("src/esrc/scripts/evalServerPool.e", 278, 9, 19, "r.onTheAir"),
             change("src/esrc/scripts/evalServerPool.e", 305, 61, 70, "p.getArgs"),
             change("src/esrc/scripts/evalServerPool.e", 309, 32, 35, ") :void {"),
             change("src/esrc/scripts/evalServerPool.e", 310, 24, 29, "p.get"),
             change("src/esrc/scripts/evalServerPool.e", 311, 60, 63, ") :void {"),
             change("src/esrc/scripts/evalServerPool.e", 325, 5, 17, "p.blockAtTop"),
             change("src/esrc/scripts/findall.e", 12, 24, 27, ") :void {"),
             change("src/esrc/scripts/findall.e", 14, 15, 24, "e.indexOf"),
             change("src/esrc/scripts/findall.e", 15, 21, 30, "e.getPath"),
             change("src/esrc/scripts/findall.e", 27, 35, 38, ") :void {"),
             change("src/esrc/scripts/findall.e", 28, 14, 27, "e.isDirectory"),
             change("src/esrc/scripts/findall.e", 32, 21, 30, "e.getName"),
             change("src/esrc/scripts/findall.e", 32, 31, 41, ").endsWith"),
             change("src/esrc/scripts/findall.e", 37, 17, 26, "p.getArgs"),
             change("src/esrc/scripts/findall.e", 38, 7, 13, "s.size"),
             change("src/esrc/scripts/fixImports.e", 8, 9, 18, "p.getArgs"),
             change("src/esrc/scripts/fixImports.e", 8, 19, 25, ").size"),
             change("src/esrc/scripts/fixImports.e", 12, 23, 32, "p.getArgs"),
             change("src/esrc/scripts/fixdoc.e", 43, 22, 25, ") :void {"),
             change("src/esrc/scripts/fixdoc.e", 52, 19, 31, "t.replaceAll"),
             change("src/esrc/scripts/fixdoc.e", 69, 19, 31, "t.replaceAll"),
             change("src/esrc/scripts/fixdoc.e", 77, 17, 26, "p.getArgs"),
             change("src/esrc/scripts/jed.e-swt", 6, 17, 20, ") :void {"),
             change("src/esrc/scripts/jed.e-swt", 27, 25, 28, ") :void {"),
             change("src/esrc/scripts/jed.e-swt", 31, 13, 16, ") :void {"),
             change("src/esrc/scripts/newlines.e", 10, 20, 23, ") :void {"),
             change("src/esrc/scripts/newlines.e", 13, 8, 14, "E.call"),
             change("src/esrc/scripts/newlines.e", 15, 9, 16, "w.close"),
             change("src/esrc/scripts/newlines.e", 87, 14, 23, "].diverge"),
             change("src/esrc/scripts/newlines.e", 89, 16, 25, "p.getArgs"),
             change("src/esrc/scripts/newlines.e", 93, 17, 23, "m.exit"),
             change("src/esrc/scripts/newlines.e", 114, 16, 22, "s.push"),
             change("src/esrc/scripts/newlines.e", 121, 9, 15, "m.exit"),
             change("src/esrc/scripts/newlines.e", 124, 8, 14, "s.size"),
             change("src/esrc/scripts/newlines.e", 127, 9, 15, "m.exit"),
             change("src/esrc/scripts/newlines.e", 134, 26, 39, "e.lastIndexOf"),
             change("src/esrc/scripts/newlines.e", 135, 38, 44, "e.size"),
             change("src/esrc/scripts/newlines.e", 136, 31, 36, "s.get"),
             change("src/esrc/scripts/newlines.e", 140, 21, 30, "r.println"),
             change("src/esrc/scripts/newlines.e", 146, 27, 36, "e.getText"),
             change("src/esrc/scripts/pasteRun.e-awt", 6, 13, 16, ") :void {"),
             change("src/esrc/scripts/pasteRun.e-awt", 9, 36, 39, ") :void {"),
             change("src/esrc/scripts/pasteRun.e-awt", 10, 4, 10, "E.call"),
             change("src/esrc/scripts/pasteRun.e-awt", 15, 31, 50, ">.getDefaultToolkit"),
             change("src/esrc/scripts/pasteRun.e-awt", 15, 51, 71, ").getSystemClipboard"),
             change("src/esrc/scripts/pasteRun.e-awt", 17, 32, 45, "p.getContents"),
             change("src/esrc/scripts/pasteRun.e-awt", 20, 56, 70, ">.stringFlavor"),
             change("src/esrc/scripts/pasteRun.e-awt", 22, 37, 54, "t.getTransferData"),
             change("src/esrc/scripts/pasteRun.e-awt", 26, 36, 39, ") :void {"),
             change("src/esrc/scripts/pasteRun.e-awt", 31, 22, 25, ") :void {"),
             change("src/esrc/scripts/pasteRun.e-awt", 34, 25, 28, ") :void {"),
             change("src/esrc/scripts/pasteRun.e-awt", 48, 25, 31, "e.eval"),
             change("src/esrc/scripts/pasteRun.e-awt", 50, 15, 23, "e.append"),
             change("src/esrc/scripts/pasteRun.e-awt", 53, 15, 23, "e.append"),
             change("src/esrc/scripts/pasteRun.e-awt", 57, 44, 47, ") :void {"),
             change("src/esrc/scripts/pasteRun.e-awt", 58, 15, 33, "t.setPreferredSize"),
             change("src/esrc/scripts/pasteRun.e-awt", 59, 15, 31, "t.setMaximumSize"),
             change("src/esrc/scripts/pasteRun.e-awt", 60, 15, 30, "t.setAlignmentX"),
             change("src/esrc/scripts/pasteRun.e-awt", 62, 21, 24, ") :void {"),
             change("src/esrc/scripts/pasteRun.e-awt", 65, 24, 40, "n.getContentPane"),
             change("src/esrc/scripts/pasteRun.e-awt", 70, 13, 26, "t.setLineWrap"),
             change("src/esrc/scripts/pasteRun.e-awt", 72, 17, 33, "r.setMaximumSize"),
             change("src/esrc/scripts/pasteRun.e-awt", 73, 17, 35, "r.setPreferredSize"),
             change("src/esrc/scripts/pasteRun.e-awt", 74, 30, 43, "r.getViewport"),
             change("src/esrc/scripts/pasteRun.e-awt", 76, 11, 17, "n.pack"),
             change("src/esrc/scripts/pasteRun.e-awt", 78, 36, 39, ") :void {"),
             change("src/esrc/scripts/pasteRun.e-awt", 80, 21, 29, "t.append"),
             change("src/esrc/scripts/pasteRun.e-awt", 84, 14, 33, "n.addActionListener"),
             change("src/esrc/scripts/pasteRun.e-awt", 85, 11, 17, "n.show"),
             change("src/esrc/scripts/pasteRun.e-awt", 87, 33, 36, ") :void {"),
             change("src/esrc/scripts/pasteRun.e-awt", 88, 17, 32, "p.continueAtTop"),
             change("src/esrc/scripts/pasteRun.e-awt", 92, 11, 30, "n.addWindowListener"),
             change("src/esrc/scripts/pasteRun.e-awt", 96, 5, 17, "p.blockAtTop"),
             change("src/esrc/scripts/persist-echat.e-awt", 9, 17, 20, ") :void {"),
             change("src/esrc/scripts/persist-echat.e-awt", 10, 9, 18, "r.println"),
             change("src/esrc/scripts/persist-echat.e-awt", 14, 19, 31, "r.negotiable"),
             change("src/esrc/scripts/persist-echat.e-awt", 34, 13, 28, "r.sturdyFromURI"),
             change("src/esrc/scripts/persist-echat.e-awt", 34, 32, 41, ").getRcvr"),
             change("src/esrc/scripts/persist-echat.e-awt", 42, 9, 15, "g.show"),
             change("src/esrc/scripts/persist-echat.e-awt", 43, 21, 30, "g.getFile"),
             change("src/esrc/scripts/persist-echat.e-awt", 45, 21, 35, "g.getDirectory"),
             change("src/esrc/scripts/persist-echat.e-awt", 56, 50, 56, ">.SAVE"),
             change("src/esrc/scripts/persist-echat.e-awt", 57, 9, 15, "g.show"),
             change("src/esrc/scripts/persist-echat.e-awt", 58, 28, 37, "g.getFile"),
             change("src/esrc/scripts/persist-echat.e-awt", 60, 28, 42, "g.getDirectory"),
             change("src/esrc/scripts/persist-echat.e-awt", 69, 28, 31, ") :void {"),
             change("src/esrc/scripts/persist-echat.e-awt", 71, 7, 16, "e.setText"),
             change("src/esrc/scripts/persist-echat.e-awt", 74, 41, 44, ") :void {"),
             change("src/esrc/scripts/persist-echat.e-awt", 75, 12, 30, "t.setPreferredSize"),
             change("src/esrc/scripts/persist-echat.e-awt", 76, 12, 28, "t.setMaximumSize"),
             change("src/esrc/scripts/persist-echat.e-awt", 77, 12, 27, "t.setAlignmentX"),
             change("src/esrc/scripts/persist-echat.e-awt", 83, 26, 42, "n.getContentPane"),
             change("src/esrc/scripts/persist-echat.e-awt", 85, 11, 22, "e.setLayout"),
             change("src/esrc/scripts/persist-echat.e-awt", 88, 30, 33, ") :void {"),
             change("src/esrc/scripts/persist-echat.e-awt", 89, 25, 32, "r.leave"),
             change("src/esrc/scripts/persist-echat.e-awt", 91, 17, 32, "p.continueAtTop"),
             change("src/esrc/scripts/persist-echat.e-awt", 95, 10, 29, "n.addWindowListener"),
             change("src/esrc/scripts/persist-echat.e-awt", 107, 36, 39, ") :void {"),
             change("src/esrc/scripts/persist-echat.e-awt", 108, 16, 22, "E.call"),
             change("src/esrc/scripts/persist-echat.e-awt", 111, 13, 32, "n.addActionListener"),
             change("src/esrc/scripts/persist-echat.e-awt", 121, 18, 30, "n.setEnabled"),
             change("src/esrc/scripts/persist-echat.e-awt", 125, 19, 31, "n.setEnabled"),
             change("src/esrc/scripts/persist-echat.e-awt", 129, 15, 31, "r.setMaximumSize"),
             change("src/esrc/scripts/persist-echat.e-awt", 130, 15, 33, "r.setPreferredSize"),
             change("src/esrc/scripts/persist-echat.e-awt", 134, 15, 28, "a.setLineWrap"),
             change("src/esrc/scripts/persist-echat.e-awt", 135, 15, 28, "r.getViewport"),
             change("src/esrc/scripts/persist-echat.e-awt", 135, 29, 34, ").add"),
             change("src/esrc/scripts/persist-echat.e-awt", 140, 11, 16, "e.add"),
             change("src/esrc/scripts/persist-echat.e-awt", 145, 20, 32, "n.setEnabled"),
             change("src/esrc/scripts/persist-echat.e-awt", 147, 11, 16, "e.add"),
             change("src/esrc/scripts/persist-echat.e-awt", 153, 10, 16, "n.pack"),
             change("src/esrc/scripts/persist-echat.e-awt", 154, 10, 16, "n.show"),
             change("src/esrc/scripts/persist-echat.e-awt", 173, 26, 29, ") :void {"),
             change("src/esrc/scripts/persist-echat.e-awt", 173, 43, 52, "r.receive"),
             change("src/esrc/scripts/persist-echat.e-awt", 175, 25, 40, "r.receiveFriend"),
             change("src/esrc/scripts/persist-echat.e-awt", 177, 27, 30, ") :void {"),
             change("src/esrc/scripts/persist-echat.e-awt", 177, 44, 61, "r.friendIsLeaving"),
             change("src/esrc/scripts/persist-echat.e-awt", 178, 18, 21, ") :void {"),
             change("src/esrc/scripts/persist-echat.e-awt", 194, 43, 46, ") :void {"),
             change("src/esrc/scripts/persist-echat.e-awt", 195, 17, 34, "I.getChatTextArea"),
             change("src/esrc/scripts/persist-echat.e-awt", 195, 35, 43, ").append"),
             change("src/esrc/scripts/persist-echat.e-awt", 197, 29, 32, ") :void {"),
             change("src/esrc/scripts/persist-echat.e-awt", 207, 20, 23, ") :void {"),
             change("src/esrc/scripts/persist-echat.e-awt", 208, 39, 58, "I.getNextMessageBox"),
             change("src/esrc/scripts/persist-echat.e-awt", 209, 44, 53, "x.getText"),
             change("src/esrc/scripts/persist-echat.e-awt", 210, 25, 34, "x.setText"),
             change("src/esrc/scripts/persist-echat.e-awt", 215, 25, 28, ") :void {"),
             change("src/esrc/scripts/persist-echat.e-awt", 216, 44, 61, ">.showInputDialog"),
             change("src/esrc/scripts/persist-echat.e-awt", 220, 25, 40, "I.getNameButton"),
             change("src/esrc/scripts/persist-echat.e-awt", 220, 41, 51, ").setLabel"),
             change("src/esrc/scripts/persist-echat.e-awt", 221, 25, 40, "I.getNameButton"),
             change("src/esrc/scripts/persist-echat.e-awt", 221, 41, 53, ").setEnabled"),
             change("src/esrc/scripts/persist-echat.e-awt", 222, 25, 45, "I.getOfferChatButton"),
             change("src/esrc/scripts/persist-echat.e-awt", 222, 46, 58, ").setEnabled"),
             change("src/esrc/scripts/persist-echat.e-awt", 223, 25, 46, "I.getFindFriendButton"),
             change("src/esrc/scripts/persist-echat.e-awt", 223, 47, 59, ").setEnabled"),
             change("src/esrc/scripts/persist-echat.e-awt", 226, 25, 28, ") :void {"),
             change("src/esrc/scripts/persist-echat.e-awt", 237, 21, 24, ") :void {"),
             change("src/esrc/scripts/persist-echat.e-awt", 242, 29, 41, "r.disconnect"),
             change("src/esrc/scripts/persist-echat.e-awt", 244, 30, 33, ") :void {"),
             change("src/esrc/scripts/persist-echat.e-awt", 251, 21, 43, "I.getSendMessageButton"),
             change("src/esrc/scripts/persist-echat.e-awt", 251, 44, 56, ").setEnabled"),
             change("src/esrc/scripts/persist-echat.e-awt", 252, 21, 41, "I.getOfferChatButton"),
             change("src/esrc/scripts/persist-echat.e-awt", 252, 42, 54, ").setEnabled"),
             change("src/esrc/scripts/persist-echat.e-awt", 253, 21, 42, "I.getFindFriendButton"),
             change("src/esrc/scripts/persist-echat.e-awt", 253, 43, 55, ").setEnabled"),
             change("src/esrc/scripts/persist-echat.e-awt", 255, 56, 59, ") :void {"),
             change("src/esrc/scripts/persist-echat.e-awt", 261, 26, 29, ") :void {"),
             change("src/esrc/scripts/persist-echat.e-awt", 262, 48, 60, "I.getChatWin"),
             change("src/esrc/scripts/persist-echat.e-awt", 264, 40, 49, "e.getText"),
             change("src/esrc/scripts/persist-echat.e-awt", 270, 37, 40, ") :void {"),
             change("src/esrc/scripts/persist-echat.e-awt", 273, 37, 52, "r.receiveFriend"),
             change("src/esrc/scripts/persist-echat.e-awt", 276, 37, 49, "r.disconnect"),
             change("src/esrc/scripts/persist-echat.e-awt", 282, 31, 34, ") :void {"),
             change("src/esrc/scripts/persist-echat.e-awt", 283, 29, 41, "r.disconnect"),
             change("src/esrc/scripts/persist-echat.e-awt", 285, 30, 33, ") :void {"),
             change("src/esrc/scripts/persist-echat.e-awt", 286, 21, 43, "I.getSendMessageButton"),
             change("src/esrc/scripts/persist-echat.e-awt", 286, 44, 56, ").setEnabled"),
             change("src/esrc/scripts/persist-echat.e-awt", 290, 21, 38, "I.getChatTextArea"),
             change("src/esrc/scripts/persist-echat.e-awt", 290, 39, 47, ").append"),
             change("src/esrc/scripts/persist-echat.e-awt", 293, 29, 37, "r.revoke"),
             change("src/esrc/scripts/persist-echat.e-awt", 311, 9, 18, "p.getArgs"),
             change("src/esrc/scripts/persist-echat.e-awt", 335, 15, 24, "p.getArgs"),
             change("src/esrc/scripts/persist-echat.e-awt", 336, 5, 17, "p.blockAtTop"),
             change("src/esrc/scripts/racetrack.e-awt", 6, 18, 21, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 6, 27, 36, "r.println"),
             change("src/esrc/scripts/racetrack.e-awt", 8, 38, 41, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 10, 32, 35, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 11, 12, 18, "E.call"),
             change("src/esrc/scripts/racetrack.e-awt", 14, 12, 31, "t.addActionListener"),
             change("src/esrc/scripts/racetrack.e-awt", 19, 9, 24, "n.setBackground"),
             change("src/esrc/scripts/racetrack.e-awt", 19, 41, 50, ">.control"),
             change("src/esrc/scripts/racetrack.e-awt", 30, 27, 30, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 30, 35, 42, "r.print"),
             change("src/esrc/scripts/racetrack.e-awt", 31, 49, 55, "2.getX"),
             change("src/esrc/scripts/racetrack.e-awt", 31, 71, 77, "2.getY"),
             change("src/esrc/scripts/racetrack.e-awt", 38, 49, 55, "2.getX"),
             change("src/esrc/scripts/racetrack.e-awt", 38, 67, 73, "2.getY"),
             change("src/esrc/scripts/racetrack.e-awt", 44, 54, 60, "2.getX"),
             change("src/esrc/scripts/racetrack.e-awt", 44, 72, 78, "2.getY"),
             change("src/esrc/scripts/racetrack.e-awt", 59, 43, 52, "r.getName"),
             change("src/esrc/scripts/racetrack.e-awt", 63, 13, 22, "r.setText"),
             change("src/esrc/scripts/racetrack.e-awt", 65, 9, 24, "l.setBackground"),
             change("src/esrc/scripts/racetrack.e-awt", 65, 41, 50, ">.control"),
             change("src/esrc/scripts/racetrack.e-awt", 67, 13, 22, "r.setText"),
             change("src/esrc/scripts/racetrack.e-awt", 81, 8, 34, "e.setDefaultCloseOperation"),
             change("src/esrc/scripts/racetrack.e-awt", 81, 57, 78, ">.DO_NOTHING_ON_CLOSE"),
             change("src/esrc/scripts/racetrack.e-awt", 82, 8, 24, "e.getContentPane"),
             change("src/esrc/scripts/racetrack.e-awt", 82, 25, 30, ").add"),
             change("src/esrc/scripts/racetrack.e-awt", 83, 8, 14, "e.pack"),
             change("src/esrc/scripts/racetrack.e-awt", 84, 8, 14, "e.show"),
             change("src/esrc/scripts/racetrack.e-awt", 86, 18, 21, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 87, 23, 35, "n.setEnabled"),
             change("src/esrc/scripts/racetrack.e-awt", 88, 14, 26, "r.accelerate"),
             change("src/esrc/scripts/racetrack.e-awt", 90, 30, 33, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 91, 21, 30, "r.setText"),
             change("src/esrc/scripts/racetrack.e-awt", 91, 48, 61, "r.getVelocity"),
             change("src/esrc/scripts/racetrack.e-awt", 91, 62, 68, ").getX"),
             change("src/esrc/scripts/racetrack.e-awt", 92, 21, 30, "r.setText"),
             change("src/esrc/scripts/racetrack.e-awt", 92, 50, 63, "r.getVelocity"),
             change("src/esrc/scripts/racetrack.e-awt", 92, 64, 70, ").getY"),
             change("src/esrc/scripts/racetrack.e-awt", 94, 23, 35, "n.setEnabled"),
             change("src/esrc/scripts/racetrack.e-awt", 96, 26, 41, ">.transferFocus"),
             change("src/esrc/scripts/racetrack.e-awt", 96, 47, 63, "e.getContentPane"),
             change("src/esrc/scripts/racetrack.e-awt", 99, 27, 30, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 99, 39, 48, "e.setText"),
             change("src/esrc/scripts/racetrack.e-awt", 100, 18, 21, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 101, 14, 17, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 102, 19, 22, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 103, 16, 19, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 104, 16, 19, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 105, 17, 20, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 106, 20, 23, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 107, 16, 19, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 108, 21, 24, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 127, 26, 33, "].asMap"),
             change("src/esrc/scripts/racetrack.e-awt", 127, 34, 43, ").diverge"),
             change("src/esrc/scripts/racetrack.e-awt", 135, 26, 35, "].diverge"),
             change("src/esrc/scripts/racetrack.e-awt", 136, 27, 33, "h.getY"),
             change("src/esrc/scripts/racetrack.e-awt", 136, 42, 48, "t.getY"),
             change("src/esrc/scripts/racetrack.e-awt", 136, 60, 66, "h.getX"),
             change("src/esrc/scripts/racetrack.e-awt", 136, 75, 81, "t.getX"),
             change("src/esrc/scripts/racetrack.e-awt", 137, 45, 48, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 138, 31, 37, "t.getX"),
             change("src/esrc/scripts/racetrack.e-awt", 139, 31, 37, "t.getY"),
             change("src/esrc/scripts/racetrack.e-awt", 145, 33, 39, "h.getX"),
             change("src/esrc/scripts/racetrack.e-awt", 145, 50, 56, "t.getX"),
             change("src/esrc/scripts/racetrack.e-awt", 147, 48, 54, "t.getX"),
             change("src/esrc/scripts/racetrack.e-awt", 148, 29, 35, "t.getY"),
             change("src/esrc/scripts/racetrack.e-awt", 153, 33, 39, "h.getY"),
             change("src/esrc/scripts/racetrack.e-awt", 153, 50, 56, "t.getY"),
             change("src/esrc/scripts/racetrack.e-awt", 155, 48, 54, "t.getY"),
             change("src/esrc/scripts/racetrack.e-awt", 156, 29, 35, "t.getX"),
             change("src/esrc/scripts/racetrack.e-awt", 159, 20, 26, "s.push"),
             change("src/esrc/scripts/racetrack.e-awt", 160, 22, 33, "t.samePlace"),
             change("src/esrc/scripts/racetrack.e-awt", 168, 27, 30, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 172, 19, 33, "h.reactToAccel"),
             change("src/esrc/scripts/racetrack.e-awt", 183, 46, 59, "p.causesCrash"),
             change("src/esrc/scripts/racetrack.e-awt", 184, 48, 62, "p.causesFinish"),
             change("src/esrc/scripts/racetrack.e-awt", 187, 30, 41, "l.setStatus"),
             change("src/esrc/scripts/racetrack.e-awt", 188, 51, 62, "l.setStatus"),
             change("src/esrc/scripts/racetrack.e-awt", 196, 30, 33, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 196, 47, 67, "l.prepareForNextTurn"),
             change("src/esrc/scripts/racetrack.e-awt", 197, 34, 37, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 198, 37, 40, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 198, 52, 60, "s.remove"),
             change("src/esrc/scripts/racetrack.e-awt", 211, 8, 24, "e.getContentPane"),
             change("src/esrc/scripts/racetrack.e-awt", 211, 25, 30, ").add"),
             change("src/esrc/scripts/racetrack.e-awt", 213, 30, 33, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 214, 17, 32, "p.continueAtTop"),
             change("src/esrc/scripts/racetrack.e-awt", 218, 8, 27, "e.addWindowListener"),
             change("src/esrc/scripts/racetrack.e-awt", 219, 8, 14, "e.pack"),
             change("src/esrc/scripts/racetrack.e-awt", 220, 8, 14, "e.show"),
             change("src/esrc/scripts/racetrack.e-awt", 222, 26, 29, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 222, 35, 44, "e.setText"),
             change("src/esrc/scripts/racetrack.e-awt", 223, 28, 31, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 223, 40, 49, "e.setText"),
             change("src/esrc/scripts/racetrack.e-awt", 240, 44, 50, "d.getY"),
             change("src/esrc/scripts/racetrack.e-awt", 240, 59, 65, "d.getX"),
             change("src/esrc/scripts/racetrack.e-awt", 241, 46, 52, "d.getY"),
             change("src/esrc/scripts/racetrack.e-awt", 241, 61, 67, "d.getX"),
             change("src/esrc/scripts/racetrack.e-awt", 244, 16, 22, "d.getX"),
             change("src/esrc/scripts/racetrack.e-awt", 244, 36, 42, "d.getY"),
             change("src/esrc/scripts/racetrack.e-awt", 245, 18, 24, "d.getX"),
             change("src/esrc/scripts/racetrack.e-awt", 245, 39, 45, "].size"),
             change("src/esrc/scripts/racetrack.e-awt", 245, 55, 61, "d.getY"),
             change("src/esrc/scripts/racetrack.e-awt", 245, 73, 79, "p.size"),
             change("src/esrc/scripts/racetrack.e-awt", 255, 68, 74, "e.size"),
             change("src/esrc/scripts/racetrack.e-awt", 258, 27, 40, "h.getLocation"),
             change("src/esrc/scripts/racetrack.e-awt", 258, 41, 47, ").getY"),
             change("src/esrc/scripts/racetrack.e-awt", 259, 38, 51, "h.getLocation"),
             change("src/esrc/scripts/racetrack.e-awt", 259, 52, 58, ").getX"),
             change("src/esrc/scripts/racetrack.e-awt", 260, 45, 54, "t.diverge"),
             change("src/esrc/scripts/racetrack.e-awt", 261, 36, 49, "h.getLocation"),
             change("src/esrc/scripts/racetrack.e-awt", 261, 50, 56, ").getX"),
             change("src/esrc/scripts/racetrack.e-awt", 261, 67, 76, "h.getName"),
             change("src/esrc/scripts/racetrack.e-awt", 262, 41, 51, "e.snapshot"),
             change("src/esrc/scripts/racetrack.e-awt", 306, 19, 26, "].asMap"),
             change("src/esrc/scripts/racetrack.e-awt", 306, 27, 36, ").diverge"),
             change("src/esrc/scripts/racetrack.e-awt", 317, 29, 36, "].asMap"),
             change("src/esrc/scripts/racetrack.e-awt", 317, 37, 46, ").diverge"),
             change("src/esrc/scripts/racetrack.e-awt", 318, 43, 62, "p.getAsTextWithCars"),
             change("src/esrc/scripts/racetrack.e-awt", 320, 27, 30, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 323, 30, 36, "e.size"),
             change("src/esrc/scripts/racetrack.e-awt", 323, 45, 51, "s.size"),
             change("src/esrc/scripts/racetrack.e-awt", 324, 24, 42, "k.completeNextTurn"),
             change("src/esrc/scripts/racetrack.e-awt", 327, 28, 31, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 328, 28, 37, "].diverge"),
             change("src/esrc/scripts/racetrack.e-awt", 330, 19, 25, "h.move"),
             change("src/esrc/scripts/racetrack.e-awt", 331, 23, 35, "h.hasCrashed"),
             change("src/esrc/scripts/racetrack.e-awt", 332, 23, 34, "s.removeKey"),
             change("src/esrc/scripts/racetrack.e-awt", 333, 30, 43, "h.hasFinished"),
             change("src/esrc/scripts/racetrack.e-awt", 334, 26, 32, "s.push"),
             change("src/esrc/scripts/racetrack.e-awt", 337, 20, 29, "r.refresh"),
             change("src/esrc/scripts/racetrack.e-awt", 337, 36, 55, "p.getAsTextWithCars"),
             change("src/esrc/scripts/racetrack.e-awt", 338, 22, 28, "s.size"),
             change("src/esrc/scripts/racetrack.e-awt", 339, 56, 65, "].getName"),
             change("src/esrc/scripts/racetrack.e-awt", 340, 29, 35, "s.size"),
             change("src/esrc/scripts/racetrack.e-awt", 342, 26, 32, "s.size"),
             change("src/esrc/scripts/racetrack.e-awt", 344, 28, 48, "k.prepareForNextTurn"),
             change("src/esrc/scripts/racetrack.e-awt", 346, 30, 33, ") :void {"),
             change("src/esrc/scripts/racetrack.e-awt", 348, 32, 39, "].asMap"),
             change("src/esrc/scripts/racetrack.e-awt", 348, 40, 49, ").diverge"),
             change("src/esrc/scripts/racetrack.e-awt", 350, 19, 39, "h.prepareForNextTurn"),
             change("src/esrc/scripts/racetrack.e-awt", 354, 25, 42, "h.addAccelReactor"),
             change("src/esrc/scripts/racetrack.e-awt", 359, 5, 17, "p.blockAtTop"),
             change("src/esrc/scripts/racetrack1.e-awt", 6, 18, 21, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 6, 27, 36, "r.println"),
             change("src/esrc/scripts/racetrack1.e-awt", 8, 38, 41, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 10, 32, 35, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 11, 12, 18, "E.call"),
             change("src/esrc/scripts/racetrack1.e-awt", 14, 12, 31, "t.addActionListener"),
             change("src/esrc/scripts/racetrack1.e-awt", 19, 9, 24, "n.setBackground"),
             change("src/esrc/scripts/racetrack1.e-awt", 19, 41, 50, ">.control"),
             change("src/esrc/scripts/racetrack1.e-awt", 30, 27, 30, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 30, 35, 42, "r.print"),
             change("src/esrc/scripts/racetrack1.e-awt", 31, 46, 52, "2.getX"),
             change("src/esrc/scripts/racetrack1.e-awt", 31, 68, 74, "2.getY"),
             change("src/esrc/scripts/racetrack1.e-awt", 32, 51, 57, "2.getX"),
             change("src/esrc/scripts/racetrack1.e-awt", 32, 69, 75, "2.getY"),
             change("src/esrc/scripts/racetrack1.e-awt", 33, 52, 58, "2.getX"),
             change("src/esrc/scripts/racetrack1.e-awt", 33, 70, 76, "2.getY"),
             change("src/esrc/scripts/racetrack1.e-awt", 48, 43, 52, "r.getName"),
             change("src/esrc/scripts/racetrack1.e-awt", 52, 13, 22, "r.setText"),
             change("src/esrc/scripts/racetrack1.e-awt", 54, 9, 24, "l.setBackground"),
             change("src/esrc/scripts/racetrack1.e-awt", 54, 41, 50, ">.control"),
             change("src/esrc/scripts/racetrack1.e-awt", 56, 13, 22, "r.setText"),
             change("src/esrc/scripts/racetrack1.e-awt", 70, 8, 34, "e.setDefaultCloseOperation"),
             change("src/esrc/scripts/racetrack1.e-awt", 70, 57, 78, ">.DO_NOTHING_ON_CLOSE"),
             change("src/esrc/scripts/racetrack1.e-awt", 71, 8, 24, "e.getContentPane"),
             change("src/esrc/scripts/racetrack1.e-awt", 71, 25, 30, ").add"),
             change("src/esrc/scripts/racetrack1.e-awt", 72, 8, 14, "e.pack"),
             change("src/esrc/scripts/racetrack1.e-awt", 73, 8, 14, "e.show"),
             change("src/esrc/scripts/racetrack1.e-awt", 75, 18, 21, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 76, 23, 35, "n.setEnabled"),
             change("src/esrc/scripts/racetrack1.e-awt", 77, 14, 26, "r.accelerate"),
             change("src/esrc/scripts/racetrack1.e-awt", 79, 30, 33, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 80, 21, 30, "r.setText"),
             change("src/esrc/scripts/racetrack1.e-awt", 80, 48, 61, "r.getVelocity"),
             change("src/esrc/scripts/racetrack1.e-awt", 80, 62, 68, ").getX"),
             change("src/esrc/scripts/racetrack1.e-awt", 81, 21, 30, "r.setText"),
             change("src/esrc/scripts/racetrack1.e-awt", 81, 50, 63, "r.getVelocity"),
             change("src/esrc/scripts/racetrack1.e-awt", 81, 64, 70, ").getY"),
             change("src/esrc/scripts/racetrack1.e-awt", 83, 23, 35, "n.setEnabled"),
             change("src/esrc/scripts/racetrack1.e-awt", 85, 26, 41, ">.transferFocus"),
             change("src/esrc/scripts/racetrack1.e-awt", 85, 47, 63, "e.getContentPane"),
             change("src/esrc/scripts/racetrack1.e-awt", 88, 27, 30, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 88, 39, 48, "e.setText"),
             change("src/esrc/scripts/racetrack1.e-awt", 89, 18, 21, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 90, 14, 17, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 91, 19, 22, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 92, 16, 19, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 93, 16, 19, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 94, 17, 20, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 95, 20, 23, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 96, 16, 19, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 97, 21, 24, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 115, 26, 33, "].asMap"),
             change("src/esrc/scripts/racetrack1.e-awt", 115, 34, 43, ").diverge"),
             change("src/esrc/scripts/racetrack1.e-awt", 123, 26, 35, "].diverge"),
             change("src/esrc/scripts/racetrack1.e-awt", 124, 27, 33, "h.getY"),
             change("src/esrc/scripts/racetrack1.e-awt", 124, 42, 48, "t.getY"),
             change("src/esrc/scripts/racetrack1.e-awt", 124, 60, 66, "h.getX"),
             change("src/esrc/scripts/racetrack1.e-awt", 124, 75, 81, "t.getX"),
             change("src/esrc/scripts/racetrack1.e-awt", 125, 45, 48, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 126, 31, 37, "t.getX"),
             change("src/esrc/scripts/racetrack1.e-awt", 127, 31, 37, "t.getY"),
             change("src/esrc/scripts/racetrack1.e-awt", 133, 33, 39, "h.getX"),
             change("src/esrc/scripts/racetrack1.e-awt", 133, 50, 56, "t.getX"),
             change("src/esrc/scripts/racetrack1.e-awt", 135, 48, 54, "t.getX"),
             change("src/esrc/scripts/racetrack1.e-awt", 136, 29, 35, "t.getY"),
             change("src/esrc/scripts/racetrack1.e-awt", 141, 33, 39, "h.getY"),
             change("src/esrc/scripts/racetrack1.e-awt", 141, 50, 56, "t.getY"),
             change("src/esrc/scripts/racetrack1.e-awt", 143, 48, 54, "t.getY"),
             change("src/esrc/scripts/racetrack1.e-awt", 144, 29, 35, "t.getX"),
             change("src/esrc/scripts/racetrack1.e-awt", 147, 20, 26, "s.push"),
             change("src/esrc/scripts/racetrack1.e-awt", 148, 22, 30, "t.equals"),
             change("src/esrc/scripts/racetrack1.e-awt", 156, 27, 30, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 160, 19, 33, "h.reactToAccel"),
             change("src/esrc/scripts/racetrack1.e-awt", 165, 31, 37, "y.plus"),
             change("src/esrc/scripts/racetrack1.e-awt", 166, 38, 44, "n.plus"),
             change("src/esrc/scripts/racetrack1.e-awt", 171, 46, 59, "p.causesCrash"),
             change("src/esrc/scripts/racetrack1.e-awt", 172, 48, 62, "p.causesFinish"),
             change("src/esrc/scripts/racetrack1.e-awt", 175, 30, 41, "l.setStatus"),
             change("src/esrc/scripts/racetrack1.e-awt", 176, 51, 62, "l.setStatus"),
             change("src/esrc/scripts/racetrack1.e-awt", 184, 30, 33, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 184, 47, 67, "l.prepareForNextTurn"),
             change("src/esrc/scripts/racetrack1.e-awt", 185, 34, 37, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 186, 37, 40, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 186, 52, 60, "s.remove"),
             change("src/esrc/scripts/racetrack1.e-awt", 199, 8, 24, "e.getContentPane"),
             change("src/esrc/scripts/racetrack1.e-awt", 199, 25, 30, ").add"),
             change("src/esrc/scripts/racetrack1.e-awt", 201, 30, 33, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 202, 17, 32, "p.continueAtTop"),
             change("src/esrc/scripts/racetrack1.e-awt", 206, 8, 27, "e.addWindowListener"),
             change("src/esrc/scripts/racetrack1.e-awt", 208, 8, 14, "e.pack"),
             change("src/esrc/scripts/racetrack1.e-awt", 209, 8, 14, "e.show"),
             change("src/esrc/scripts/racetrack1.e-awt", 211, 26, 29, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 211, 35, 44, "e.setText"),
             change("src/esrc/scripts/racetrack1.e-awt", 212, 28, 31, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 212, 40, 49, "e.setText"),
             change("src/esrc/scripts/racetrack1.e-awt", 229, 44, 50, "d.getY"),
             change("src/esrc/scripts/racetrack1.e-awt", 229, 59, 65, "d.getX"),
             change("src/esrc/scripts/racetrack1.e-awt", 230, 46, 52, "d.getY"),
             change("src/esrc/scripts/racetrack1.e-awt", 230, 61, 67, "d.getX"),
             change("src/esrc/scripts/racetrack1.e-awt", 233, 16, 22, "d.getX"),
             change("src/esrc/scripts/racetrack1.e-awt", 233, 36, 42, "d.getY"),
             change("src/esrc/scripts/racetrack1.e-awt", 234, 18, 24, "d.getX"),
             change("src/esrc/scripts/racetrack1.e-awt", 234, 39, 45, "].size"),
             change("src/esrc/scripts/racetrack1.e-awt", 234, 55, 61, "d.getY"),
             change("src/esrc/scripts/racetrack1.e-awt", 234, 73, 79, "p.size"),
             change("src/esrc/scripts/racetrack1.e-awt", 244, 68, 74, "e.size"),
             change("src/esrc/scripts/racetrack1.e-awt", 247, 27, 40, "h.getLocation"),
             change("src/esrc/scripts/racetrack1.e-awt", 247, 41, 47, ").getY"),
             change("src/esrc/scripts/racetrack1.e-awt", 247, 74, 87, "h.getLocation"),
             change("src/esrc/scripts/racetrack1.e-awt", 247, 88, 94, ").getX"),
             change("src/esrc/scripts/racetrack1.e-awt", 248, 45, 54, "t.diverge"),
             change("src/esrc/scripts/racetrack1.e-awt", 249, 36, 49, "h.getLocation"),
             change("src/esrc/scripts/racetrack1.e-awt", 249, 50, 56, ").getX"),
             change("src/esrc/scripts/racetrack1.e-awt", 249, 67, 76, "h.getName"),
             change("src/esrc/scripts/racetrack1.e-awt", 250, 41, 51, "e.snapshot"),
             change("src/esrc/scripts/racetrack1.e-awt", 290, 20, 29, "].diverge"),
             change("src/esrc/scripts/racetrack1.e-awt", 291, 10, 16, "t.push"),
             change("src/esrc/scripts/racetrack1.e-awt", 292, 10, 16, "t.push"),
             change("src/esrc/scripts/racetrack1.e-awt", 293, 10, 16, "t.push"),
             change("src/esrc/scripts/racetrack1.e-awt", 294, 19, 26, "].asMap"),
             change("src/esrc/scripts/racetrack1.e-awt", 294, 27, 36, ").diverge"),
             change("src/esrc/scripts/racetrack1.e-awt", 305, 29, 36, "].asMap"),
             change("src/esrc/scripts/racetrack1.e-awt", 305, 37, 46, ").diverge"),
             change("src/esrc/scripts/racetrack1.e-awt", 306, 44, 63, "p.getAsTextWithCars"),
             change("src/esrc/scripts/racetrack1.e-awt", 308, 27, 30, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 311, 30, 36, "e.size"),
             change("src/esrc/scripts/racetrack1.e-awt", 311, 45, 51, "s.size"),
             change("src/esrc/scripts/racetrack1.e-awt", 312, 24, 42, "k.completeNextTurn"),
             change("src/esrc/scripts/racetrack1.e-awt", 315, 28, 31, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 316, 28, 37, "].diverge"),
             change("src/esrc/scripts/racetrack1.e-awt", 318, 19, 25, "h.move"),
             change("src/esrc/scripts/racetrack1.e-awt", 319, 23, 35, "h.hasCrashed"),
             change("src/esrc/scripts/racetrack1.e-awt", 320, 23, 34, "s.removeKey"),
             change("src/esrc/scripts/racetrack1.e-awt", 321, 30, 43, "h.hasFinished"),
             change("src/esrc/scripts/racetrack1.e-awt", 322, 26, 32, "s.push"),
             change("src/esrc/scripts/racetrack1.e-awt", 325, 20, 29, "r.refresh"),
             change("src/esrc/scripts/racetrack1.e-awt", 325, 36, 55, "p.getAsTextWithCars"),
             change("src/esrc/scripts/racetrack1.e-awt", 326, 22, 28, "s.size"),
             change("src/esrc/scripts/racetrack1.e-awt", 327, 56, 65, "].getName"),
             change("src/esrc/scripts/racetrack1.e-awt", 328, 29, 35, "s.size"),
             change("src/esrc/scripts/racetrack1.e-awt", 330, 26, 32, "s.size"),
             change("src/esrc/scripts/racetrack1.e-awt", 332, 28, 48, "k.prepareForNextTurn"),
             change("src/esrc/scripts/racetrack1.e-awt", 334, 30, 33, ") :void {"),
             change("src/esrc/scripts/racetrack1.e-awt", 336, 32, 39, "].asMap"),
             change("src/esrc/scripts/racetrack1.e-awt", 336, 40, 49, ").diverge"),
             change("src/esrc/scripts/racetrack1.e-awt", 338, 19, 39, "h.prepareForNextTurn"),
             change("src/esrc/scripts/racetrack1.e-awt", 342, 25, 42, "h.addAccelReactor"),
             change("src/esrc/scripts/racetrack1.e-awt", 347, 5, 17, "p.blockAtTop"),
             change("src/esrc/scripts/replace.e", 9, 9, 18, "p.getArgs"),
             change("src/esrc/scripts/replace.e", 9, 19, 25, ").size"),
             change("src/esrc/scripts/replace.e", 13, 27, 36, "p.getArgs"),
             change("src/esrc/scripts/replace.e", 14, 20, 29, "p.getArgs"),
             change("src/esrc/scripts/replace.e", 15, 21, 30, "p.getArgs"),
             change("src/esrc/scripts/replace.e", 17, 39, 48, "t.getText"),
             change("src/esrc/scripts/replace.e", 18, 6, 15, "t.setText"),
             change("src/esrc/scripts/replaceall.e", 6, 43, 46, ") :void {"),
             change("src/esrc/scripts/replaceall.e", 7, 14, 27, "r.isDirectory"),
             change("src/esrc/scripts/replaceall.e", 11, 21, 30, "r.getName"),
             change("src/esrc/scripts/replaceall.e", 11, 31, 41, ").endsWith"),
             change("src/esrc/scripts/replaceall.e", 12, 13, 22, "r.println"),
             change("src/esrc/scripts/replaceall.e", 12, 29, 38, "r.getPath"),
             change("src/esrc/scripts/replaceall.e", 13, 14, 23, "r.setText"),
             change("src/esrc/scripts/replaceall.e", 13, 30, 39, "r.getText"),
             change("src/esrc/scripts/replaceall.e", 13, 40, 52, ").replaceAll"),
             change("src/esrc/scripts/replaceall.e", 18, 9, 18, "p.getArgs"),
             change("src/esrc/scripts/tamingConverter.e", 8, 17, 20, ") :void {"),
             change("src/esrc/scripts/tamingConverter.e", 9, 9, 18, "r.println"),
             change("src/esrc/scripts/tamingConverter.e", 34, 30, 42, "r.valueMaker"),
             change("src/esrc/scripts/tamingConverter.e", 34, 49, 55, "c.trim"),
             change("src/esrc/scripts/tamingConverter.e", 34, 57, 69, ").substitute"),
             change("src/esrc/scripts/tamingConverter.e", 34, 72, 82, ").minimize"),
             change("src/esrc/scripts/tamingConverter.e", 35, 6, 13, "m.build"),
             change("src/esrc/scripts/tamingConverter.e", 39, 11, 19, "e.getTag"),
             change("src/esrc/scripts/tamingConverter.e", 39, 20, 32, ").getTagName"),
             change("src/esrc/scripts/tamingConverter.e", 40, 11, 20, "e.getArgs"),
             change("src/esrc/scripts/tamingConverter.e", 48, 9, 23, "t.getOptString"),
             change("src/esrc/scripts/tamingConverter.e", 52, 22, 29, "e.split"),
             change("src/esrc/scripts/tamingConverter.e", 57, 27, 40, "t.toLowerCase"),
             change("src/esrc/scripts/tamingConverter.e", 64, 19, 25, "t.size"),
             change("src/esrc/scripts/tamingConverter.e", 68, 16, 29, "h.lastStartOf"),
             change("src/esrc/scripts/tamingConverter.e", 70, 18, 26, "].mkdirs"),
             change("src/esrc/scripts/tamingConverter.e", 71, 12, 24, "].textWriter"),
             change("src/esrc/scripts/tamingConverter.e", 101, 24, 33, "].diverge"),
             change("src/esrc/scripts/tamingConverter.e", 102, 22, 31, "].diverge"),
             change("src/esrc/scripts/tamingConverter.e", 106, 22, 28, "s.push"),
             change("src/esrc/scripts/tamingConverter.e", 108, 20, 26, "s.push"),
             change("src/esrc/scripts/tamingConverter.e", 111, 20, 29, "].diverge"),
             change("src/esrc/scripts/tamingConverter.e", 113, 38, 44, "d.push"),
             change("src/esrc/scripts/tamingConverter.e", 118, 38, 44, "d.push"),
             change("src/esrc/scripts/tamingConverter.e", 123, 38, 44, "d.push"),
             change("src/esrc/scripts/tamingConverter.e", 128, 38, 44, "d.push"),
             change("src/esrc/scripts/tamingConverter.e", 132, 30, 36, "d.size"),
             change("src/esrc/scripts/tamingConverter.e", 153, 36, 39, ") :void {"),
             change("src/esrc/scripts/tamingConverter.e", 154, 17, 30, "r.isDirectory"),
             change("src/esrc/scripts/tamingConverter.e", 158, 24, 33, "r.getName"),
             change("src/esrc/scripts/tamingConverter.e", 159, 39, 48, "r.getText"),
             change("src/esrc/scripts/tamingConverter.e", 165, 15, 30, "p.prettyPrintOn"),
             change("src/esrc/scripts/tamingConverter.e", 167, 14, 21, "t.close"),
             change("src/esrc/scripts/tamingConverter.e", 173, 39, 48, "p.getArgs"),
             change("src/esrc/scripts/test/audit-test.e", 30, 12, 15, ") :void {"),
             change("src/esrc/scripts/test/mod.updoc", 3, 20, 23, ") :void {"),
             change("src/esrc/scripts/test/mod.updoc", 19, 20, 23, ") :void {"),
             change("src/esrc/scripts/test/test2FocusLayout.e-swt", 13, 27, 30, ") :void {"),
             change("src/esrc/scripts/test/test2FocusLayout.e-swt", 15, 13, 28, "p.continueAtTop"),
             change("src/esrc/scripts/test/test2FocusLayout.e-swt", 18, 4, 24, "l.addDisposeListener"),
             change("src/esrc/scripts/test/test2FocusLayout.e-swt", 21, 39, 47, "T.BORDER"),
             change("src/esrc/scripts/test/test2FocusLayout.e-swt", 22, 7, 16, "t.setText"),
             change("src/esrc/scripts/test/test2FocusLayout.e-swt", 23, 40, 48, "T.BORDER"),
             change("src/esrc/scripts/test/test2FocusLayout.e-swt", 24, 8, 17, "t.setText"),
             change("src/esrc/scripts/test/test2FocusLayout.e-swt", 25, 42, 45, ") :void {"),
             change("src/esrc/scripts/test/test2FocusLayout.e-swt", 27, 31, 34, ") :void {"),
             change("src/esrc/scripts/test/test2FocusLayout.e-swt", 29, 27, 42, ">.transferFocus"),
             change("src/esrc/scripts/test/test2FocusLayout.e-swt", 32, 9, 31, "n.addSelectionListener"),
             change("src/esrc/scripts/test/test2FocusLayout.e-swt", 34, 48, 54, "T.PUSH"),
             change("src/esrc/scripts/test/test2FocusLayout.e-swt", 35, 14, 23, "n.setText"),
             change("src/esrc/scripts/test/test2FocusLayout.e-swt", 38, 48, 54, "T.PUSH"),
             change("src/esrc/scripts/test/test2FocusLayout.e-swt", 39, 15, 24, "n.setText"),
             change("src/esrc/scripts/test/test2FocusLayout.e-swt", 51, 4, 10, "l.open"),
             change("src/esrc/scripts/test/test2FocusLayout.e-swt", 52, 5, 17, "p.blockAtTop"),
             change("src/esrc/scripts/test/testFocusLayout.e-swt", 13, 27, 30, ") :void {"),
             change("src/esrc/scripts/test/testFocusLayout.e-swt", 15, 13, 28, "p.continueAtTop"),
             change("src/esrc/scripts/test/testFocusLayout.e-swt", 18, 4, 24, "l.addDisposeListener"),
             change("src/esrc/scripts/test/testFocusLayout.e-swt", 21, 39, 47, "T.BORDER"),
             change("src/esrc/scripts/test/testFocusLayout.e-swt", 22, 7, 16, "t.setText"),
             change("src/esrc/scripts/test/testFocusLayout.e-swt", 23, 40, 48, "T.BORDER"),
             change("src/esrc/scripts/test/testFocusLayout.e-swt", 24, 8, 17, "t.setText"),
             change("src/esrc/scripts/test/testFocusLayout.e-swt", 25, 42, 45, ") :void {"),
             change("src/esrc/scripts/test/testFocusLayout.e-swt", 27, 31, 34, ") :void {"),
             change("src/esrc/scripts/test/testFocusLayout.e-swt", 29, 27, 42, ">.transferFocus"),
             change("src/esrc/scripts/test/testFocusLayout.e-swt", 32, 9, 31, "n.addSelectionListener"),
             change("src/esrc/scripts/test/testFocusLayout.e-swt", 34, 48, 54, "T.PUSH"),
             change("src/esrc/scripts/test/testFocusLayout.e-swt", 35, 14, 23, "n.setText"),
             change("src/esrc/scripts/test/testFocusLayout.e-swt", 38, 48, 54, "T.PUSH"),
             change("src/esrc/scripts/test/testFocusLayout.e-swt", 39, 15, 24, "n.setText"),
             change("src/esrc/scripts/test/testFocusLayout.e-swt", 51, 4, 10, "l.open"),
             change("src/esrc/scripts/test/testFocusLayout.e-swt", 52, 5, 17, "p.blockAtTop"),
             change("src/esrc/scripts/test/testLayout.e-awt", 13, 7, 16, "t.setText"),
             change("src/esrc/scripts/test/testLayout.e-awt", 15, 8, 17, "t.setText"),
             change("src/esrc/scripts/test/testLayout.e-awt", 20, 14, 23, "n.setText"),
             change("src/esrc/scripts/test/testLayout.e-awt", 27, 15, 24, "n.setText"),
             change("src/esrc/scripts/test/testLayout.e-awt", 35, 4, 20, "l.setContentPane"),
             change("src/esrc/scripts/test/testLayout.e-awt", 36, 4, 10, "l.show"),
             change("src/esrc/scripts/test/testLayout.e-awt", 37, 5, 17, "p.blockAtTop"),
             change("src/esrc/scripts/test/testSimpleText.e-swt", 9, 9, 12, ") :void {"),
             change("src/esrc/scripts/upgradeComments.e", 6, 17, 20, ") :void {"),
             change("src/esrc/scripts/upgradeComments.e", 6, 26, 35, "r.println"),
             change("src/esrc/scripts/upgradeComments.e", 12, 15, 25, "e.endsWith"),
             change("src/esrc/scripts/upgradeComments.e", 22, 34, 37, ") :void {"),
             change("src/esrc/scripts/upgradeComments.e", 23, 17, 30, "r.isDirectory"),
             change("src/esrc/scripts/upgradeComments.e", 24, 25, 33, "r.exists"),
             change("src/esrc/scripts/upgradeComments.e", 24, 48, 56, "r.mkdirs"),
             change("src/esrc/scripts/upgradeComments.e", 25, 48, 57, "r.getPath"),
             change("src/esrc/scripts/upgradeComments.e", 29, 36, 45, "r.getName"),
             change("src/esrc/scripts/upgradeComments.e", 34, 32, 41, "r.getText"),
             change("src/esrc/scripts/upgradeComments.e", 37, 31, 40, "r.getPath"),
             change("src/esrc/scripts/upgradeComments.e", 38, 21, 30, "r.setText"),
             change("src/esrc/scripts/upgradeComments.e", 43, 9, 18, "p.getArgs"),
             change("src/esrc/scripts/upgradeComments.e", 45, 16, 25, "p.getArgs"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 12, 32, 40, "x.optCap"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 12, 48, 67, "x.INITIAL_DOC_RCVRS"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 13, 20, 26, "s.size"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 21, 48, 51, ") :void {"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 22, 32, 40, "x.optCap"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 22, 48, 57, "x.TRACELN"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 23, 33, 41, "x.optCap"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 23, 49, 62, "x.FRAME_MAKER"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 24, 36, 44, "x.optCap"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 24, 52, 65, "x.DROP_TARGET"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 38, 29, 32, ") :void {"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 42, 38, 41, ") :void {"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 43, 33, 39, "s.size"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 47, 46, 49, ") :void {"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 52, 42, 62, "r.javaFileListFlavor"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 54, 53, 81, "r.javaJVMLocalObjectMimeType"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 68, 34, 37, ") :void {"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 68, 43, 58, "t.windowClosing"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 72, 32, 48, "e.getContentPane"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 73, 16, 42, "e.setDefaultCloseOperation"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 73, 65, 86, ">.DO_NOTHING_ON_CLOSE"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 74, 16, 35, "e.addWindowListener"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 76, 15, 26, "e.setLayout"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 78, 23, 26, ") :void {"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 78, 32, 38, "t.save"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 80, 32, 47, "s.newToolButton"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 84, 15, 28, "e.setLineWrap"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 85, 15, 33, "e.setWrapStyleWord"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 86, 15, 27, "e.setTabSize"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 90, 38, 65, ">.VERTICAL_SCROLLBAR_ALWAYS"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 91, 38, 66, ">.HORIZONTAL_SCROLLBAR_NEVER"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 92, 24, 37, "e.getViewport"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 92, 38, 43, ").add"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 97, 15, 33, "e.setPreferredSize"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 98, 15, 20, "e.add"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 99, 79, 82, ") :void {"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 100, 20, 30, "e.setTitle"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 101, 21, 33, "n.setEnabled"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 102, 19, 28, "e.setText"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 104, 29, 38, "e.getText"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 105, 20, 26, "e.pack"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 106, 20, 29, "e.setSize"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 107, 20, 26, "e.show"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 110, 24, 27, ") :void {"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 112, 24, 33, "e.dispose"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 117, 20, 23, ") :void {"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 118, 33, 42, "e.getText"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 120, 45, 48, ") :void {"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 129, 29, 32, ") :void {"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 133, 43, 52, "e.getText"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 138, 84, 87, ") :void {"),
             change("src/esrc/scripts/webServer/evilEditor.caplet", 145, 38, 44, "t.save"),
             change("src/esrc/scripts/webServer/ewalnut.html", 693, 14, 20, "r.add2"),
             change("src/esrc/scripts/webServer/ewalnut.html", 694, 14, 20, "r.add3"),
             change("src/esrc/scripts/webServer/ewalnut.html", 695, 14, 19, "r.add"),
             change("src/esrc/scripts/webServer/loveBug.caplet", 17, 32, 40, "x.optCap"),
             change("src/esrc/scripts/webServer/loveBug.caplet", 17, 48, 57, "x.TRACELN"),
             change("src/esrc/scripts/webServer/loveBug.caplet", 18, 33, 41, "x.optCap"),
             change("src/esrc/scripts/webServer/loveBug.caplet", 18, 49, 62, "x.FRAME_MAKER"),
             change("src/esrc/scripts/webServer/loveBug.caplet", 19, 36, 44, "x.optCap"),
             change("src/esrc/scripts/webServer/loveBug.caplet", 19, 52, 65, "x.DROP_TARGET"),
             change("src/esrc/scripts/webServer/loveBug.caplet", 35, 57, 60, ") :void {"),
             change("src/esrc/scripts/webServer/loveBug.caplet", 36, 39, 60, "x.requestFileRcvrsVow"),
             change("src/esrc/scripts/webServer/loveBug.caplet", 38, 50, 53, ") :void {"),
             change("src/esrc/scripts/webServer/loveBug.caplet", 39, 28, 34, "s.size"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 9, 17, 20, ") :void {"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 9, 26, 35, "r.println"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 16, 13, 28, "r.sturdyFromURI"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 16, 32, 41, ").getRcvr"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 19, 13, 26, "r.sturdyToURI"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 26, 27, 33, "E.call"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 52, 39, 42, ") :void {"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 54, 9, 16, "t.close"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 55, 15, 22, "t.close"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 56, 9, 24, "p.continueAtTop"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 63, 14, 17, ") :void {"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 65, 29, 37, "t.accept"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 66, 26, 43, "t.getOutputStream"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 67, 25, 41, "t.getInputStream"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 70, 25, 35, "m.readLine"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 83, 37, 46, ">.getText"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 84, 57, 63, "c.size"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 85, 16, 23, "m.write"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 85, 57, 63, "c.size"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 85, 65, 75, ").getBytes"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 86, 16, 23, "m.write"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 86, 29, 39, "c.getBytes"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 88, 13, 20, "t.close"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 94, 58, 67, ">.getText"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 94, 124, 127, ") :void {"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 97, 17, 24, "t.close"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 103, 41, 50, ">.getText"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 104, 55, 61, "c.size"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 106, 20, 27, "m.write"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 106, 33, 43, "r.getBytes"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 108, 20, 27, "m.write"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 108, 33, 43, "c.getBytes"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 112, 13, 20, "t.close"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 118, 9, 19, "r.onTheAir"),
             change("src/esrc/scripts/webServer/webServerSocket80.e", 122, 5, 17, "p.blockAtTop"))`
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:19:67:        def fileRcvrs := powerbox.optCap(powerbox.INITIAL_DOC_RCVRS())
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:20:26:        if (fileRcvrs.size() == 0) {
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:29:57:        def traceline := powerbox.optCap(powerbox.TRACELN())
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:31:62:        def frameMaker := powerbox.optCap(powerbox.FRAME_MAKER())
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:32:65:        def awtDropTarget := powerbox.optCap(powerbox.DROP_TARGET())
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:51:35:            for i in 0..(files.size() - 1) {
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:64:62:            setupDrop(textPane, [DataFlavor.javaFileListFlavor()
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:66:81:                                 DataFlavor(DataFlavor.javaJVMLocalObjectMimeType() +
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:80:64:            to windowClosing(event) :void {capEdit.windowClosing()}
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:84:48:        def mainPane := mainFrame.getContentPane()
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:85:86:        mainFrame.setDefaultCloseOperation(<swing:WindowConstants>.DO_NOTHING_ON_CLOSE())
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:86:35:        mainFrame.addWindowListener(windowListener)
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:88:26:        mainPane.setLayout(border)
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:90:38:        def saveAction() :void {capEdit.save()}
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:92:47:        def saveButton := uiTools.newToolButton( <swing:ImageIcon>(saveURL)getImage() , "Save", saveAction)
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:94:26:        def openAction() :void {
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:95:60:            def fileRcvrsVow := powerbox.requestFileRcvrsVow(
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:97:52:            when (fileRcvrsVow) -> done(fileRcvrs) :void {
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:102:47:        def openButton := uiTools.newToolButton( <swing:ImageIcon>(openURL)getImage() , "Open File", openAction)
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:106:28:        textPane.setLineWrap(true)
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:107:33:        textPane.setWrapStyleWord(true)
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:108:27:        textPane.setTabSize(4)
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:112:65:            <swing:ScrollPaneConstants>.VERTICAL_SCROLLBAR_ALWAYS(),
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:113:66:            <swing:ScrollPaneConstants>.HORIZONTAL_SCROLLBAR_NEVER())
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:114:43:        scrollingTextPane.getViewport().add(textPane)
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:119:33:        realPane.setPreferredSize(<awt:Dimension>(300, 300))
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:120:20:        mainPane.add(realPane, "Center")
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:121:82:        when (myTextVow, canWriteVow,myFileNameVow) -> done(text, canWrite,name) :void {
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:122:30:            mainFrame.setTitle( name)
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:123:33:            saveButton.setEnabled(canWrite)
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:124:28:            textPane.setText(myText)
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:126:38:            myText := textPane.getText()
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:127:26:            mainFrame.pack()
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:128:29:            mainFrame.setSize(600,400)
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:129:26:            mainFrame.show()
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:132:27:        def disposeOnce() :void {
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:139:23:            to save() :void {
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:140:42:                myText := textPane.getText()
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:142:48:                when (setVow) -> done(textSet) :void {
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:151:32:            to windowClosing() :void {
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:165:44:                          done(var answer) :void {
~/efoo/src/esrc/caplets/capEdit/capEdit.caplet:173:44:                                capEdit.save()
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:1:0:# Copyright 2002 Combex, Inc. under the terms of the MIT X license
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:15:67:        def fileRcvrs := powerbox.optCap(powerbox.INITIAL_DOC_RCVRS())
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:16:26:        if (fileRcvrs.size() == 0) {
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:24:51:    to run(powerbox, <awt>, <swing>, optFileRcvr) :void {
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:25:57:        def traceline := powerbox.optCap(powerbox.TRACELN())
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:26:62:        def frameMaker := powerbox.optCap(powerbox.FRAME_MAKER())
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:27:65:        def awtDropTarget := powerbox.optCap(powerbox.DROP_TARGET())
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:41:37:        def reactToFilesDrop(files) :void {
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:42:35:            for i in 0..(files.size() - 1) {
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:47:32:        def prepDrop(textPane) :void {
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:51:49:            def reactToFileRcvrsDrop(fileRcvrs) :void {
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:55:62:            setupDrop(textPane, [DataFlavor.javaFileListFlavor()
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:57:81:                                 DataFlavor(DataFlavor.javaJVMLocalObjectMimeType() +
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:71:58:            to windowClosing(event) :void {capEdit.windowClosing()}
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:75:48:        def mainPane := mainFrame.getContentPane()
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:76:86:        mainFrame.setDefaultCloseOperation(<swing:WindowConstants>.DO_NOTHING_ON_CLOSE())
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:77:35:        mainFrame.addWindowListener(windowListener)
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:79:26:        mainPane.setLayout(border)
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:81:38:        def saveAction() :void {capEdit.save()}
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:83:47:        def saveButton := uiTools.newToolButton( <swing:ImageIcon>(saveURL)getImage() , "Save", saveAction)
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:85:26:        def openAction() :void {
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:86:60:            def fileRcvrsVow := powerbox.requestFileRcvrsVow(
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:88:52:            when (fileRcvrsVow) -> done(fileRcvrs) :void {
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:93:47:        def openButton := uiTools.newToolButton( <swing:ImageIcon>(openURL)getImage() , "Open File", openAction)
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:97:28:        textPane.setLineWrap(true)
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:98:33:        textPane.setWrapStyleWord(true)
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:99:27:        textPane.setTabSize(4)
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:103:65:            <swing:ScrollPaneConstants>.VERTICAL_SCROLLBAR_ALWAYS(),
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:104:66:            <swing:ScrollPaneConstants>.HORIZONTAL_SCROLLBAR_NEVER())
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:105:43:        scrollingTextPane.getViewport().add(textPane)
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:110:33:        realPane.setPreferredSize(<awt:Dimension>(300, 300))
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:111:20:        mainPane.add(realPane, "Center")
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:112:82:        when (myTextVow, canWriteVow,myFileNameVow) -> done(text, canWrite,name) :void {
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:113:30:            mainFrame.setTitle( name)
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:114:33:            saveButton.setEnabled(canWrite)
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:115:28:            textPane.setText(myText)
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:117:38:            myText := textPane.getText()
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:118:26:            mainFrame.pack()
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:119:29:            mainFrame.setSize(600,400)
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:120:26:            mainFrame.show()
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:123:27:        def disposeOnce() :void {
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:125:33:                mainFrame.dispose()
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:130:23:            to save() :void {
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:131:42:                myText := textPane.getText()
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:133:48:                when (setVow) -> done(textSet) :void {
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:142:32:            to windowClosing() :void {
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:146:52:                    def finalText:= textPane.getText()
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:151:87:                        when (saveDecision <- getClickedButton()) -> done(var answer) :void {
~/efoo/src/esrc/caplets/capEdit/capEditOld.caplet:158:44:                                capEdit.save()
~/efoo/src/esrc/caplets/capEdit/testCapEdit.e-awt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/caplets/capEdit/testCapEdit.e-awt:17:37:def box := pboxController.getPowerbox()
~/efoo/src/esrc/caplets/capEdit/testCapEdit.e-awt:18:44:pboxController.setCap (box.INITIAL_DOC_RCVRS(),
~/efoo/src/esrc/caplets/capEdit/testCapEdit.e-awt:20:25:pboxController.launchFile(capletFile)
~/efoo/src/esrc/caplets/capEdit/testCapEdit.e-awt:21:17:interp.blockAtTop()
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:1:0:# Copyright 2002 Combex, Inc. under the terms of the MIT X license
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:17:67:        def fileRcvrs := powerbox.optCap(powerbox.INITIAL_DOC_RCVRS())
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:18:26:        if (fileRcvrs.size() == 0) {
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:26:51:    to run(powerbox, <awt>, <swing>, optFileRcvr) :void {
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:27:57:        def traceline := powerbox.optCap(powerbox.TRACELN())
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:29:62:        def frameMaker := powerbox.optCap(powerbox.FRAME_MAKER())
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:30:65:        def awtDropTarget := powerbox.optCap(powerbox.DROP_TARGET())
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:44:37:        def reactToFilesDrop(files) :void {
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:45:35:            for i in 0..(files.size() - 1) {
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:50:32:        def prepDrop(textPane) :void {
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:54:49:            def reactToFileRcvrsDrop(fileRcvrs) :void {
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:58:62:            setupDrop(textPane, [DataFlavor.javaFileListFlavor()
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:60:81:                                 DataFlavor(DataFlavor.javaJVMLocalObjectMimeType() +
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:74:58:            to windowClosing(event) :void {capEdit.windowClosing()}
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:78:48:        def mainPane := mainFrame.getContentPane()
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:79:86:        mainFrame.setDefaultCloseOperation(<swing:WindowConstants>.DO_NOTHING_ON_CLOSE())
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:80:35:        mainFrame.addWindowListener(windowListener)
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:82:26:        mainPane.setLayout(border)
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:84:38:        def saveAction() :void {capEdit.save()}
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:86:47:        def saveButton := uiTools.newToolButton( <swing:ImageIcon>(saveURL)getImage() , "Save", saveAction)
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:88:26:        def openAction() :void {
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:89:60:            def fileRcvrsVow := powerbox.requestFileRcvrsVow(
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:91:52:            when (fileRcvrsVow) -> done(fileRcvrs) :void {
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:96:47:        def openButton := uiTools.newToolButton( <swing:ImageIcon>(openURL)getImage() , "Open File", openAction)
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:100:28:        textPane.setLineWrap(true)
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:101:33:        textPane.setWrapStyleWord(true)
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:102:27:        textPane.setTabSize(4)
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:106:65:            <swing:ScrollPaneConstants>.VERTICAL_SCROLLBAR_ALWAYS(),
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:107:66:            <swing:ScrollPaneConstants>.HORIZONTAL_SCROLLBAR_NEVER())
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:108:43:        scrollingTextPane.getViewport().add(textPane)
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:113:33:        realPane.setPreferredSize(<awt:Dimension>(300, 300))
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:114:20:        mainPane.add(realPane, "Center")
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:115:82:        when (myTextVow, canWriteVow,myFileNameVow) -> done(text, canWrite,name) :void {
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:116:30:            mainFrame.setTitle( name)
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:117:33:            saveButton.setEnabled(canWrite)
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:118:28:            textPane.setText(myText)
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:120:38:            myText := textPane.getText()
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:121:26:            mainFrame.pack()
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:122:29:            mainFrame.setSize(600,400)
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:123:26:            mainFrame.show()
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:126:27:        def disposeOnce() :void {
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:128:33:                mainFrame.dispose()
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:133:23:            to save() :void {
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:134:42:                myText := textPane.getText()
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:136:48:                when (setVow) -> done(textSet) :void {
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:145:32:            to windowClosing() :void {
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:149:52:                    def finalText:= textPane.getText()
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:154:87:                        when (saveDecision <- getClickedButton()) -> done(var answer) :void {
~/efoo/src/esrc/caplets/capEdit/testcapEdit.caplet:161:44:                                capEdit.save()
~/efoo/src/esrc/caplets/capWebServer/capWebServer.caplet:1:0:# Copyright 2002 Combex, Inc. under the terms of the MIT X license
~/efoo/src/esrc/caplets/capWebServer/capWebServer.caplet:24:57:        def traceline := powerbox.optCap(powerbox.TRACELN())
~/efoo/src/esrc/caplets/capWebServer/capWebServer.caplet:26:62:        def frameMaker := powerbox.optCap(powerbox.FRAME_MAKER())
~/efoo/src/esrc/caplets/capWebServer/capWebServer.caplet:27:64:        def <local> := powerbox.optCap(powerbox.LOCAL__URIGETTER())
~/efoo/src/esrc/caplets/capWebServer/capWebServer.caplet:28:66:        def serverSocket := powerbox.optCap(powerbox.SERVER_SOCKET())
~/efoo/src/esrc/caplets/capWebServer/capWebServer.caplet:35:32:        def dieWithoutSocket() :void {
~/efoo/src/esrc/caplets/capWebServer/capWebServer.caplet:42:47:            when (dialogVow) -> done1(dialog) :void {
~/efoo/src/esrc/caplets/capWebServer/capWebServer.caplet:43:36:                powerbox.requestExit()
~/efoo/src/esrc/caplets/capWebServer/capWebServer.caplet:47:33:        def dieWithBadDocRoot() :void {
~/efoo/src/esrc/caplets/capWebServer/capWebServer.caplet:54:47:            when (dialogVow) -> done2(dialog) :void {
~/efoo/src/esrc/caplets/capWebServer/capWebServer.caplet:55:36:                powerbox.requestExit()
~/efoo/src/esrc/caplets/capWebServer/capWebServer.caplet:62:69:        def initialDocs := powerbox.optCap(powerbox.INITIAL_DOC_RCVRS())
~/efoo/src/esrc/caplets/capWebServer/capWebServer.caplet:64:28:        if (initialDocs.size() > 0) {
~/efoo/src/esrc/caplets/capWebServer/capWebServer.caplet:70:63:            when (docRoot <- isDirectory()) -> doneDir(isDir) :void {
~/efoo/src/esrc/caplets/capWebServer/capWebServer.caplet:76:61:                    def webServerAuthor := powerbox.runSource(serverAuthorSource)
~/efoo/src/esrc/caplets/capWebServer/capWebServer.caplet:90:55:                    when (dialogVow) -> done3(dialog) :void {
~/efoo/src/esrc/caplets/capWebServer/capWebServer.caplet:91:42:                        webServer.shutdown()
~/efoo/src/esrc/caplets/capWebServer/capWebServer.caplet:92:42:                        serverSocket.close()
~/efoo/src/esrc/caplets/capWebServer/capWebServer.caplet:93:44:                        powerbox.requestExit()
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:1:0:# Copyright 2002 Combex, Inc. under the terms of the MIT X license
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:12:67:        def fileRcvrs := powerbox.optCap(powerbox.INITIAL_DOC_RCVRS())
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:13:26:        if (fileRcvrs.size() == 0) {
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:21:51:    to run(powerbox, <awt>, <swing>, optFileRcvr) :void {
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:22:57:        def traceline := powerbox.optCap(powerbox.TRACELN())
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:23:62:        def frameMaker := powerbox.optCap(powerbox.FRAME_MAKER())
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:24:65:        def awtDropTarget := powerbox.optCap(powerbox.DROP_TARGET())
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:38:32:        def prepDrop(textPane) :void {
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:42:41:            def reactToFilesDrop(files) :void {
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:43:39:                for i in 0..(files.size() - 1) {
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:47:49:            def reactToFileRcvrsDrop(fileRcvrs) :void {
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:52:62:            setupDrop(textPane, [DataFlavor.javaFileListFlavor()
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:54:81:                                 DataFlavor(DataFlavor.javaJVMLocalObjectMimeType() +
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:68:58:            to windowClosing(event) :void {capEdit.windowClosing()}
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:72:48:        def mainPane := mainFrame.getContentPane()
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:73:86:        mainFrame.setDefaultCloseOperation(<swing:WindowConstants>.DO_NOTHING_ON_CLOSE())
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:74:35:        mainFrame.addWindowListener(windowListener)
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:76:26:        mainPane.setLayout(border)
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:78:38:        def saveAction() :void {capEdit.save()}
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:80:47:        def saveButton := uiTools.newToolButton( <swing:ImageIcon>(saveURL)getImage() , "Save", saveAction)
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:84:28:        textPane.setLineWrap(true)
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:85:33:        textPane.setWrapStyleWord(true)
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:86:27:        textPane.setTabSize(4)
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:90:65:            <swing:ScrollPaneConstants>.VERTICAL_SCROLLBAR_ALWAYS(),
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:91:66:            <swing:ScrollPaneConstants>.HORIZONTAL_SCROLLBAR_NEVER())
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:92:43:        scrollingTextPane.getViewport().add(textPane)
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:97:33:        realPane.setPreferredSize(<awt:Dimension>(300, 300))
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:98:20:        mainPane.add(realPane, "Center")
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:99:82:        when (myTextVow, canWriteVow,myFileNameVow) -> done(text, canWrite,name) :void {
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:100:30:            mainFrame.setTitle( name)
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:101:33:            saveButton.setEnabled(canWrite)
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:102:28:            textPane.setText(myText)
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:104:38:            myText := textPane.getText()
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:105:26:            mainFrame.pack()
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:106:29:            mainFrame.setSize(600,400)
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:107:26:            mainFrame.show()
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:110:27:        def disposeOnce() :void {
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:112:33:                mainFrame.dispose()
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:117:23:            to save() :void {
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:118:42:                myText := textPane.getText()
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:120:48:                when (setVow) -> done(textSet) :void {
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:129:32:            to windowClosing() :void {
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:133:52:                    def finalText:= textPane.getText()
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:138:87:                        when (saveDecision <- getClickedButton()) -> done(var answer) :void {
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/evilEditor.caplet:145:44:                                capEdit.save()
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/ewalnut.html:1:0:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/ewalnut.html:693:20:def v1 := adder.add2(3)
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/ewalnut.html:694:20:def v2 := adder.add3(v1)
~/efoo/src/esrc/caplets/capWebServer/sampleDocRoot/ewalnut.html:695:19:def v3 := adder.add(v1, v2, 3)</PRE>

~/efoo/src/esrc/caplets/capWebServer/testCapEdit.e-awt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/caplets/capWebServer/testCapEdit.e-awt:19:37:def box := pboxController.getPowerbox()
~/efoo/src/esrc/caplets/capWebServer/testCapEdit.e-awt:20:44:pboxController.setCap (box.INITIAL_DOC_RCVRS(), [<file: "~/caplets/capWebServer/sampleDocRoot/"> ])
~/efoo/src/esrc/caplets/capWebServer/testCapEdit.e-awt:21:25:pboxController.launchFile(capletFile )
~/efoo/src/esrc/caplets/capWebServer/testCapEdit.e-awt:22:17:interp.blockAtTop()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:1:0:# Copyright 2002 Combex, Inc. under the terms of the MIT X license
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:27:57:        def traceline := powerbox.optCap(powerbox.TRACELN())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:28:62:        def frameMaker := powerbox.optCap(powerbox.FRAME_MAKER())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:29:58:        def urlMaker := powerbox.optCap(powerbox.URL_MAKER())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:30:64:        def <local> := powerbox.optCap(powerbox.LOCAL__URIGETTER())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:47:29:            if (text.endsWith("/")) {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:51:49:                def lastSlash := path.lastIndexOf("/")
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:53:36:                if (path.lastIndexOf(".") > lastSlash) {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:54:67:                    result := text(text.lastIndexOf("/"), text.size() )
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:72:81:                def parent := currentPath(0, currentPath.size() - fileSuffix.size())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:83:47:                def result := urlMaker.relative(urlMaker(currentPath), newPath)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:85:37:                result.toExternalForm()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:91:33:        def history := [].diverge()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:95:42:        var powerMap := [].asMap().diverge()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:96:33:        powerMap[powerbox.TRACELN()] := traceline
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:99:28:                powerMap.get(capKey, null)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:101:33:            to gotoUrl(urlText) :void {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:105:76:                        capBrowser.gotoURL(makeFullPath(history[history.size() -1],urlText))
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:107:74:                        if (trailer.size() > 0 && validUrlTerminators.maps(trailer[0])) {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:108:80:                            capBrowser.gotoURL(makeFullPath(history[history.size() -1],urlText))
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:122:50:            to TRACELN() :String {powerbox.TRACELN()}
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:126:44:        def setupNewRenderPane(scrollPane) :void {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:128:32:            renderPane.setLayout(<awt:BorderLayout>())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:129:39:            renderPane.setPreferredSize(<awt:Dimension>(600, 60000))
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:130:38:            scrollPane.setViewportView(renderPane)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:134:51:        def setupRenderer(sourceText, scrollPane) :void {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:142:37:            to keyPressed(theEvent) :void {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:143:74:                if (theEvent.getKeyCode() == <awt:event.KeyEvent>.VK_ENTER()) {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:144:38:                    capBrowser.gotoURL()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:149:31:        urlField.addKeyListener(enterKeyListener)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:151:28:        viewPane.setEditable(false)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:152:31:        viewPane.setContentType("text/html")
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:154:80:        window.setDefaultCloseOperation(<swing:WindowConstants>.DISPOSE_ON_CLOSE())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:155:45:        def mainPane := window.getContentPane()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:157:45:        scrollPane.setVerticalScrollBarPolicy(
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:159:35:        scrollPane.setPreferredSize(<awt:Dimension>(600, 600))
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:161:44:        def gotoRunner() :void {capBrowser.gotoURL()}
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:162:41:        def gotoButton := uiKit.newButton("Go To: ", gotoRunner)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:163:28:        def pickRenderer() :void {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:164:62:            def renderFilesVow := powerbox.requestFileRcvrsVow(false, "Select Renderer", "", "", null)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:165:56:            when (renderFilesVow) -> done(renderFiles) :void {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:166:36:                if (renderFiles.size() > 0) {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:168:51:                    def urlText := urlField.getText()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:169:63:                    if (urlText.size() > 0) {capBrowser.gotoURL()}
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:173:45:        def rendererButton := uiKit.newButton("Select Renderer", pickRenderer)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:178:26:        mainPane.setLayout(<awt:BorderLayout>())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:179:20:        mainPane.add(realPane, "Center")
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:190:26:            to gotoURL() :void {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:191:49:                def urlString := urlField.getText()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:192:28:                history.push(urlString)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:197:54:                        def conn := url.openConnection()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:198:36:                        conn.connect()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:199:56:                        def urlStream := conn.getContent()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:201:52:                        powerbox.spinoffCapletStream(urlStream)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:204:39:                    renderer.reactToURL(url)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:205:50:                    currentPageText := url.getText()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:207:44:                    renderer.reactToPageText(errorPageHtml)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:213:33:            to gotoURL(urlText) :void {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:214:32:                urlField.setText(urlText)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:215:34:                capBrowser.gotoURL()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:217:25:            to goBack() :void {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:218:27:                history.pop()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:219:71:                if (history.size() > 0) {capBrowser.gotoURL(history.pop())}
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:222:56:                def text :String := renderer.reactToCopy()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowser.caplet:227:64:            to reactToCut(eFrame) :near { capBrowser.reactToCopy(eFrame)}
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:1:0:# Copyright 2002 Combex, Inc. under the terms of the MIT X license
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:27:57:        def traceline := powerbox.optCap(powerbox.TRACELN())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:28:62:        def frameMaker := powerbox.optCap(powerbox.FRAME_MAKER())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:29:58:        def urlMaker := powerbox.optCap(powerbox.URL_MAKER())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:30:64:        def <local> := powerbox.optCap(powerbox.LOCAL__URIGETTER())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:41:69:        traceline("treeBuilderSource size: " + treeBuilderSource.size())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:53:29:            if (text.endsWith("/")) {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:57:49:                def lastSlash := path.lastIndexOf("/")
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:59:36:                if (path.lastIndexOf(".") > lastSlash) {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:60:67:                    result := text(text.lastIndexOf("/"), text.size() )
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:76:47:                def result := urlMaker.relative(urlMaker(currentPath), newPath)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:78:37:                result.toExternalForm()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:88:51:                    def result := urlMaker.relative(urlMaker(currentPath), newPath)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:119:46:            var powerMap := [].asMap().diverge()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:120:37:            powerMap[powerbox.TRACELN()] := traceline
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:124:32:                    powerMap.get(capKey, null)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:127:54:                to TRACELN() :String {powerbox.TRACELN()}
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:138:33:                to goToURL(url) :void {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:139:54:                    if (! revoked) {capBrowser.gotoURL(url)}
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:145:29:                to revoke() :void {revoked := true}
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:151:48:        def setupNewRenderPGranter(scrollPane) :void {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:153:32:            renderPane.setLayout(<awt:BorderLayout>())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:154:39:            renderPane.setPreferredSize(<awt:Dimension>(600, 60000))
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:155:38:            scrollPane.setViewportView(renderPane)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:159:51:        def setupRenderer(sourceText, scrollPane) :void {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:162:80:            renderer := rendererMaker(renderPGranterController.getRenderPGranter(),
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:169:37:            to keyPressed(theEvent) :void {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:170:74:                if (theEvent.getKeyCode() == <awt:event.KeyEvent>.VK_ENTER()) {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:171:38:                    capBrowser.gotoURL()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:176:31:        urlField.addKeyListener(enterKeyListener)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:178:28:        viewPane.setEditable(false)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:179:31:        viewPane.setContentType("text/html")
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:180:24:        viewPane.setText("</html>
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:184:80:        window.setDefaultCloseOperation(<swing:WindowConstants>.DISPOSE_ON_CLOSE())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:185:45:        def mainPane := window.getContentPane()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:187:45:        scrollPane.setVerticalScrollBarPolicy(
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:189:35:        scrollPane.setPreferredSize(<awt:Dimension>(600, 600))
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:191:44:        def gotoRunner() :void {capBrowser.gotoURL()}
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:192:41:        def gotoButton := uiKit.newButton("Go To: ", gotoRunner)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:193:28:        def pickRenderer() :void {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:194:62:            def renderFilesVow := powerbox.requestFileRcvrsVow(false, "Select Renderer", "", "", null)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:195:56:            when (renderFilesVow) -> done(renderFiles) :void {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:196:36:                if (renderFiles.size() > 0) {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:199:51:                    def urlText := urlField.getText()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:200:63:                    if (urlText.size() > 0) {capBrowser.gotoURL()}
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:204:45:        def rendererButton := uiKit.newButton("Select Renderer", pickRenderer)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:210:26:        mainPane.setLayout(<awt:BorderLayout>())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:211:20:        mainPane.add(realPane, "Center")
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:221:26:            to gotoURL() :void {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:222:49:                def urlString := urlField.getText()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:224:42:                if (memoryCheck.isSelected()) {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:225:51:                    renderPGranterController.revoke()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:233:54:                        def conn := url.openConnection()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:234:36:                        conn.connect()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:235:56:                        def urlStream := conn.getContent()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:237:52:                        powerbox.spinoffCapletStream(urlStream)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:243:69:                        renderPGranterController.getUrlRequestReactor(),
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:246:67:                    renderer.reactToURL(url, htmlBuilder.getTreeVow())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:248:77:                    def callback := makeParserCallback(htmlBuilder.getHandler())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:250:43:                    var text := url.getText()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:262:45:                        parserDelegator.parse(stringReader, callback, false)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:270:44:                    renderer.reactToPageText(errorPageHtml)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:276:29:            to gotoURL(url) :void {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:277:51:                urlField.setText(url.toExternalForm())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:278:34:                capBrowser.gotoURL()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:288:56:                def text :String := renderer.reactToCopy()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserMemoryless.caplet:293:64:            to reactToCut(eFrame) :near { capBrowser.reactToCopy(eFrame)}
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:1:0:# Copyright 2002 Combex, Inc. under the terms of the MIT X license
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:25:57:        def traceline := powerbox.optCap(powerbox.TRACELN())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:26:62:        def frameMaker := powerbox.optCap(powerbox.FRAME_MAKER())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:27:58:        def urlMaker := powerbox.optCap(powerbox.URL_MAKER())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:28:64:        def <local> := powerbox.optCap(powerbox.LOCAL__URIGETTER())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:45:29:            if (text.endsWith("/")) {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:49:49:                def lastSlash := path.lastIndexOf("/")
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:51:36:                if (path.lastIndexOf(".") > lastSlash) {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:52:67:                    result := text(text.lastIndexOf("/"), text.size() )
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:70:81:                def parent := currentPath(0, currentPath.size() - fileSuffix.size())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:81:47:                def result := urlMaker.relative(urlMaker(currentPath), newPath)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:83:37:                result.toExternalForm()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:89:33:        def history := [].diverge()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:93:42:        var powerMap := [].asMap().diverge()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:94:33:        powerMap[powerbox.TRACELN()] := traceline
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:97:28:                powerMap.get(capKey, null)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:99:33:            to gotoUrl(urlText) :void {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:103:76:                        capBrowser.gotoURL(makeFullPath(history[history.size() -1],urlText))
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:105:74:                        if (trailer.size() > 0 && validUrlTerminators.maps(trailer[0])) {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:106:80:                            capBrowser.gotoURL(makeFullPath(history[history.size() -1],urlText))
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:120:50:            to TRACELN() :String {powerbox.TRACELN()}
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:124:44:        def setupNewRenderPane(scrollPane) :void {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:126:32:            renderPane.setLayout(<awt:BorderLayout>())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:127:39:            renderPane.setPreferredSize(<awt:Dimension>(600, 60000))
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:128:38:            scrollPane.setViewportView(renderPane)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:132:51:        def setupRenderer(sourceText, scrollPane) :void {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:140:37:            to keyPressed(theEvent) :void {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:141:74:                if (theEvent.getKeyCode() == <awt:event.KeyEvent>.VK_ENTER()) {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:142:38:                    capBrowser.gotoURL()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:147:31:        urlField.addKeyListener(enterKeyListener)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:149:28:        viewPane.setEditable(false)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:150:31:        viewPane.setContentType("text/html")
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:151:24:        viewPane.setText("</html>
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:155:80:        window.setDefaultCloseOperation(<swing:WindowConstants>.DISPOSE_ON_CLOSE())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:156:45:        def mainPane := window.getContentPane()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:158:45:        scrollPane.setVerticalScrollBarPolicy(
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:160:35:        scrollPane.setPreferredSize(<awt:Dimension>(600, 600))
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:162:44:        def gotoRunner() :void {capBrowser.gotoURL()}
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:163:41:        def gotoButton := uiKit.newButton("Go To: ", gotoRunner)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:164:28:        def pickRenderer() :void {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:165:62:            def renderFilesVow := powerbox.requestFilesPromise(false, "Select Renderer", "", "", null)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:166:56:            when (renderFilesVow) -> done(renderFiles) :void {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:167:36:                if (renderFiles.size() > 0) {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:169:51:                    def urlText := urlField.getText()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:170:63:                    if (urlText.size() > 0) {capBrowser.gotoURL()}
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:174:45:        def rendererButton := uiKit.newButton("Select Renderer", pickRenderer)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:179:26:        mainPane.setLayout(<awt:BorderLayout>())
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:180:20:        mainPane.add(realPane, "Center")
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:191:26:            to gotoURL() :void {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:192:49:                def urlString := urlField.getText()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:193:28:                history.push(urlString)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:198:54:                        def conn := url.openConnection()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:199:36:                        conn.connect()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:200:56:                        def urlStream := conn.getContent()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:202:52:                        powerbox.spinoffCapletStream(urlStream)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:205:39:                    renderer.reactToURL(url)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:206:50:                    currentPageText := url.getText()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:208:44:                    renderer.reactToPageText(errorPageHtml)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:214:33:            to gotoURL(urlText) :void {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:215:32:                urlField.setText(urlText)
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:216:34:                capBrowser.gotoURL()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:218:25:            to goBack() :void {
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:219:27:                history.pop()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:220:71:                if (history.size() > 0) {capBrowser.gotoURL(history.pop())}
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:223:56:                def text :String := renderer.reactToCopy()
~/efoo/src/esrc/caplets/darpaBrowser/darpaBrowserOld.caplet:228:64:            to reactToCut(eFrame) :near { capBrowser.reactToCopy(eFrame)}
~/efoo/src/esrc/caplets/darpaBrowser/testDarpaBrowser.e-awt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/caplets/darpaBrowser/testDarpaBrowser.e-awt:22:37:def box := pboxController.getPowerbox()
~/efoo/src/esrc/caplets/darpaBrowser/testDarpaBrowser.e-awt:23:44:pboxController.setCap (box.INITIAL_DOC_RCVRS(), [<c:/windows/desktop/testFile.html>])
~/efoo/src/esrc/caplets/darpaBrowser/testDarpaBrowser.e-awt:24:25:pboxController.launchFile(capletFile )
~/efoo/src/esrc/caplets/darpaBrowser/testDarpaBrowser.e-awt:25:17:interp.blockAtTop()
~/efoo/src/esrc/caplets/darpaBrowser/testMemless.e-awt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/caplets/darpaBrowser/testMemless.e-awt:22:37:def box := pboxController.getPowerbox()
~/efoo/src/esrc/caplets/darpaBrowser/testMemless.e-awt:23:44:pboxController.setCap (box.INITIAL_DOC_RCVRS(), [<c:/windows/desktop/testFile.html>])
~/efoo/src/esrc/caplets/darpaBrowser/testMemless.e-awt:24:25:pboxController.launchFile(capletFile )
~/efoo/src/esrc/caplets/darpaBrowser/testMemless.e-awt:25:17:interp.blockAtTop()
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:1:0:# Copyright 2002 Combex, Inc. under the terms of the MIT X license
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:27:57:        def traceline := powerbox.optCap(powerbox.TRACELN())
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:28:62:        def frameMaker := powerbox.optCap(powerbox.FRAME_MAKER())
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:29:58:        def urlMaker := powerbox.optCap(powerbox.URL_MAKER())
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:30:64:        def <local> := powerbox.optCap(powerbox.LOCAL__URIGETTER())
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:47:29:            if (text.endsWith("/")) {
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:51:49:                def lastSlash := path.lastIndexOf("/")
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:53:36:                if (path.lastIndexOf(".") > lastSlash) {
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:54:67:                    result := text(text.lastIndexOf("/"), text.size() )
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:72:81:                def parent := currentPath(0, currentPath.size() - fileSuffix.size())
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:83:47:                def result := urlMaker.relative(urlMaker(currentPath), newPath)
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:85:37:                result.toExternalForm()
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:91:33:        def history := [].diverge()
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:95:42:        var powerMap := [].asMap().diverge()
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:96:33:        powerMap[powerbox.TRACELN()] := traceline
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:99:28:                powerMap.get(capKey, null)
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:101:33:            to gotoUrl(urlText) :void {
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:105:76:                        capBrowser.gotoURL(makeFullPath(history[history.size() -1],urlText))
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:107:74:                        if (trailer.size() > 0 && validUrlTerminators.maps(trailer[0])) {
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:108:80:                            capBrowser.gotoURL(makeFullPath(history[history.size() -1],urlText))
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:122:50:            to TRACELN() :String {powerbox.TRACELN()}
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:126:44:        def setupNewRenderPane(scrollPane) :void {
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:128:32:            renderPane.setLayout(<awt:BorderLayout>())
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:129:39:            renderPane.setPreferredSize(<awt:Dimension>(600, 60000))
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:130:38:            scrollPane.setViewportView(renderPane)
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:134:51:        def setupRenderer(sourceText, scrollPane) :void {
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:142:37:            to keyPressed(theEvent) :void {
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:143:74:                if (theEvent.getKeyCode() == <awt:event.KeyEvent>.VK_ENTER()) {
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:144:38:                    capBrowser.gotoURL()
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:149:31:        urlField.addKeyListener(enterKeyListener)
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:151:28:        viewPane.setEditable(false)
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:152:31:        viewPane.setContentType("text/html")
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:153:24:        viewPane.setText("</html>
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:157:80:        window.setDefaultCloseOperation(<swing:WindowConstants>.DISPOSE_ON_CLOSE())
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:158:45:        def mainPane := window.getContentPane()
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:160:45:        scrollPane.setVerticalScrollBarPolicy(
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:162:35:        scrollPane.setPreferredSize(<awt:Dimension>(600, 600))
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:164:44:        def gotoRunner() :void {capBrowser.gotoURL()}
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:165:41:        def gotoButton := uiKit.newButton("Go To: ", gotoRunner)
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:166:28:        def pickRenderer() :void {
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:167:62:            def renderFilesVow := powerbox.requestFilesPromise(false, "Select Renderer", "", "", null)
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:168:56:            when (renderFilesVow) -> done(renderFiles) :void {
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:169:36:                if (renderFiles.size() > 0) {
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:171:51:                    def urlText := urlField.getText()
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:172:63:                    if (urlText.size() > 0) {capBrowser.gotoURL()}
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:176:45:        def rendererButton := uiKit.newButton("Select Renderer", pickRenderer)
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:181:26:        mainPane.setLayout(<awt:BorderLayout>())
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:182:20:        mainPane.add(realPane, "Center")
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:193:26:            to gotoURL() :void {
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:194:49:                def urlString := urlField.getText()
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:195:28:                history.push(urlString)
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:200:54:                        def conn := url.openConnection()
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:201:36:                        conn.connect()
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:202:56:                        def urlStream := conn.getContent()
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:204:52:                        powerbox.spinoffCapletStream(urlStream)
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:207:39:                    renderer.reactToURL(url)
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:208:50:                    currentPageText := url.getText()
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:210:44:                    renderer.reactToPageText(errorPageHtml)
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:216:33:            to gotoURL(urlText) :void {
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:217:32:                urlField.setText(urlText)
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:218:34:                capBrowser.gotoURL()
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:220:25:            to goBack() :void {
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:221:27:                history.pop()
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:222:71:                if (history.size() > 0) {capBrowser.gotoURL(history.pop())}
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:225:56:                def text :String := renderer.reactToCopy()
~/efoo/src/esrc/caplets/darpaBrowser/testdarpaBrowser.caplet:230:64:            to reactToCut(eFrame) :near { capBrowser.reactToCopy(eFrame)}
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:29:57:        def traceline := powerbox.optCap(powerbox.TRACELN())
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:30:62:        def frameMaker := powerbox.optCap(powerbox.FRAME_MAKER())
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:31:58:        def urlMaker := powerbox.optCap(powerbox.URL_MAKER())
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:32:64:        def <local> := powerbox.optCap(powerbox.LOCAL__URIGETTER())
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:49:29:            if (text.endsWith("/")) {
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:53:49:                def lastSlash := path.lastIndexOf("/")
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:55:36:                if (path.lastIndexOf(".") > lastSlash) {
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:56:67:                    result := text(text.lastIndexOf("/"), text.size() )
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:74:81:                def parent := currentPath(0, currentPath.size() - fileSuffix.size())
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:85:47:                def result := urlMaker.relative(urlMaker(currentPath), newPath)
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:87:37:                result.toExternalForm()
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:93:33:        def history := [].diverge()
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:97:42:        var powerMap := [].asMap().diverge()
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:98:33:        powerMap[powerbox.TRACELN()] := traceline
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:101:28:                powerMap.get(capKey, null)
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:103:33:            to gotoUrl(urlText) :void {
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:107:76:                        capBrowser.gotoURL(makeFullPath(history[history.size() -1],urlText))
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:109:74:                        if (trailer.size() > 0 && validUrlTerminators.maps(trailer[0])) {
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:110:80:                            capBrowser.gotoURL(makeFullPath(history[history.size() -1],urlText))
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:124:50:            to TRACELN() :String {powerbox.TRACELN()}
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:128:44:        def setupNewRenderPane(scrollPane) :void {
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:130:32:            renderPane.setLayout(<awt:BorderLayout>())
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:131:39:            renderPane.setPreferredSize(<awt:Dimension>(600, 60000))
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:132:38:            scrollPane.setViewportView(renderPane)
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:136:51:        def setupRenderer(sourceText, scrollPane) :void {
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:147:37:            to keyPressed(theEvent) :void {
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:148:74:                if (theEvent.getKeyCode() == <awt:event.KeyEvent>.VK_ENTER()) {
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:149:38:                    capBrowser.gotoURL()
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:154:31:        urlField.addKeyListener(enterKeyListener)
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:156:28:        viewPane.setEditable(false)
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:157:31:        viewPane.setContentType("text/html")
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:158:24:        viewPane.setText("</html>
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:162:80:        window.setDefaultCloseOperation(<swing:WindowConstants>.DISPOSE_ON_CLOSE())
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:163:45:        def mainPane := window.getContentPane()
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:165:45:        scrollPane.setVerticalScrollBarPolicy(
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:167:35:        scrollPane.setPreferredSize(<awt:Dimension>(600, 600))
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:169:44:        def gotoRunner() :void {capBrowser.gotoURL()}
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:170:41:        def gotoButton := uiKit.newButton("Go To: ", gotoRunner)
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:171:28:        def pickRenderer() :void {
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:172:62:            def renderFilesVow := powerbox.requestFileRcvrsVow(false, "Select Renderer", "", "", null)
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:173:56:            when (renderFilesVow) -> done(renderFiles) :void {
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:174:36:                if (renderFiles.size() > 0) {
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:176:51:                    def urlText := urlField.getText()
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:177:63:                    if (urlText.size() > 0) {capBrowser.gotoURL()}
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:181:45:        def rendererButton := uiKit.newButton("Select Renderer", pickRenderer)
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:186:26:        mainPane.setLayout(<awt:BorderLayout>())
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:187:20:        mainPane.add(realPane, "Center")
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:198:26:            to gotoURL() :void {
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:199:49:                def urlString := urlField.getText()
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:200:28:                history.push(urlString)
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:205:54:                        def conn := url.openConnection()
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:206:36:                        conn.connect()
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:207:56:                        def urlStream := conn.getContent()
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:209:52:                        powerbox.spinoffCapletStream(urlStream)
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:212:39:                    renderer.reactToURL(url)
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:213:50:                    currentPageText := url.getText()
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:215:44:                    renderer.reactToPageText(errorPageHtml)
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:221:33:            to gotoURL(urlText) :void {
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:222:32:                urlField.setText(urlText)
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:223:34:                capBrowser.gotoURL()
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:225:25:            to goBack() :void {
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:226:27:                history.pop()
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:227:71:                if (history.size() > 0) {capBrowser.gotoURL(history.pop())}
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:230:56:                def text :String := renderer.reactToCopy()
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:235:64:            to reactToCut(eFrame) :near { capBrowser.reactToCopy(eFrame)}
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:249:37:def box := pboxController.getPowerbox()
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:250:42:pboxController.setCap(box.LOCAL__URIGETTER(), <file:~/caplets/darpaBrowser/>)
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:251:34:pboxController.startExternalCaplet(darpaBrowserCapletAuthor (
~/efoo/src/esrc/caplets/darpaBrowser/unconfinedBrowser.e-awt:253:17:interp.blockAtTop()
~/efoo/src/esrc/caplets/loveBug/loveBug.caplet:1:0:# Copyright 2002 Combex, Inc. under the terms of the MIT X license
~/efoo/src/esrc/caplets/loveBug/loveBug.caplet:19:57:        def traceline := powerbox.optCap(powerbox.TRACELN())
~/efoo/src/esrc/caplets/loveBug/loveBug.caplet:20:62:        def frameMaker := powerbox.optCap(powerbox.FRAME_MAKER())
~/efoo/src/esrc/caplets/loveBug/loveBug.caplet:21:65:        def awtDropTarget := powerbox.optCap(powerbox.DROP_TARGET())
~/efoo/src/esrc/caplets/loveBug/loveBug.caplet:37:60:        when (openingCompleteVow) -> done(openingComplete) :void {
~/efoo/src/esrc/caplets/loveBug/loveBug.caplet:38:60:            def fileRcvrsVow := powerbox.requestFileRcvrsVow(
~/efoo/src/esrc/caplets/loveBug/loveBug.caplet:40:53:            when (fileRcvrsVow) -> done2(fileRcvrs) :void {
~/efoo/src/esrc/caplets/loveBug/loveBug.caplet:41:34:                if (fileRcvrs.size() > 0) {
~/efoo/src/esrc/caplets/testCaplets/helloWorldCapletAuthor.caplet:1:0:# Copyright 2002 Combex, Inc. under the terms of the MIT X license
~/efoo/src/esrc/caplets/testCaplets/helloWorldCapletAuthor.caplet:7:57:        def traceline := powerbox.optCap(powerbox.TRACELN())
~/efoo/src/esrc/caplets/testCaplets/helloWorldCapletAuthor.caplet:9:28:        powerbox.requestExit()
~/efoo/src/esrc/caplets/testCaplets/helloWorldCapletPlusAuthor.caplet:1:0:# Copyright 2002 Combex, Inc. under the terms of the MIT X license
~/efoo/src/esrc/caplets/testCaplets/helloWorldCapletPlusAuthor.caplet:9:57:        def traceline := powerbox.optCap(powerbox.TRACELN())
~/efoo/src/esrc/caplets/testCaplets/helloWorldCapletPlusAuthor.caplet:11:62:        def frameMaker := powerbox.optCap(powerbox.FRAME_MAKER())
~/efoo/src/esrc/caplets/testCaplets/helloWorldCapletPlusAuthor.caplet:15:34:        frame.getContentPane().add(label)
~/efoo/src/esrc/caplets/testCaplets/helloWorldCapletPlusAuthor.caplet:17:37:            to windowClosing(event) :void {
~/efoo/src/esrc/caplets/testCaplets/helloWorldCapletPlusAuthor.caplet:18:36:                powerbox.requestExit()
~/efoo/src/esrc/caplets/testCaplets/helloWorldCapletPlusAuthor.caplet:22:31:        frame.addWindowListener(listener)
~/efoo/src/esrc/caplets/testCaplets/helloWorldCapletPlusAuthor.caplet:23:18:        frame.pack()
~/efoo/src/esrc/caplets/testCaplets/helloWorldCapletPlusAuthor.caplet:24:18:        frame.show()
~/efoo/src/esrc/caplets/testCaplets/helloWorldCapletPlusAuthor.caplet:28:52:            to reactToPaste(fromFrame, clipObject) :void {}
~/efoo/src/esrc/caplets/testCaplets/helloWorldCapletPlusAuthor.caplet:29:46:            to reactToSaveRequest(outStream) :void {}
~/efoo/src/esrc/caplets/testCaplets/helloWorldCapletPlusAuthor.caplet:30:57:            to reactToPrintRequest(fromFrame, printJob) :void {}
~/efoo/src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet:1:0:# Copyright 2002 Combex, Inc. under the terms of the MIT X license
~/efoo/src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet:13:57:        def traceline := powerbox.optCap(powerbox.TRACELN())
~/efoo/src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet:15:62:        def frameMaker := powerbox.optCap(powerbox.FRAME_MAKER())
~/efoo/src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet:16:64:        def <local> := powerbox.optCap(powerbox.LOCAL__URIGETTER())
~/efoo/src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet:18:71:        def mySource := <local:resourceTestCapletAuthor.caplet>.getText()
~/efoo/src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet:21:34:        frame.getContentPane().add(textArea)
~/efoo/src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet:23:37:            to windowClosing(event) :void {
~/efoo/src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet:24:36:                powerbox.requestExit()
~/efoo/src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet:28:31:        frame.addWindowListener(listener)
~/efoo/src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet:29:18:        frame.pack()
~/efoo/src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet:30:18:        frame.show()
~/efoo/src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet:34:37:            to reactToPaste(object) :void {}
~/efoo/src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet:35:46:            to reactToSaveRequest(outStream) :void {}
~/efoo/src/esrc/caplets/testCaplets/resourceTestCapletAuthor.caplet:36:46:            to reactToPrintRequest(printJob) :void {}
~/efoo/src/esrc/caplets/testCaplets/testURLrequest.caplet:1:0:# Copyright 2002 Combex, Inc. under the terms of the MIT X license
~/efoo/src/esrc/caplets/testCaplets/testURLrequest.caplet:20:57:        def traceline := powerbox.optCap(powerbox.TRACELN())
~/efoo/src/esrc/caplets/testCaplets/testURLrequest.caplet:22:23:            to init() :void {
~/efoo/src/esrc/caplets/testCaplets/testURLrequest.caplet:24:66:                def urlMaker := powerbox.optCap(powerbox.URL_MAKER())
~/efoo/src/esrc/caplets/testCaplets/testURLrequest.caplet:30:29:        helloWorldCaplet.init()
~/efoo/src/esrc/com/skyhunter/capDesk/testConfigurator.updoc:1:0:# Copyright 2002 Combex, Inc. under the terms of the MIT X license
~/efoo/src/esrc/com/skyhunter/capDesk/testConfigurator.updoc:16:43:? when (configurator) -> done(serverDesc) :void {
~/efoo/src/esrc/com/skyhunter/capDesk/testNavPanel.e-awt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/com/skyhunter/capDesk/testNavPanel.e-awt:20:23:navPanel.setDiskNavRcvr(testNavigator)
~/efoo/src/esrc/com/skyhunter/capDesk/testNavPanel.e-awt:22:42:frame.setContentPane(navPanel.getMainPanel())
~/efoo/src/esrc/com/skyhunter/capDesk/testNavPanel.e-awt:24:10:frame.show()
~/efoo/src/esrc/com/skyhunter/capDesk/testNavPanel.updoc:1:0:# Copyright 2002 Combex, Inc. under the terms of the MIT X license
~/efoo/src/esrc/com/skyhunter/capDesk/testNavPanel.updoc:20:25:? navPanel.setDiskNavRcvr(testNavigator)
~/efoo/src/esrc/com/skyhunter/capDesk/testNavPanel.updoc:22:44:? frame.setContentPane(navPanel.getMainPanel())
~/efoo/src/esrc/com/skyhunter/capDesk/testNavPanel.updoc:23:12:? frame.show()
~/efoo/src/esrc/com/skyhunter/capDesk/testNavWidget.e-swt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/com/skyhunter/capDesk/testNavWidget.e-swt:13:13:frame.setText("test nav panel")
~/efoo/src/esrc/com/skyhunter/capDesk/testNavWidget.e-swt:24:34:navWidgetController.setDiskNavRcvr(testNavigator)
~/efoo/src/esrc/com/skyhunter/capDesk/testNavWidget.e-swt:26:50:swtGrid`$frame: ${navWidgetController.getMainPanel()}.X.Y`
~/efoo/src/esrc/com/skyhunter/capDesk/testNavWidget.e-swt:29:30:    to widgetDisposed(event) :void {
~/efoo/src/esrc/com/skyhunter/capDesk/testNavWidget.e-swt:30:33:        disposablesKit.disposeAll()
~/efoo/src/esrc/com/skyhunter/capDesk/testNavWidget.e-swt:34:24:frame.addDisposeListener(disposer)
~/efoo/src/esrc/com/skyhunter/capDesk/testNavWidget.e-swt:35:10:frame.open()
~/efoo/src/esrc/com/skyhunter/capDesk/testNavWidget.e-swt:36:17:interp.blockAtTop()
~/efoo/src/esrc/com/skyhunter/convertForEDoc/bounds.updoc:1:0:    ? def reverse := <import:org.erights.e.tools.collect.reverse>
~/efoo/src/esrc/com/skyhunter/convertForEDoc/bounds.updoc:12:32:    >     def lines := str.split("\n")
~/efoo/src/esrc/com/skyhunter/convertForEDoc/bounds.updoc:13:31:    >     var top := lines.size()
~/efoo/src/esrc/com/skyhunter/convertForEDoc/bounds.updoc:16:27:    >         if (each.size() >= 1) {
~/efoo/src/esrc/com/skyhunter/convertForEDoc/edoc.updoc:1:41:    ? def traceline(str) :void { stderr.println(str) }
~/efoo/src/esrc/com/skyhunter/e/awt/dnd/testSetupDropFunc.e-awt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/com/skyhunter/e/awt/dnd/testSetupDropFunc.e-awt:10:13:right.setText("right")
~/efoo/src/esrc/com/skyhunter/e/awt/dnd/testSetupDropFunc.e-awt:11:26:frame.getContentPane().add(right, "East")
~/efoo/src/esrc/com/skyhunter/e/awt/dnd/testSetupDropFunc.e-awt:13:25:def reactToFiles(files) :void {
~/efoo/src/esrc/com/skyhunter/e/awt/dnd/testSetupDropFunc.e-awt:15:39:    println("array size: " + files.size())
~/efoo/src/esrc/com/skyhunter/e/awt/dnd/testSetupDropFunc.e-awt:16:27:    for i in 0..(files.size() - 1) {
~/efoo/src/esrc/com/skyhunter/e/awt/dnd/testSetupDropFunc.e-awt:17:43:        println("text: " + files[i].getText())
~/efoo/src/esrc/com/skyhunter/e/awt/dnd/testSetupDropFunc.e-awt:22:51:setupFileDrop(right, [dataFlavor.javaFileListFlavor() => reactToFiles])
~/efoo/src/esrc/com/skyhunter/e/awt/dnd/testSetupDropFunc.e-awt:24:10:frame.pack()
~/efoo/src/esrc/com/skyhunter/e/awt/dnd/testSetupDropFunc.e-awt:25:10:frame.show()
~/efoo/src/esrc/com/skyhunter/e/awt/dnd/testSetupDropFunc.e-awt:27:17:interp.blockAtTop()
~/efoo/src/esrc/com/skyhunter/e/lang/vatTester.e:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/com/skyhunter/e/lang/vatTester.e:6:34:def traceline(str) :void {stderr.println(str)}
~/efoo/src/esrc/com/skyhunter/e/lang/vatTester.e:8:19:introducer.onTheAir()
~/efoo/src/esrc/com/skyhunter/e/lang/vatTester.e:9:75:def makeVatHolder := <import:com.skyhunter.e.lang.vatHolderMakerAuthor>.run(
~/efoo/src/esrc/com/skyhunter/e/lang/vatTester.e:16:58:def vatHolder := makeVatHolder(source, [], interp.getProps(), "Bogus Sync Server")
~/efoo/src/esrc/com/skyhunter/e/lang/vatTester.e:19:51:def farSyncServer := vatHolder.promisePrimordialObj()
~/efoo/src/esrc/com/skyhunter/e/lang/vatTester.e:21:32:def outs := vatHolder.readStdout()
~/efoo/src/esrc/com/skyhunter/e/lang/vatTester.e:22:32:def errs := vatHolder.readStderr()
~/efoo/src/esrc/com/skyhunter/e/lang/vatTester.e:25:34:println("vat: " + vatHolder.getVat())
~/efoo/src/esrc/com/skyhunter/e/lang/vatTester.e:29:31:when (answer2) -> done(adone) :void {
~/efoo/src/esrc/com/skyhunter/e/lang/vatTester.e:33:33:    when (answer3) -> done2(a3) :void {
~/efoo/src/esrc/com/skyhunter/e/lang/vatTester.e:36:28:        interp.continueAtTop()
~/efoo/src/esrc/com/skyhunter/e/lang/vatTester.e:42:17:interp.blockAtTop()
~/efoo/src/esrc/com/skyhunter/e/security/powerBoxControllerMakerAuthorTester.e-awt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/com/skyhunter/e/security/powerBoxControllerMakerAuthorTester.e-awt:6:34:def traceline(str) :void {stderr.println(str)}
~/efoo/src/esrc/com/skyhunter/e/security/powerBoxControllerMakerAuthorTester.e-awt:7:90:def controllerMaker := <import:com.skyhunter.e.security.powerboxControllerMakerAuthor>.run(
~/efoo/src/esrc/com/skyhunter/e/security/powerBoxControllerMakerAuthorTester.e-awt:15:20:        to start() :void {
~/efoo/src/esrc/com/skyhunter/e/security/powerBoxControllerMakerAuthorTester.e-awt:16:61:            def traceline := powerbox.optCap(powerbox.TRACELN())
~/efoo/src/esrc/com/skyhunter/e/security/powerBoxControllerMakerAuthorTester.e-awt:20:14:    test.start()
~/efoo/src/esrc/com/skyhunter/e/security/powerBoxControllerMakerAuthorTester.e-awt:29:70:extController.startExternalCaplet(testAuthor(extController.getPowerbox(), null, null))
~/efoo/src/esrc/com/skyhunter/e/security/powerBoxControllerMakerAuthorTester.e-awt:55:38:def powerbox := controller.getPowerbox()
~/efoo/src/esrc/com/skyhunter/e/security/powerBoxControllerMakerAuthorTester.e-awt:57:17:interp.blockAtTop()
~/efoo/src/esrc/com/skyhunter/e/util/testDomTreeKit.e:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/com/skyhunter/e/util/testDomTreeKit.e:8:15:def kitTest() :void {
~/efoo/src/esrc/com/skyhunter/e/util/testDomTreeKit.e:10:56:    println("b of Tree: " + domTreeKit.extractChildNodes("b", tree))
~/efoo/src/esrc/com/skyhunter/e/util/testDomTreeKit.e:11:50:    println("xmlFromMap: " + domTreeKit.xmlFromMap(["A" => "1", "b" => "2"]))
~/efoo/src/esrc/com/skyhunter/e/util/timer.e:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/com/skyhunter/e/util/timer.e:11:18:        to run() :void {
~/efoo/src/esrc/com/skyhunter/e/util/timer.e:13:18:            E.call(actionTrio[0], actionTrio[1], actionTrio[2])
~/efoo/src/esrc/com/skyhunter/e/util/timer.e:17:67:    def timer := <import:org.erights.e.extern.timer.Timer>.theTimer()
~/efoo/src/esrc/com/skyhunter/e/util/timer.e:18:15:    timer.after(seconds * 1000, actionWrapper)
~/efoo/src/esrc/com/skyhunter/eBrowser/syncServerTester.e-awt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/com/skyhunter/eBrowser/syncServerTester.e-awt:6:34:def traceline(str) :void {stderr.println(str)}
~/efoo/src/esrc/com/skyhunter/eBrowser/syncServerTester.e-awt:7:76:def serverMaker := <import:com.skyhunter.eBrowser.syncServerMakerAuthor>.run(traceline)
~/efoo/src/esrc/com/skyhunter/eBrowser/syncServerTester.e-awt:13:33:def result := server.refreshFuncs(testSource)
~/efoo/src/esrc/com/skyhunter/ex/swing/dialogtest.e-awt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/com/skyhunter/ex/swing/dialogtest.e-awt:13:17:interp.blockAtTop()
~/efoo/src/esrc/com/skyhunter/ex/swing/toolButtonTest.e-awt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/com/skyhunter/ex/swing/toolButtonTest.e-awt:9:16:def exercise() :void {
~/efoo/src/esrc/com/skyhunter/ex/swing/toolButtonTest.e-awt:12:35:def traceline(text) :void {stderr.println(text)}
~/efoo/src/esrc/com/skyhunter/ex/swing/toolButtonTest.e-awt:15:35:def button := uiTools.newToolButton(cutUrl, "Global cut", exercise)
~/efoo/src/esrc/com/skyhunter/ex/swing/toolButtonTest.e-awt:19:26:frame.getContentPane().add(button,"East")
~/efoo/src/esrc/com/skyhunter/ex/swing/toolButtonTest.e-awt:20:44:frame.getContentPane().add(uiTools.labelIcon(<resource:com/skyhunter/e/icons/separator.gif>),"West")
~/efoo/src/esrc/com/skyhunter/ex/swing/toolButtonTest.e-awt:21:10:frame.pack()
~/efoo/src/esrc/com/skyhunter/ex/swing/toolButtonTest.e-awt:22:10:frame.show()
~/efoo/src/esrc/com/skyhunter/ex/swing/toolButtonTest.e-awt:24:17:interp.blockAtTop()
~/efoo/src/esrc/com/skyhunter/installer/testAgreedCapsVow.e-swt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/com/skyhunter/installer/testAgreedCapsVow.e-swt:6:86:def capsPetsMaker := <import:com.skyhunter.installer.agreedCapsPetsVowMakerAuthor>.run(
~/efoo/src/esrc/com/skyhunter/installer/testAgreedCapsVow.e-swt:30:47:<c:/eProjects/capEdit/capEdit.caplet>.getParent())
~/efoo/src/esrc/com/skyhunter/installer/testAgreedCapsVow.e-swt:35:34:when (capPetvow) -> done(capPet) :void {
~/efoo/src/esrc/com/skyhunter/installer/testAgreedCapsVow.e-swt:36:51:    println("got answer, xml: " + capPet.getCapsXML())
~/efoo/src/esrc/com/skyhunter/installer/testAgreedCapsVow.e-swt:37:41:    println("appMap: " + capPet.getPetMap())
~/efoo/src/esrc/com/skyhunter/installer/testAgreedCapsVow.e-swt:40:17:interp.blockAtTop()
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc:1:0:# Copyright 2002 Combex, Inc. under the terms of the MIT X license
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc:5:19:    >     to gc() :void {
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc:7:42:    >         <unsafe:java.lang.System>.gc()
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc:21:17:    ? scope.asMap()
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc:25:49:    >                             interp.getProps(),
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc:29:21:    ? cmdLoop.getArgs()
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc:32:29:    ? cmdLoop.getProps().size()
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc:35:23:    ? cmdLoop.getExpand()
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc:38:23:    ? cmdLoop.setExpand(true)
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc:39:23:    ? cmdLoop.getExpand()
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc:42:24:    ? cmdLoop.pushResult("x")
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc:43:24:    ? cmdLoop.pushResult("y")
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc:44:23:    ? cmdLoop.getResult(0)
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc:47:23:    ? cmdLoop.getResult(1)
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc:50:23:    ? cmdLoop.getResult(2)
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc:57:24:    ? cmdLoop.pushResult("z")
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc:58:23:    ? cmdLoop.getResult(0)
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc:61:23:    ? cmdLoop.getResult(2)
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc:64:16:    ? cmdLoop.gc()
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdLoopMakerAuthor.updoc:66:23:    ? cmdLoop.getResult(0)
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdMakerMaker.updoc:1:0:# Copyright 2002 Combex, Inc. under the terms of the MIT X license
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdMakerMaker.updoc:11:19:    >     to gc() :void {
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdMakerMaker.updoc:13:42:    >         <unsafe:java.lang.System>.gc()
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdMakerMaker.updoc:24:66:    ? def [altout, altoutBuf] := TextWriterMaker.makeBufferingPair()
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdMakerMaker.updoc:27:66:    ? def [alterr, alterrBuf] := TextWriterMaker.makeBufferingPair()
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdMakerMaker.updoc:33:34:    ? def props := interp.getProps(); null
~/efoo/src/esrc/org/erights/e/elang/cmd/cmdMakerMaker.updoc:34:45:    ? def privileged := ScopeSetup.privileged("__main$",
~/efoo/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc:1:0:# Copyright 2002 Combex, Inc. under the terms of the MIT X license
~/efoo/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc:17:27:    ? ctrl.addStatusReactor(reactor)
~/efoo/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc:18:18:    ? ctrl.enqueue(thunk{println("foo")})
~/efoo/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc:24:19:    ? (ctrl.enqueue(thunk{println("bar")})
~/efoo/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc:25:22:    >  ctrl.blockAtTop()
~/efoo/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc:26:19:    >  ctrl.enqueue(thunk{println("baz")})
~/efoo/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc:32:24:    ? ctrl.continueAtTop()
~/efoo/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc:42:19:    ? def event() :void {
~/efoo/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc:45:22:    >     ctrl.enqueue(thunk{println("next")})
~/efoo/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc:46:24:    >     ctrl.waitAtTop(p)
~/efoo/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc:50:18:    ? ctrl.enqueue(event)
~/efoo/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc:59:15:    ? r.resolve(3)
~/efoo/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc:64:44:    ? def exitPairVow := ctrl.getExitPairVow()
~/efoo/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc:70:20:    ? def event2() :void {
~/efoo/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc:71:24:    >     ctrl.exitAtTop()
~/efoo/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc:72:46:    >     println(`exit: ${ctrl.getExitPairVow()}`)
~/efoo/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc:73:22:    >     ctrl.enqueue(thunk{println("already dead")})
~/efoo/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc:77:18:    ? ctrl.enqueue(event2)
~/efoo/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc:91:20:    ? def event3() :void {
~/efoo/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc:94:23:    >     ctrl3.enqueue(thunk{println("next")})
~/efoo/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc:95:26:    >     ctrl3.blockAtTop()
~/efoo/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc:102:28:    ? ctrl3.addStatusReactor(reactor)
~/efoo/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc:103:19:    ? ctrl3.enqueue(event3)
~/efoo/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc:111:46:    ? def exitPairVow3 := ctrl3.getExitPairVow()
~/efoo/src/esrc/org/erights/e/elang/cmd/controlLoopMaker.updoc:117:21:    ? ctrl3.exitAtTop()
~/efoo/src/esrc/org/erights/e/tools/args/argParserCya.updoc:1:0:    ? def eUsage :=
~/efoo/src/esrc/org/erights/e/tools/args/argParserCya.updoc:32:38:    >             nameArg.getOptString()
~/efoo/src/esrc/org/erights/e/tools/args/argParserCya.updoc:82:58:    >             `${showName(name)} <${param.getOptString()}>`
~/efoo/src/esrc/org/erights/e/tools/args/argParserCya.updoc:122:40:    >     def optStr := if (options.size() == 0) {
~/efoo/src/esrc/org/erights/e/tools/args/argParserCya.updoc:124:33:    >     } else if (options.size() <= 2) {
~/efoo/src/esrc/org/erights/e/tools/args/argParserCya.updoc:146:38:    >             comment.getOptString()
~/efoo/src/esrc/org/erights/e/tools/args/argParserCya.updoc:158:63:    >             `  ${showName(name)}$\t${comment.getOptString()}`
~/efoo/src/esrc/org/erights/e/tools/args/argParserCya.updoc:161:89:    >             `  ${showName(name)} <${param.getOptString()}>$\t${comment.getOptString()}`
~/efoo/src/esrc/org/erights/e/tools/args/argParserCya.updoc:164:61:    >             `${showName(name)}$\t${comment.getOptString()}`
~/efoo/src/esrc/org/erights/e/tools/args/argParserCya.updoc:170:63:    >             `  ${showName(name)}$\t${comment.getOptString()}`
~/efoo/src/esrc/org/erights/e/tools/args/argParserCya.updoc:204:33:    >     def cells := [].diverge() # by row, column
~/efoo/src/esrc/org/erights/e/tools/args/argParserCya.updoc:205:37:    >     def lastCells := [].diverge() # by row
~/efoo/src/esrc/org/erights/e/tools/args/argParserCya.updoc:207:33:    >     for rowStr in str.split("\n") {
~/efoo/src/esrc/org/erights/e/tools/args/argParserCya.updoc:208:42:    >         def rowCells := rowStr.split("\t")
~/efoo/src/esrc/org/erights/e/tools/args/argParserCya.updoc:209:38:    >         def len := rowCells.size() -1
~/efoo/src/esrc/org/erights/e/tools/args/argParserCya.updoc:210:28:    >         lastCells.push(rowCells[len])
~/efoo/src/esrc/org/erights/e/tools/args/argParserCya.updoc:211:24:    >         cells.push(rowCells(0, len))
~/efoo/src/esrc/org/erights/e/tools/args/argParserCya.updoc:214:55:    >     def columnSizes := ([0] * numColumns).diverge(int)
~/efoo/src/esrc/org/erights/e/tools/args/argParserCya.updoc:217:53:    >             columnSizes[column] max= (cell.size())
~/efoo/src/esrc/org/erights/e/tools/args/argParserCya.updoc:223:64:    >             def pad := 2 + columnSizes[column] - cell.size()
~/efoo/src/esrc/org/erights/e/tools/args/argParserCya.updoc:250:38:    ? def append(outMap, key, value) :void {
~/efoo/src/esrc/org/erights/e/tools/args/argParserCya.updoc:253:43:    >             def k := key.getOptString()
~/efoo/src/esrc/org/erights/e/tools/args/argParserCya.updoc:254:41:    >             outMap[k] := outMap.get(k, []) + [value]
~/efoo/src/esrc/org/erights/e/tools/args/argParserCya.updoc:279:33:    >                 throw.eject(complaintDept,
~/efoo/src/esrc/org/erights/e/tools/args/makeCapExporter.updoc:1:0:    ? def makeCapExporter := <import:org.erights.e.tools.args.makeCapExporter>
~/efoo/src/esrc/org/erights/e/tools/args/makeCapExporter.updoc:15:25:    ? introducer.onTheAir()
~/efoo/src/esrc/org/erights/e/tools/args/makeCapExporter.updoc:25:38:    >     to connect(ref :SturdyRef) :void {
~/efoo/src/esrc/org/erights/e/tools/args/makeCapExporter.updoc:26:35:    >         bletch := ref.getRcvr()
~/efoo/src/esrc/org/erights/e/tools/args/makeCapExporter.updoc:33:42:    ? exportCap(sr, introducer.sturdyToURI(makeSturdyRef(connector)))
~/efoo/src/esrc/org/erights/e/tools/args/makeCapExporter.updoc:53:26:    ? def x := sr2.getRcvr()
~/efoo/src/esrc/org/erights/e/tools/args/makeCapExporter.updoc:59:17:    ? sr3.getRcvr()
~/efoo/src/esrc/org/erights/e/tools/collect/propUtils.updoc:1:0:# Copyright 2002 Combex, Inc. under the terms of the MIT X license
~/efoo/src/esrc/org/erights/e/tools/collect/propUtils.updoc:7:34:    ? def props := interp.getProps(); null
~/efoo/src/esrc/org/erights/e/tools/collect/propUtils.updoc:8:24:    ? propUtils.testProp(props, "e.bogusFlag")
~/efoo/src/esrc/org/erights/e/tools/collect/propUtils.updoc:11:24:    ? propUtils.testProp(props, "e.version")
~/efoo/src/esrc/org/erights/e/tools/collect/propUtils.updoc:18:24:    ? propUtils.testProp(props, "e.enable.bind")
~/efoo/src/esrc/org/erights/e/tools/collect/propUtils.updoc:21:24:    ? propUtils.testProp(props, "e.enable.auditors")
~/efoo/src/esrc/scripts/ButtonPointer.e:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/ButtonPointer.e:8:25:def complain(complaint) :void {
~/efoo/src/esrc/scripts/ButtonPointer.e:13:16:def trace(msg) :void {
~/efoo/src/esrc/scripts/ButtonPointer.e:14:16:    stderr.print(msg)
~/efoo/src/esrc/scripts/ButtonPointer.e:16:20:def traceline(msg) :void {
~/efoo/src/esrc/scripts/ButtonPointer.e:17:18:    stderr.println(msg)
~/efoo/src/esrc/scripts/ButtonPointer.e:20:39:def editFile(file, varName, newValue) :void {
~/efoo/src/esrc/scripts/ButtonPointer.e:21:19:    if (file.exists()) {
~/efoo/src/esrc/scripts/ButtonPointer.e:22:32:        def text := file.getText()
~/efoo/src/esrc/scripts/ButtonPointer.e:26:24:            file.setText(`$left<!-- #BeginEditable "$varName" -->$newValue<!-- #EndEditable -->$right`)
~/efoo/src/esrc/scripts/ButtonPointer.e:40:31:        def line := tr.readLine()
~/efoo/src/esrc/scripts/ButtonPointer.e:44:33:            def name := line.trim()
~/efoo/src/esrc/scripts/ButtonPointer.e:46:53:                def spaces := line.size() - name.size()
~/efoo/src/esrc/scripts/ButtonPointer.e:66:19:def walkToc(wdir) :void {
~/efoo/src/esrc/scripts/ButtonPointer.e:67:47:    def tocReader := wdir["toc.txt"].textReader()
~/efoo/src/esrc/scripts/ButtonPointer.e:71:16:    def nest() :void {
~/efoo/src/esrc/scripts/ButtonPointer.e:78:18:    def unnest() :void {
~/efoo/src/esrc/scripts/ButtonPointer.e:79:26:        prev.setNextButton(null) # prev has no right sibling
~/efoo/src/esrc/scripts/ButtonPointer.e:81:38:        parent := parent.getParentFile()
~/efoo/src/esrc/scripts/ButtonPointer.e:93:32:            parent.setDownButton(parent[name])
~/efoo/src/esrc/scripts/ButtonPointer.e:107:29:        current.setPrevButton(prev)
~/efoo/src/esrc/scripts/ButtonPointer.e:108:46:        if (prev != null) { prev.setNextButton(current) }
~/efoo/src/esrc/scripts/ButtonPointer.e:109:27:        current.setUpButton(parent)
~/efoo/src/esrc/scripts/ButtonPointer.e:110:29:        current.setDownButton(null)
~/efoo/src/esrc/scripts/ButtonPointer.e:116:29:    var from := filename.size() -1
~/efoo/src/esrc/scripts/ButtonPointer.e:117:25:    if (filename.endsWith("/")) {
~/efoo/src/esrc/scripts/ButtonPointer.e:120:33:    def i := filename.lastIndexOf("/", from)
~/efoo/src/esrc/scripts/ButtonPointer.e:121:49:    [filename(0,i+1), filename(i+1, filename.size())]
~/efoo/src/esrc/scripts/ButtonPointer.e:141:25:    def buf := "".diverge(char)
~/efoo/src/esrc/scripts/ButtonPointer.e:142:31:    while (! (target.startsWith(src))) {
~/efoo/src/esrc/scripts/ButtonPointer.e:144:25:        if (name.endsWith("/")) {
~/efoo/src/esrc/scripts/ButtonPointer.e:145:22:            buf.append("../")
~/efoo/src/esrc/scripts/ButtonPointer.e:149:37:    require(src == "" || src.endsWith("/"),
~/efoo/src/esrc/scripts/ButtonPointer.e:152:14:    buf.append(rest)
~/efoo/src/esrc/scripts/ButtonPointer.e:153:35:    var result := "" + buf.snapshot()
~/efoo/src/esrc/scripts/ButtonPointer.e:154:23:    if (result.endsWith("/")) {
~/efoo/src/esrc/scripts/ButtonPointer.e:188:39:    def file := if (filedir.isDirectory()) {
~/efoo/src/esrc/scripts/ButtonPointer.e:194:57:        to __printOn(out :TextWriter) :void { filedir.__printOn(out) }
~/efoo/src/esrc/scripts/ButtonPointer.e:197:27:            if (file.exists() &&
~/efoo/src/esrc/scripts/ButtonPointer.e:198:30:                  file.getText() =~ `@_<TITLE>@title</TITLE>@_`) {
~/efoo/src/esrc/scripts/ButtonPointer.e:200:36:                result := title.trim()
~/efoo/src/esrc/scripts/ButtonPointer.e:202:27:            if (file.exists() &&
~/efoo/src/esrc/scripts/ButtonPointer.e:203:30:                  file.getText() =~ `@_<title>@title</title>@_`) {
~/efoo/src/esrc/scripts/ButtonPointer.e:205:36:                result := title.trim()
~/efoo/src/esrc/scripts/ButtonPointer.e:209:31:                filedir.getName()
~/efoo/src/esrc/scripts/ButtonPointer.e:214:33:        to setNextButton(wfile) :void {
~/efoo/src/esrc/scripts/ButtonPointer.e:221:56:                def altText := `"On to: ${wfile.getTitle()}"`
~/efoo/src/esrc/scripts/ButtonPointer.e:230:33:        to setPrevButton(wfile) :void {
~/efoo/src/esrc/scripts/ButtonPointer.e:237:58:                def altText := `"Back to: ${wfile.getTitle()}"`
~/efoo/src/esrc/scripts/ButtonPointer.e:246:33:        to setDownButton(wfile) :void {
~/efoo/src/esrc/scripts/ButtonPointer.e:249:60:                def altText := `"1st child: ${wfile.getTitle()}"`
~/efoo/src/esrc/scripts/ButtonPointer.e:258:30:        to setUpButton(wdir) :void {
~/efoo/src/esrc/scripts/ButtonPointer.e:260:34:            def list := [].diverge()
~/efoo/src/esrc/scripts/ButtonPointer.e:262:25:                list.push(dir)
~/efoo/src/esrc/scripts/ButtonPointer.e:267:35:            def levels := list.size()
~/efoo/src/esrc/scripts/ButtonPointer.e:268:33:            def buf := "".diverge(char)
~/efoo/src/esrc/scripts/ButtonPointer.e:269:49:            def adjust := if (filedir.isDirectory()) { 0 } else { 1 }
~/efoo/src/esrc/scripts/ButtonPointer.e:271:26:                buf.append(`/&nbsp;<a href="${
~/efoo/src/esrc/scripts/ButtonPointer.e:275:47:            editFile(file, "Path", buf.snapshot())
~/efoo/src/esrc/scripts/ButtonPointer.e:277:75:        to getParentFile() :any { FileWrapperMaker(<file: filedir.getParent()>) }
~/efoo/src/esrc/scripts/ButtonPointer.e:311:18:if (interp.getArgs() =~ [bind fileName]) {
~/efoo/src/esrc/scripts/ButtonPointer.e:327:29:    println(problem.javaStack())
~/efoo/src/esrc/scripts/ButtonPointer.e:328:26:    println(problem.eStack())
~/efoo/src/esrc/scripts/capBriefer.e-awt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/capBriefer.e-awt:9:35:def traceline(str) :void { stderr.println(str) }
~/efoo/src/esrc/scripts/capBriefer.e-awt:14:55:def briefImage := <swing:ImageIcon>(briefIcon).getImage()
~/efoo/src/esrc/scripts/capBriefer.e-awt:17:23:    result.setIconImage(briefImage)
~/efoo/src/esrc/scripts/capBriefer.e-awt:44:22:    def goPrevious() :void {
~/efoo/src/esrc/scripts/capBriefer.e-awt:45:54:        def currentI := slideListPane.getSelectedIndex()
~/efoo/src/esrc/scripts/capBriefer.e-awt:47:42:            slideListPane.setSelectedIndex(currentI - 1)
~/efoo/src/esrc/scripts/capBriefer.e-awt:51:18:    def goNext() :void {
~/efoo/src/esrc/scripts/capBriefer.e-awt:52:54:        def currentI := slideListPane.getSelectedIndex()
~/efoo/src/esrc/scripts/capBriefer.e-awt:53:55:        if (currentI >= 0 && currentI < (slideList.size() -2)) {
~/efoo/src/esrc/scripts/capBriefer.e-awt:54:42:            slideListPane.setSelectedIndex(currentI + 1)
~/efoo/src/esrc/scripts/capBriefer.e-awt:57:39:    def prevButton := uiTools.newButton(" << ", goPrevious)
~/efoo/src/esrc/scripts/capBriefer.e-awt:58:39:    def nextButton := uiTools.newButton(" >> ", goNext)
~/efoo/src/esrc/scripts/capBriefer.e-awt:59:32:    def spacer1 := uiTools.label(" ")
~/efoo/src/esrc/scripts/capBriefer.e-awt:60:32:    def spacer2 := uiTools.label(" ")
~/efoo/src/esrc/scripts/capBriefer.e-awt:64:24:    viewPane.setEditable(false)
~/efoo/src/esrc/scripts/capBriefer.e-awt:65:27:    viewPane.setContentType("text/html")
~/efoo/src/esrc/scripts/capBriefer.e-awt:66:20:    viewPane.setText("</html></body><h1>capBriefer</h1>version 0.1</body></html>")
~/efoo/src/esrc/scripts/capBriefer.e-awt:68:41:    def mainPane := window.getContentPane()
~/efoo/src/esrc/scripts/capBriefer.e-awt:70:62:    def bind slideListPane := <swing:JList>(slideList.snapshot())
~/efoo/src/esrc/scripts/capBriefer.e-awt:73:32:        to valueChanged(event) :void {
~/efoo/src/esrc/scripts/capBriefer.e-awt:74:59:            viewPane.setPage(slideListPane.getSelectedValue())
~/efoo/src/esrc/scripts/capBriefer.e-awt:78:42:    slideListPane.addListSelectionListener(listSelectionListener)
~/efoo/src/esrc/scripts/capBriefer.e-awt:80:29:    splitter.setLeftComponent(slideListScroller)
~/efoo/src/esrc/scripts/capBriefer.e-awt:81:30:    splitter.setRightComponent(viewScroller)
~/efoo/src/esrc/scripts/capBriefer.e-awt:87:16:    mainPane.add(realPane)
~/efoo/src/esrc/scripts/capBriefer.e-awt:92:48:        to windowClosing() :void {interp.continueAtTop()}
~/efoo/src/esrc/scripts/capBriefer.e-awt:101:34:        to showSlides(slideList) :void {
~/efoo/src/esrc/scripts/capBriefer.e-awt:111:8:c".split("\n")
~/efoo/src/esrc/scripts/capBriefer.e-awt:112:26:def args := interp.getArgs()
~/efoo/src/esrc/scripts/capBriefer.e-awt:113:13:if (args.size() > 0) {
~/efoo/src/esrc/scripts/capBriefer.e-awt:114:48:    slideList := <file: args[0]>.getText().split("\n")
~/efoo/src/esrc/scripts/capBriefer.e-awt:117:18:briefer.showSlides(slideList)
~/efoo/src/esrc/scripts/capBriefer.e-awt:119:17:interp.blockAtTop()
~/efoo/src/esrc/scripts/capDesk.e-awt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/capDesk.e-awt:9:35:def traceline(str) :void { stderr.println(str) }
~/efoo/src/esrc/scripts/capDesk.e-awt:13:77:  <resource:com/skyhunter/capDesk/strings/capDeskHomePath.txt>.getText().trim()
~/efoo/src/esrc/scripts/capDesk.e-awt:32:28:    def bundle := [].diverge()
~/efoo/src/esrc/scripts/capDesk.e-awt:34:40:        to add (thePromise) :void {bundle.push(thePromise)}
~/efoo/src/esrc/scripts/capDesk.e-awt:35:24:        to finishAll() :void {resolver.resolve(promiseAllResolved(bundle))}
~/efoo/src/esrc/scripts/capDesk.e-awt:44:61:            when (E.send(target,verb,args)) -> done(answer) :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:48:28:                solver.smash(`forwarder failed: $prob`)
~/efoo/src/esrc/scripts/capDesk.e-awt:57:21:def bindInstaller() :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:58:84:    bind installer := <import:com.skyhunter.installer.persistentInstallerAuthor>.run(
~/efoo/src/esrc/scripts/capDesk.e-awt:63:23:        interp.getProps(),
~/efoo/src/esrc/scripts/capDesk.e-awt:69:35:def bindPowerboxControllerMaker() :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:70:103:    bind powerboxControllerMaker := <import:com.skyhunter.e.security.powerboxControllerMakerAuthor>.run(
~/efoo/src/esrc/scripts/capDesk.e-awt:75:32:def bindNavigatorWindowMaker() :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:92:40:            myFtController.getANavigator()
~/efoo/src/esrc/scripts/capDesk.e-awt:109:89:                                                initialNavWindow.makeFileProgressObserver("Copying " + fileName, farToFile),
~/efoo/src/esrc/scripts/capDesk.e-awt:111:38:    when (copiedVow) -> done(result) :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:114:61:        traceline("copyaction failure: " + prob + prob.eStack())
~/efoo/src/esrc/scripts/capDesk.e-awt:127:52:    def copyBase(farFromFile, farToFile, fileName) :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:128:48:        copyVows.add(copySequencer.makeActionVow([copyAction, "run", [farFromFile, farToFile, fileName]]))
~/efoo/src/esrc/scripts/capDesk.e-awt:131:48:    when (filesDirsPromise) -> done(filesDirs) :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:136:66:            when (nextToFile <- exists()) -> doneNext(doesExist) :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:138:78:                    def shouldCopy := overwriteAnswerer.promiseOverwriteAnswer(each)
~/efoo/src/esrc/scripts/capDesk.e-awt:139:66:                    when (shouldCopy) -> doneCopy(copyFulfilled) :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:149:26:        copyVows.finishAll()
~/efoo/src/esrc/scripts/capDesk.e-awt:151:26:    copyVows.promiseFinish()
~/efoo/src/esrc/scripts/capDesk.e-awt:161:29:    def fillWhenDirExists() :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:167:42:        when (dirPath) -> done(dirPathR) :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:172:26:            resolver.smash("dead dir: "+ err)
~/efoo/src/esrc/scripts/capDesk.e-awt:192:91:            to isProperSubDir() :any {dirCanonicalPath.toLowerCase() == dirPath.toLowerCase()}
~/efoo/src/esrc/scripts/capDesk.e-awt:206:90:    to paste(farFromFiles, fromDiskNavigator, initialToDiskNavigator, toNavigatorWindow) :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:210:67:        def myOverwriter := toNavigatorWindow.makeOverwriteAnswerer()
~/efoo/src/esrc/scripts/capDesk.e-awt:215:23:            allDone.add(nextCopyPromise)
~/efoo/src/esrc/scripts/capDesk.e-awt:216:43:            when (isDir) -> done1(isDirR) :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:218:58:                    def nextPromise := paster.copyDirBegin(each,
~/efoo/src/esrc/scripts/capDesk.e-awt:222:55:                    def nextPromise := paster.pasteFile(each,
~/efoo/src/esrc/scripts/capDesk.e-awt:228:25:        allDone.finishAll()
~/efoo/src/esrc/scripts/capDesk.e-awt:229:52:        when (allDone.promiseFinish()) -> done3(p) :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:231:37:            toNavigatorWindow.refresh()
~/efoo/src/esrc/scripts/capDesk.e-awt:233:37:            toNavigatorWindow.refresh()
~/efoo/src/esrc/scripts/capDesk.e-awt:234:46:            initialNavWindow.connectionWarning("Some files may not have been copy/pasted.\n" + err)
~/efoo/src/esrc/scripts/capDesk.e-awt:240:42:        def startCopyTo(target,fromName) :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:242:59:            def finalPromise := copySequencer.makeActionVow(
~/efoo/src/esrc/scripts/capDesk.e-awt:245:45:            when (finalPromise) -> done4(p) :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:251:51:        when (fromNamePromise) -> done5(fromName) :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:255:60:            when (target <- exists()) -> done2(fileExists) :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:259:69:                    def result := <swing:JOptionPane>.showInputDialog (null,
~/efoo/src/esrc/scripts/capDesk.e-awt:262:107:                                                                       <swing:JOptionPane>.QUESTION_MESSAGE(), null, null, fromName + "")
~/efoo/src/esrc/scripts/capDesk.e-awt:278:55:        } catch err {initialNavWindow.connectionWarning(err)}
~/efoo/src/esrc/scripts/capDesk.e-awt:286:73:        traceline("is proper subdir " + (marshalledFromDir.isProperSubDir()))
~/efoo/src/esrc/scripts/capDesk.e-awt:288:116:        if ((! (createdDirPaths.contains(marshalledFromDir.getCanonicalPath()))) && marshalledFromDir.isProperSubDir()) {
~/efoo/src/esrc/scripts/capDesk.e-awt:290:41:            if (! (marshalledToDir.exists())) {
~/efoo/src/esrc/scripts/capDesk.e-awt:291:40:                marshalledToDir.makeSelf()
~/efoo/src/esrc/scripts/capDesk.e-awt:293:69:                createdDirPaths.push(marshalledToDir.getCanonicalPath())
~/efoo/src/esrc/scripts/capDesk.e-awt:295:103:            copyVows.add(copyFiles(marshalledFromDir.getDirNavigator(), marshalledToDir.getDirNavigator(),overwriteAnswerer))
~/efoo/src/esrc/scripts/capDesk.e-awt:296:69:            def filesDirsPromise := marshalledFromDir.getDirNavigator() <- listCurrentSubdirectoriesAndFiles()
~/efoo/src/esrc/scripts/capDesk.e-awt:297:57:            when (filesDirsPromise) -> done6(filesDirs) :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:302:32:                    copyVows.add(subDirPromise)
~/efoo/src/esrc/scripts/capDesk.e-awt:303:77:                    def fromSubNavigator := marshalledFromDir.getDirNavigator()
~/efoo/src/esrc/scripts/capDesk.e-awt:305:73:                    def toSubNavigator := marshalledToDir.getDirNavigator()
~/efoo/src/esrc/scripts/capDesk.e-awt:308:61:                    when (dirsReadyVow) -> done7(dirsReady) :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:309:71:                        subDirResolver.resolve(paster.copyDirCautiously (marshalledFromSubDir,  marshalledToSubDir, createdDirPaths, overwriteAnswerer))
~/efoo/src/esrc/scripts/capDesk.e-awt:311:58:                        initialNavWindow.connectionWarning(e)
~/efoo/src/esrc/scripts/capDesk.e-awt:312:44:                        subDirResolver.smash("Couldn't connect to directory: " + e)
~/efoo/src/esrc/scripts/capDesk.e-awt:315:34:                copyVows.finishAll()
~/efoo/src/esrc/scripts/capDesk.e-awt:317:34:        } else {copyVows.finishAll()}
~/efoo/src/esrc/scripts/capDesk.e-awt:318:30:        copyVows.promiseFinish()
~/efoo/src/esrc/scripts/capDesk.e-awt:323:41:        def createdDirPaths := [].diverge()
~/efoo/src/esrc/scripts/capDesk.e-awt:325:43:        when (fromDir) -> done8(fromDirR) :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:326:69:            def farToDir := farToDisk <- getFileNamed(fromDir.getName())
~/efoo/src/esrc/scripts/capDesk.e-awt:328:43:            when (toDir) -> done9(toDirR) :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:329:59:                def copyPromise := paster.copyDirCautiously (fromDir, toDir, createdDirPaths, overwriteAnswerer)
~/efoo/src/esrc/scripts/capDesk.e-awt:332:45:                dirCopyCompleteResolver.smash("Lost connection: " +err2)
~/efoo/src/esrc/scripts/capDesk.e-awt:333:50:                initialNavWindow.connectionWarning(err2)
~/efoo/src/esrc/scripts/capDesk.e-awt:341:34:    def map := [].asKeys().diverge()
~/efoo/src/esrc/scripts/capDesk.e-awt:343:31:    if (<file:~/Desktop>.exists()) {
~/efoo/src/esrc/scripts/capDesk.e-awt:344:56:        map["home"] := <file:~/Desktop>.getCanonicalPath()
~/efoo/src/esrc/scripts/capDesk.e-awt:346:49:        map["home"] := <file:~/>.getCanonicalPath()
~/efoo/src/esrc/scripts/capDesk.e-awt:357:41:def setConfigFromCommandLine(configMap) :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:358:37:    def commandArgs := interp.getArgs()
~/efoo/src/esrc/scripts/capDesk.e-awt:362:24:    if (commandArgs.size() > 3) {configMap["capabilityFile"] := commandArgs[3]}
~/efoo/src/esrc/scripts/capDesk.e-awt:363:24:    if (commandArgs.size() >4) {
~/efoo/src/esrc/scripts/capDesk.e-awt:366:24:    if (commandArgs.size() > 5 && commandArgs[5] != "write") {
~/efoo/src/esrc/scripts/capDesk.e-awt:368:73:        configMap["virtualRoot"] := configMap["virtualRoot"].deepReadOnly()
~/efoo/src/esrc/scripts/capDesk.e-awt:378:45:def setConfigFromFile(configFile,configMap) :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:379:25:    if (configFile.exists()) {
~/efoo/src/esrc/scripts/capDesk.e-awt:405:37:    def commandArgs := interp.getArgs()
~/efoo/src/esrc/scripts/capDesk.e-awt:407:24:    if (commandArgs.size() > 1) {setConfigFromCommandLine(configMap)}
~/efoo/src/esrc/scripts/capDesk.e-awt:408:24:    if (commandArgs.size() < 1) {setConfigFromFile(<file:capdesk.conf>, configMap)}
~/efoo/src/esrc/scripts/capDesk.e-awt:409:24:    if (commandArgs.size() == 1) {setConfigFromFile(<file: commandArgs[0]>, configMap)}
~/efoo/src/esrc/scripts/capDesk.e-awt:419:34:        if (! (identityFile.exists())) {
~/efoo/src/esrc/scripts/capDesk.e-awt:421:52:            def keyPair := introducer.newVatIdentity()
~/efoo/src/esrc/scripts/capDesk.e-awt:422:31:            introducer.onTheAir()
~/efoo/src/esrc/scripts/capDesk.e-awt:423:52:            def netConfig := introducer.getNetConfig()
~/efoo/src/esrc/scripts/capDesk.e-awt:434:35:            introducer.setNetConfig(netConfig)
~/efoo/src/esrc/scripts/capDesk.e-awt:435:37:            introducer.setVatIdentity(keyPair)
~/efoo/src/esrc/scripts/capDesk.e-awt:436:31:            introducer.onTheAir()
~/efoo/src/esrc/scripts/capDesk.e-awt:442:41:        def cap := introducer.sturdyToURI(sturdyConn)
~/efoo/src/esrc/scripts/capDesk.e-awt:444:23:        capFile.setText(cap)
~/efoo/src/esrc/scripts/capDesk.e-awt:452:27:        introducer.onTheAir()
~/efoo/src/esrc/scripts/capDesk.e-awt:456:29:    def buildNavWindow(uri) :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:458:46:        def connector:= uriTools.promiseObject(uri)
~/efoo/src/esrc/scripts/capDesk.e-awt:462:48:        when (versionPromise) -> done(version) :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:467:50:                initialNavWindow.connectionWarning("Wrong Version")
~/efoo/src/esrc/scripts/capDesk.e-awt:470:46:            initialNavWindow.connectionWarning("Remote Navigator Not Acquired\n"  + err)
~/efoo/src/esrc/scripts/capDesk.e-awt:475:57:        to copyFrom(fromFilePromises,fromDiskNavigator) :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:480:52:        to paste(toDiskNavigator, navigatorWindow) :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:482:24:            paster.paste(copyBuffer, copyBufferDiskNavigator, toDiskNavigator, navigatorWindow)
~/efoo/src/esrc/scripts/capDesk.e-awt:488:25:        to openRemote() :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:489:62:            def uri := initialNavWindow.getRemoteConnectionURI()
~/efoo/src/esrc/scripts/capDesk.e-awt:494:35:        to openEdesk(filePromise) :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:496:38:            when (uri) -> done(uriR) :void {
~/efoo/src/esrc/scripts/capDesk.e-awt:499:50:                initialNavWindow.connectionWarning("No Edesk server")
~/efoo/src/esrc/scripts/capDesk.e-awt:507:17:interp.blockAtTop()
~/efoo/src/esrc/scripts/capDesk.e-swt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/capDesk.e-swt:9:35:def traceline(str) :void { stderr.println(str) }
~/efoo/src/esrc/scripts/capDesk.e-swt:12:99:def capDeskHomePath :=  <resource:com/skyhunter/capDesk/strings/capDeskHomePath.txt>.getText().trim()
~/efoo/src/esrc/scripts/capDesk.e-swt:30:28:    def bundle := [].diverge()
~/efoo/src/esrc/scripts/capDesk.e-swt:32:40:        to add (thePromise) :void {bundle.push(thePromise)}
~/efoo/src/esrc/scripts/capDesk.e-swt:33:24:        to finishAll() :void {resolver.resolve(promiseAllResolved(bundle))}
~/efoo/src/esrc/scripts/capDesk.e-swt:42:61:            when (E.send(target,verb,args)) -> done(answer) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:46:28:                solver.smash(`forwarder failed: $prob`)
~/efoo/src/esrc/scripts/capDesk.e-swt:55:21:def bindInstaller() :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:56:84:    bind installer := <import:com.skyhunter.installer.persistentInstallerAuthor>.run(
~/efoo/src/esrc/scripts/capDesk.e-swt:61:23:        interp.getProps(),
~/efoo/src/esrc/scripts/capDesk.e-swt:67:35:def bindPowerboxControllerMaker() :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:68:103:    bind powerboxControllerMaker := <import:com.skyhunter.e.security.powerboxControllerMakerAuthor>.run(
~/efoo/src/esrc/scripts/capDesk.e-swt:73:32:def bindNavigatorWindowMaker() :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:90:40:            myFtController.getANavigator()
~/efoo/src/esrc/scripts/capDesk.e-swt:107:89:                                                initialNavWindow.makeFileProgressObserver("Copying " + fileName, farToFile),
~/efoo/src/esrc/scripts/capDesk.e-swt:109:38:    when (copiedVow) -> done(result) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:112:61:        traceline("copyaction failure: " + prob + prob.eStack())
~/efoo/src/esrc/scripts/capDesk.e-swt:125:52:    def copyBase(farFromFile, farToFile, fileName) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:126:48:        copyVows.add(copySequencer.makeActionVow([copyAction, "run", [farFromFile, farToFile, fileName]]))
~/efoo/src/esrc/scripts/capDesk.e-swt:129:48:    when (filesDirsPromise) -> done(filesDirs) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:134:66:            when (nextToFile <- exists()) -> doneNext(doesExist) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:136:78:                    def shouldCopy := overwriteAnswerer.promiseOverwriteAnswer(each)
~/efoo/src/esrc/scripts/capDesk.e-swt:137:66:                    when (shouldCopy) -> doneCopy(copyFulfilled) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:147:26:        copyVows.finishAll()
~/efoo/src/esrc/scripts/capDesk.e-swt:149:26:    copyVows.promiseFinish()
~/efoo/src/esrc/scripts/capDesk.e-swt:159:29:    def fillWhenDirExists() :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:165:42:        when (dirPath) -> done(dirPathR) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:170:26:            resolver.smash("dead dir: "+ err)
~/efoo/src/esrc/scripts/capDesk.e-swt:190:91:            to isProperSubDir() :any {dirCanonicalPath.toLowerCase() == dirPath.toLowerCase()}
~/efoo/src/esrc/scripts/capDesk.e-swt:204:90:    to paste(farFromFiles, fromDiskNavigator, initialToDiskNavigator, toNavigatorWindow) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:208:67:        def myOverwriter := toNavigatorWindow.makeOverwriteAnswerer()
~/efoo/src/esrc/scripts/capDesk.e-swt:213:23:            allDone.add(nextCopyPromise)
~/efoo/src/esrc/scripts/capDesk.e-swt:214:43:            when (isDir) -> done1(isDirR) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:216:58:                    def nextPromise := paster.copyDirBegin(each,
~/efoo/src/esrc/scripts/capDesk.e-swt:220:55:                    def nextPromise := paster.pasteFile(each,
~/efoo/src/esrc/scripts/capDesk.e-swt:226:25:        allDone.finishAll()
~/efoo/src/esrc/scripts/capDesk.e-swt:227:52:        when (allDone.promiseFinish()) -> done3(p) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:229:37:            toNavigatorWindow.refresh()
~/efoo/src/esrc/scripts/capDesk.e-swt:231:37:            toNavigatorWindow.refresh()
~/efoo/src/esrc/scripts/capDesk.e-swt:232:46:            initialNavWindow.connectionWarning("Some files may not have been copy/pasted.\n" + err)
~/efoo/src/esrc/scripts/capDesk.e-swt:238:42:        def startCopyTo(target,fromName) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:240:59:            def finalPromise := copySequencer.makeActionVow(
~/efoo/src/esrc/scripts/capDesk.e-swt:243:45:            when (finalPromise) -> done4(p) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:249:51:        when (fromNamePromise) -> done5(fromName) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:253:60:            when (target <- exists()) -> done2(fileExists) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:258:61:                    def box := initialNavWindow.makeDialogVow("File " + fromName  + " already exists",
~/efoo/src/esrc/scripts/capDesk.e-swt:263:91:                        box <- optEnteredText()) -> doneFilename(buttonText, enteredText) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:264:73:                        if (buttonText == confirmText && enteredText.size() > 0) {
~/efoo/src/esrc/scripts/capDesk.e-swt:278:55:        } catch err {initialNavWindow.connectionWarning(err)}
~/efoo/src/esrc/scripts/capDesk.e-swt:286:73:        traceline("is proper subdir " + (marshalledFromDir.isProperSubDir()))
~/efoo/src/esrc/scripts/capDesk.e-swt:288:116:        if ((! (createdDirPaths.contains(marshalledFromDir.getCanonicalPath()))) && marshalledFromDir.isProperSubDir()) {
~/efoo/src/esrc/scripts/capDesk.e-swt:290:41:            if (! (marshalledToDir.exists())) {
~/efoo/src/esrc/scripts/capDesk.e-swt:291:40:                marshalledToDir.makeSelf()
~/efoo/src/esrc/scripts/capDesk.e-swt:293:69:                createdDirPaths.push(marshalledToDir.getCanonicalPath())
~/efoo/src/esrc/scripts/capDesk.e-swt:295:103:            copyVows.add(copyFiles(marshalledFromDir.getDirNavigator(), marshalledToDir.getDirNavigator(),overwriteAnswerer))
~/efoo/src/esrc/scripts/capDesk.e-swt:296:69:            def filesDirsPromise := marshalledFromDir.getDirNavigator() <- listCurrentSubdirectoriesAndFiles()
~/efoo/src/esrc/scripts/capDesk.e-swt:297:57:            when (filesDirsPromise) -> done6(filesDirs) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:302:32:                    copyVows.add(subDirPromise)
~/efoo/src/esrc/scripts/capDesk.e-swt:303:77:                    def fromSubNavigator := marshalledFromDir.getDirNavigator()
~/efoo/src/esrc/scripts/capDesk.e-swt:305:73:                    def toSubNavigator := marshalledToDir.getDirNavigator()
~/efoo/src/esrc/scripts/capDesk.e-swt:308:61:                    when (dirsReadyVow) -> done7(dirsReady) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:309:71:                        subDirResolver.resolve(paster.copyDirCautiously (marshalledFromSubDir,  marshalledToSubDir, createdDirPaths, overwriteAnswerer))
~/efoo/src/esrc/scripts/capDesk.e-swt:311:58:                        initialNavWindow.connectionWarning(e)
~/efoo/src/esrc/scripts/capDesk.e-swt:312:44:                        subDirResolver.smash("Couldn't connect to directory: " + e)
~/efoo/src/esrc/scripts/capDesk.e-swt:315:34:                copyVows.finishAll()
~/efoo/src/esrc/scripts/capDesk.e-swt:317:34:        } else {copyVows.finishAll()}
~/efoo/src/esrc/scripts/capDesk.e-swt:318:30:        copyVows.promiseFinish()
~/efoo/src/esrc/scripts/capDesk.e-swt:323:41:        def createdDirPaths := [].diverge()
~/efoo/src/esrc/scripts/capDesk.e-swt:325:43:        when (fromDir) -> done8(fromDirR) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:326:69:            def farToDir := farToDisk <- getFileNamed(fromDir.getName())
~/efoo/src/esrc/scripts/capDesk.e-swt:328:43:            when (toDir) -> done9(toDirR) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:329:59:                def copyPromise := paster.copyDirCautiously (fromDir, toDir, createdDirPaths, overwriteAnswerer)
~/efoo/src/esrc/scripts/capDesk.e-swt:332:45:                dirCopyCompleteResolver.smash("Lost connection: " +err2)
~/efoo/src/esrc/scripts/capDesk.e-swt:333:50:                initialNavWindow.connectionWarning(err2)
~/efoo/src/esrc/scripts/capDesk.e-swt:341:34:    def map := [].asKeys().diverge()
~/efoo/src/esrc/scripts/capDesk.e-swt:343:31:    if (<file:~/Desktop>.exists()) {
~/efoo/src/esrc/scripts/capDesk.e-swt:344:56:        map["home"] := <file:~/Desktop>.getCanonicalPath()
~/efoo/src/esrc/scripts/capDesk.e-swt:346:49:        map["home"] := <file:~/>.getCanonicalPath()
~/efoo/src/esrc/scripts/capDesk.e-swt:357:41:def setConfigFromCommandLine(configMap) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:358:37:    def commandArgs := interp.getArgs()
~/efoo/src/esrc/scripts/capDesk.e-swt:362:24:    if (commandArgs.size() > 3) {configMap["capabilityFile"] := commandArgs[3]}
~/efoo/src/esrc/scripts/capDesk.e-swt:363:24:    if (commandArgs.size() >4) {
~/efoo/src/esrc/scripts/capDesk.e-swt:366:24:    if (commandArgs.size() > 5 && commandArgs[5] != "write") {
~/efoo/src/esrc/scripts/capDesk.e-swt:368:73:        configMap["virtualRoot"] := configMap["virtualRoot"].deepReadOnly()
~/efoo/src/esrc/scripts/capDesk.e-swt:378:45:def setConfigFromFile(configFile,configMap) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:379:25:    if (configFile.exists()) {
~/efoo/src/esrc/scripts/capDesk.e-swt:405:37:    def commandArgs := interp.getArgs()
~/efoo/src/esrc/scripts/capDesk.e-swt:407:24:    if (commandArgs.size() > 1) {setConfigFromCommandLine(configMap)}
~/efoo/src/esrc/scripts/capDesk.e-swt:408:24:    if (commandArgs.size() < 1) {setConfigFromFile(<file:capdesk.conf>, configMap)}
~/efoo/src/esrc/scripts/capDesk.e-swt:409:24:    if (commandArgs.size() == 1) {setConfigFromFile(<file: commandArgs[0]>, configMap)}
~/efoo/src/esrc/scripts/capDesk.e-swt:418:34:        if (! (identityFile.exists())) {
~/efoo/src/esrc/scripts/capDesk.e-swt:420:52:            def keyPair := introducer.newVatIdentity()
~/efoo/src/esrc/scripts/capDesk.e-swt:421:31:            introducer.onTheAir()
~/efoo/src/esrc/scripts/capDesk.e-swt:422:52:            def netConfig := introducer.getNetConfig()
~/efoo/src/esrc/scripts/capDesk.e-swt:433:35:            introducer.setNetConfig(netConfig)
~/efoo/src/esrc/scripts/capDesk.e-swt:434:37:            introducer.setVatIdentity(keyPair)
~/efoo/src/esrc/scripts/capDesk.e-swt:435:31:            introducer.onTheAir()
~/efoo/src/esrc/scripts/capDesk.e-swt:441:41:        def cap := introducer.sturdyToURI(sturdyConn)
~/efoo/src/esrc/scripts/capDesk.e-swt:443:23:        capFile.setText(cap)
~/efoo/src/esrc/scripts/capDesk.e-swt:452:27:        introducer.onTheAir()
~/efoo/src/esrc/scripts/capDesk.e-swt:456:29:    def buildNavWindow(uri) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:458:46:        def connector:= uriTools.promiseObject(uri)
~/efoo/src/esrc/scripts/capDesk.e-swt:462:48:        when (versionPromise) -> done(version) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:467:50:                initialNavWindow.connectionWarning("Wrong Version")
~/efoo/src/esrc/scripts/capDesk.e-swt:470:46:            initialNavWindow.connectionWarning("Remote Navigator Not Acquired\n"  + err)
~/efoo/src/esrc/scripts/capDesk.e-swt:475:57:        to copyFrom(fromFilePromises,fromDiskNavigator) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:480:52:        to paste(toDiskNavigator, navigatorWindow) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:482:24:            paster.paste(copyBuffer, copyBufferDiskNavigator, toDiskNavigator, navigatorWindow)
~/efoo/src/esrc/scripts/capDesk.e-swt:488:25:        to openRemote() :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:489:62:            def uri := initialNavWindow.getRemoteConnectionURI()
~/efoo/src/esrc/scripts/capDesk.e-swt:494:35:        to openEdesk(filePromise) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:496:38:            when (uri) -> done(uriR) :void {
~/efoo/src/esrc/scripts/capDesk.e-swt:499:50:                initialNavWindow.connectionWarning("No Edesk server")
~/efoo/src/esrc/scripts/capDesk.e-swt:507:17:interp.blockAtTop()
~/efoo/src/esrc/scripts/capletLauncher.e-awt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/capletLauncher.e-awt:9:35:def traceline(str) :void { stderr.println(str) }
~/efoo/src/esrc/scripts/capletLauncher.e-awt:13:52:    def image := <swing:ImageIcon>(iconURL).getImage()
~/efoo/src/esrc/scripts/capletLauncher.e-awt:17:30:            frame.setIconImage(image)
~/efoo/src/esrc/scripts/capletLauncher.e-awt:52:78:  <resource:com/skyhunter/capDesk/strings/installedAppsDir.txt>.getText().trim()
~/efoo/src/esrc/scripts/capletLauncher.e-awt:55:41:if (! (appsDir.exists())) {appsDir.mkdirs()}
~/efoo/src/esrc/scripts/capletLauncher.e-awt:56:107:def appsDescPath :=  appsDirPath + <resource:com/skyhunter/capDesk/strings/appsDescFile.txt>.getText().trim()
~/efoo/src/esrc/scripts/capletLauncher.e-awt:59:52:if (! (appsDescFile.exists())) {appsDescFile.setText("<installed></installed>" )}
~/efoo/src/esrc/scripts/capletLauncher.e-awt:83:90:        var appDesc := installedAppsManager.optAppBySourcePath(sourceFile.getCanonicalPath())
~/efoo/src/esrc/scripts/capletLauncher.e-awt:84:49:        if (appDesc == null) {appDesc := [].asMap()}
~/efoo/src/esrc/scripts/capletLauncher.e-awt:88:28:            if (appDesc.maps("Icon")) {
~/efoo/src/esrc/scripts/capletLauncher.e-awt:92:38:                if (! (iconfile.exists())) {
~/efoo/src/esrc/scripts/capletLauncher.e-awt:95:35:                if (iconfile.exists()) {
~/efoo/src/esrc/scripts/capletLauncher.e-awt:96:95:                    image := <swing:ImageIcon>(<fileURL: iconfile.getCanonicalPath()>).getImage()
~/efoo/src/esrc/scripts/capletLauncher.e-awt:104:56:        def canonicalPath := sourceFile.getCanonicalPath()
~/efoo/src/esrc/scripts/capletLauncher.e-awt:107:24:        if (appDesc.maps("RunPath")) {
~/efoo/src/esrc/scripts/capletLauncher.e-awt:108:57:            capsXml := <file: appDesc["RunPath"]>.getText()
~/efoo/src/esrc/scripts/capletLauncher.e-awt:112:23:            appDesc.get("Name", canonicalPath),
~/efoo/src/esrc/scripts/capletLauncher.e-awt:115:49:        def box := powerboxController.getPowerbox()
~/efoo/src/esrc/scripts/capletLauncher.e-awt:117:63:        powerboxController.setCap(box.DOC_SUFFIX(), appDesc.get("Suffix", null))
~/efoo/src/esrc/scripts/capletLauncher.e-awt:119:55:        powerboxController.setCap(box.INITIAL_DOC_RCVRS(), docRcvrs)
~/efoo/src/esrc/scripts/capletLauncher.e-awt:120:45:        powerboxController.addPowerboxReactor( def obs{
~/efoo/src/esrc/scripts/capletLauncher.e-awt:121:37:            to reactToExitRequest() :void {
~/efoo/src/esrc/scripts/capletLauncher.e-awt:126:37:        powerboxController.launchFile(sourceFile)
~/efoo/src/esrc/scripts/capletLauncher.e-awt:132:33:def commandArgs := interp.getArgs()
~/efoo/src/esrc/scripts/capletLauncher.e-awt:133:20:if (commandArgs.size() == 0) {
~/efoo/src/esrc/scripts/capletLauncher.e-awt:139:38:    when (finishVow) -> done(finish) :void {
~/efoo/src/esrc/scripts/capletLauncher.e-awt:140:28:        interp.continueAtTop()
~/efoo/src/esrc/scripts/capletLauncher.e-awt:148:35:    for each in 1..commandArgs.size() -1 {
~/efoo/src/esrc/scripts/copyOnly.e:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/copyOnly.e:6:29:def copyOnly(old, new, ext) :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/eBrowser.e-awt:11:54:def eLogoImage := <swing:ImageIcon>(eLogoURL).getImage()
~/efoo/src/esrc/scripts/eBrowser.e-awt:15:27:        result.setIconImage(eLogoImage)
~/efoo/src/esrc/scripts/eBrowser.e-awt:37:57:  <unsafe:org.quasiliteral.syntax.SyntaxException>.asType()
~/efoo/src/esrc/scripts/eBrowser.e-awt:44:35:def traceline(str) :void { stderr.println(str) }
~/efoo/src/esrc/scripts/eBrowser.e-awt:57:41:if (! (homeDir.exists())) {homeDir.mkdirs()}
~/efoo/src/esrc/scripts/eBrowser.e-awt:59:64:if (! (importsRootDirConf.exists())) {importsRootDirConf.setText("")}
~/efoo/src/esrc/scripts/eBrowser.e-awt:61:25:def setOptImportsRoot() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:63:63:    def importsRootDirPath := importsRootDirConf.getText().trim()
~/efoo/src/esrc/scripts/eBrowser.e-awt:64:31:    if (importsRootDirPath.size() > 0) {optImportsRoot := <file: importsRootDirPath>}
~/efoo/src/esrc/scripts/eBrowser.e-awt:83:36:def windowSet := [].asKeys().diverge()
~/efoo/src/esrc/scripts/eBrowser.e-awt:86:44:    def mainPane := mainFrame.getContentPane()
~/efoo/src/esrc/scripts/eBrowser.e-awt:88:22:    mainPane.setLayout(border)
~/efoo/src/esrc/scripts/eBrowser.e-awt:91:33:        to windowClosing(event) :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:92:46:            windowClosingHandler.windowClosing()
~/efoo/src/esrc/scripts/eBrowser.e-awt:94:32:        to windowClosed(event) :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:95:31:            windowSet.removeKey(mainFrame)
~/efoo/src/esrc/scripts/eBrowser.e-awt:96:30:            if (windowSet.size() == 0) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:97:36:                interp.continueAtTop()
~/efoo/src/esrc/scripts/eBrowser.e-awt:102:31:    mainFrame.addWindowListener(windowListener)
~/efoo/src/esrc/scripts/eBrowser.e-awt:111:61:def replaceSelectionHilite(mainPane, textPane, replacement) :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:112:46:    def location := textPane.getSelectionStart()
~/efoo/src/esrc/scripts/eBrowser.e-awt:113:29:    textPane.replaceSelection(replacement)
~/efoo/src/esrc/scripts/eBrowser.e-awt:114:29:    textPane.setCaretPosition(location)
~/efoo/src/esrc/scripts/eBrowser.e-awt:115:58:    textPane.moveCaretPosition(location + replacement.size())
~/efoo/src/esrc/scripts/eBrowser.e-awt:116:33:    <awt:Component>.transferFocus([mainPane], textPane)
~/efoo/src/esrc/scripts/eBrowser.e-awt:119:19:def popAboutBox() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:136:31:    def runnables := [].diverge()
~/efoo/src/esrc/scripts/eBrowser.e-awt:137:21:    if (folder.exists()) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:139:28:            if (each.getName() =~ `@menuLabel.$suffix`) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:140:30:                runnables.push(`$menuLabel.$suffix`)
~/efoo/src/esrc/scripts/eBrowser.e-awt:144:22:    runnables.snapshot()
~/efoo/src/esrc/scripts/eBrowser.e-awt:147:35:def openFiles := [].asMap().diverge()
~/efoo/src/esrc/scripts/eBrowser.e-awt:165:51:    def funcsChangedAlertList := [].asMap().diverge()
~/efoo/src/esrc/scripts/eBrowser.e-awt:166:67:    def current() :any {<unsafe:java.lang.System>.currentTimeMillis()}
~/efoo/src/esrc/scripts/eBrowser.e-awt:167:36:    var myText := browseFile.getText()
~/efoo/src/esrc/scripts/eBrowser.e-awt:169:50:    var myTimeLastSaved := browseFile.lastModified()
~/efoo/src/esrc/scripts/eBrowser.e-awt:177:30:            browseFile.getName()
~/efoo/src/esrc/scripts/eBrowser.e-awt:180:39:            browseFile.getCanonicalPath()
~/efoo/src/esrc/scripts/eBrowser.e-awt:184:56:        to addFuncsChangedAlertRecipient(vowRecipient) :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:185:52:            when (vowRecipient) -> done(recipient) :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:189:56:        to removeFuncsChangedAlertRecipient(recipient) :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:190:43:            funcsChangedAlertList.removeKey(recipient)
~/efoo/src/esrc/scripts/eBrowser.e-awt:192:29:        to setText(newText) :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:196:76:        to setLines(outlineList,outlineIndices,varLineList,varLineIndices) :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:201:64:            for each in funcsChangedAlertList {each.linesChanged()}
~/efoo/src/esrc/scripts/eBrowser.e-awt:212:19:        to save() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:213:30:            browseFile.setText(myText)
~/efoo/src/esrc/scripts/eBrowser.e-awt:214:54:            myTimeLastSaved := browseFile.lastModified()
~/efoo/src/esrc/scripts/eBrowser.e-awt:216:29:        to saveAs(filePath) :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:218:63:                openFiles.removeKey(browseFile.getCanonicalPath())
~/efoo/src/esrc/scripts/eBrowser.e-awt:221:26:            textModel.save()
~/efoo/src/esrc/scripts/eBrowser.e-awt:223:45:        to replaceStubFile(replacementFile) :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:229:53:            myTimeLastSaved < browseFile.lastModified()
~/efoo/src/esrc/scripts/eBrowser.e-awt:232:40:            myText := browseFile.getText()
~/efoo/src/esrc/scripts/eBrowser.e-awt:233:54:            myTimeLastSaved := browseFile.lastModified()
~/efoo/src/esrc/scripts/eBrowser.e-awt:237:36:        to resetSaveTimeNoReload() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:238:54:            myTimeLastSaved := browseFile.lastModified()
~/efoo/src/esrc/scripts/eBrowser.e-awt:240:20:        to close() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:241:89:            if (browseFile != dummyFile) {openFiles.removeKey(browseFile.getCanonicalPath())}
~/efoo/src/esrc/scripts/eBrowser.e-awt:262:22:    resultPane.setText("Executing...")
~/efoo/src/esrc/scripts/eBrowser.e-awt:274:31:            result := tree.eval(scope1)
~/efoo/src/esrc/scripts/eBrowser.e-awt:276:29:            resultPane.append("\n# value: " + result)
~/efoo/src/esrc/scripts/eBrowser.e-awt:279:29:            resultPane.append(`Error: ${"\n"}$problem`)
~/efoo/src/esrc/scripts/eBrowser.e-awt:288:34:    def problemReporter(problem) :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:289:54:        resultPane.setText(("\n" + problem).replaceAll("\n", "\n# "))
~/efoo/src/esrc/scripts/eBrowser.e-awt:290:51:        var msg := (""+problem).split("\n")[0].trim()
~/efoo/src/esrc/scripts/eBrowser.e-awt:291:24:        if (msg.endsWith(":")) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:292:34:            msg := msg(0, msg.size() -1)
~/efoo/src/esrc/scripts/eBrowser.e-awt:294:26:        statusPane.setText(msg)
~/efoo/src/esrc/scripts/eBrowser.e-awt:295:26:        statusPane.repaint()
~/efoo/src/esrc/scripts/eBrowser.e-awt:296:24:        if (problem.leaf() =~ sex :SyntaxException) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:297:49:            textSelector.selectSpan(sex.optDamage())
~/efoo/src/esrc/scripts/eBrowser.e-awt:299:53:            def stacktrace := "\n\n" + problem.eStack() + "\n\n" +
~/efoo/src/esrc/scripts/eBrowser.e-awt:300:38:              problem.leaf().javaStack()
~/efoo/src/esrc/scripts/eBrowser.e-awt:301:51:            resultPane.append(stacktrace.replaceAll("\n", "\n# "))
~/efoo/src/esrc/scripts/eBrowser.e-awt:307:77:def programRunner(sourceTwine, textPane, textModel, resultPane, statusPane) :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:308:22:    resultPane.setText("Executing...")
~/efoo/src/esrc/scripts/eBrowser.e-awt:309:22:    statusPane.setText("Executing...")
~/efoo/src/esrc/scripts/eBrowser.e-awt:311:37:    def path := textModel.getFilePath()
~/efoo/src/esrc/scripts/eBrowser.e-awt:318:21:    def interpret() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:321:29:            to blockAtTop() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:324:32:            to continueAtTop() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:344:35:            def result := tree.eval(scope)
~/efoo/src/esrc/scripts/eBrowser.e-awt:346:30:            resultPane.setText("Execution ended:\n# value: " + result)
~/efoo/src/esrc/scripts/eBrowser.e-awt:347:30:            statusPane.setText("Execution ended")
~/efoo/src/esrc/scripts/eBrowser.e-awt:367:21:            body.trim()
~/efoo/src/esrc/scripts/eBrowser.e-awt:373:49:    def currentIndex := listPane.getSelectedIndex()
~/efoo/src/esrc/scripts/eBrowser.e-awt:376:67:        def currentFunc := extractElement(listPane.getSelectedValue())
~/efoo/src/esrc/scripts/eBrowser.e-awt:378:54:            if (listIndex > 0 && listIndex < list.size()) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:395:36:def buildKeymap(mainPane,textPane) :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:398:55:    def keymap := <swing:text.JTextComponent>.addKeymap()
~/efoo/src/esrc/scripts/eBrowser.e-awt:399:22:    textPane.setKeymap(keymap)
~/efoo/src/esrc/scripts/eBrowser.e-awt:400:27:    def tabActionRunner() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:401:49:        def location := textPane.getCaretPosition()
~/efoo/src/esrc/scripts/eBrowser.e-awt:403:29:        textPane.replaceRange(tabValue, location, location)
~/efoo/src/esrc/scripts/eBrowser.e-awt:404:58:        textPane.setCaretPosition(location + tabValue.size())
~/efoo/src/esrc/scripts/eBrowser.e-awt:408:23:    tabAction.setAction(tabActionRunner)
~/efoo/src/esrc/scripts/eBrowser.e-awt:409:75:    def vkTab := <swing:KeyStroke>.getKeyStroke(<awt:event.KeyEvent>.VK_TAB(),0)
~/efoo/src/esrc/scripts/eBrowser.e-awt:410:32:    keymap.addActionForKeyStroke(vkTab, tabAction)
~/efoo/src/esrc/scripts/eBrowser.e-awt:411:26:    def tabShiftRunner() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:412:54:        def caretPosition := textPane.getCaretPosition()
~/efoo/src/esrc/scripts/eBrowser.e-awt:414:36:        def tabSize := tabValue.size()
~/efoo/src/esrc/scripts/eBrowser.e-awt:416:36:        if (textPane.getSelectedText() == null && caretPosition >= tabSize ) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:418:40:            def text := textPane.getText(caretPosition - tabSize, tabSize)
~/efoo/src/esrc/scripts/eBrowser.e-awt:423:37:                textPane.replaceRange("",caretPosition -tabSize, caretPosition)
~/efoo/src/esrc/scripts/eBrowser.e-awt:424:41:                textPane.setCaretPosition (caretPosition - tabSize)
~/efoo/src/esrc/scripts/eBrowser.e-awt:430:28:    tabShiftAction.setAction(tabShiftRunner)
~/efoo/src/esrc/scripts/eBrowser.e-awt:431:59:    def shiftTabKeyStroke := <swing:KeyStroke>.getKeyStroke(
~/efoo/src/esrc/scripts/eBrowser.e-awt:432:60:        <awt:event.KeyEvent>.VK_TAB(),<awt:Event>.SHIFT_MASK())
~/efoo/src/esrc/scripts/eBrowser.e-awt:433:32:    keymap.addActionForKeyStroke(shiftTabKeyStroke, tabShiftAction)
~/efoo/src/esrc/scripts/eBrowser.e-awt:434:23:    def enterRunner() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:435:54:        def caretPosition := textPane.getCaretPosition()
~/efoo/src/esrc/scripts/eBrowser.e-awt:436:41:        def insertIndented(indentation) :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:437:54:            def location := textPane.getSelectionStart()
~/efoo/src/esrc/scripts/eBrowser.e-awt:438:37:            textPane.replaceSelection("\n" + indentation)
~/efoo/src/esrc/scripts/eBrowser.e-awt:439:65:            textPane.setCaretPosition(location + indentation.size() + 1)
~/efoo/src/esrc/scripts/eBrowser.e-awt:440:41:            <awt:Component>.transferFocus([mainPane], textPane)
~/efoo/src/esrc/scripts/eBrowser.e-awt:445:47:        def lineNum := textPane.getLineOfOffset(caretPosition)
~/efoo/src/esrc/scripts/eBrowser.e-awt:446:52:        def lineIndex := textPane.getLineStartOffset(lineNum)
~/efoo/src/esrc/scripts/eBrowser.e-awt:447:43:        def currentLine := textPane.getText(lineIndex, caretPosition - lineIndex)
~/efoo/src/esrc/scripts/eBrowser.e-awt:448:39:        def trimmed := currentLine.trim()
~/efoo/src/esrc/scripts/eBrowser.e-awt:449:24:        if (trimmed.size() == 0) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:456:25:    enterAction.setAction(enterRunner)
~/efoo/src/esrc/scripts/eBrowser.e-awt:457:53:    def enterStroke := <swing:KeyStroke>.getKeyStroke(
~/efoo/src/esrc/scripts/eBrowser.e-awt:458:37:        <awt:event.KeyEvent>.VK_ENTER(),0)
~/efoo/src/esrc/scripts/eBrowser.e-awt:459:32:    keymap.addActionForKeyStroke(enterStroke, enterAction)
~/efoo/src/esrc/scripts/eBrowser.e-awt:462:45:def configureUpdatedListPane(listPane,list) :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:464:58:    E.call(listPane,"setListData(Object[])",[list.snapshot()])
~/efoo/src/esrc/scripts/eBrowser.e-awt:465:54:    if (selectedIndex >= 0) {listPane.setSelectedIndex(selectedIndex)}
~/efoo/src/esrc/scripts/eBrowser.e-awt:475:22:        def runner() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:476:18:            E.send(target, operation, [])
~/efoo/src/esrc/scripts/eBrowser.e-awt:478:25:        uiTools.newButton(name,runner)
~/efoo/src/esrc/scripts/eBrowser.e-awt:481:26:        def actionFunc() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:482:18:            E.send(target, operation, [])
~/efoo/src/esrc/scripts/eBrowser.e-awt:484:29:        uiTools.newToolButton(uri, tipText ,actionFunc)
~/efoo/src/esrc/scripts/eBrowser.e-awt:487:26:        def actionFunc() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:488:18:            E.send(target, operation, [])
~/efoo/src/esrc/scripts/eBrowser.e-awt:490:27:        uiTools.addMenuItem(menu, name,actionFunc)
~/efoo/src/esrc/scripts/eBrowser.e-awt:499:43:    textModel.addFuncsChangedAlertRecipient(eBrowser)
~/efoo/src/esrc/scripts/eBrowser.e-awt:503:22:        to (isDirty) :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:507:102:            mainFrame.setTitle("eBrowser - " + textModel.getFileName() + " @ " + textModel.getFilePath())
~/efoo/src/esrc/scripts/eBrowser.e-awt:509:15:        to () :void {setTitle(false)}
~/efoo/src/esrc/scripts/eBrowser.e-awt:511:44:    def mainPane := mainFrame.getContentPane()
~/efoo/src/esrc/scripts/eBrowser.e-awt:512:38:    mainFrame.setDefaultCloseOperation(
~/efoo/src/esrc/scripts/eBrowser.e-awt:513:51:        <swing:WindowConstants>.DO_NOTHING_ON_CLOSE())
~/efoo/src/esrc/scripts/eBrowser.e-awt:527:31:    pasteUpdocButton.setEnabled(false)
~/efoo/src/esrc/scripts/eBrowser.e-awt:541:26:    elmerButton.setEnabled(false)
~/efoo/src/esrc/scripts/eBrowser.e-awt:545:30:    runHiLiteButton.setEnabled(false)
~/efoo/src/esrc/scripts/eBrowser.e-awt:549:24:    runButton.setEnabled(false)
~/efoo/src/esrc/scripts/eBrowser.e-awt:553:22:    textPane.setMargin(<awt:Insets>(0,5,0,10))
~/efoo/src/esrc/scripts/eBrowser.e-awt:554:24:    textPane.setLineWrap(false)
~/efoo/src/esrc/scripts/eBrowser.e-awt:556:61:    textPane.setFont(<awt:Font>("Monospaced",<awt:Font>.PLAIN(),12))
~/efoo/src/esrc/scripts/eBrowser.e-awt:558:32:    def requestTextPaneFocus() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:559:52:        def success := <awt:Component>.transferFocus([mainPane], textPane)
~/efoo/src/esrc/scripts/eBrowser.e-awt:562:61:        <swing:ScrollPaneConstants>.VERTICAL_SCROLLBAR_ALWAYS(),
~/efoo/src/esrc/scripts/eBrowser.e-awt:563:63:        <swing:ScrollPaneConstants>.HORIZONTAL_SCROLLBAR_ALWAYS())
~/efoo/src/esrc/scripts/eBrowser.e-awt:564:39:    scrollingTextPane.getViewport().add(textPane)
~/efoo/src/esrc/scripts/eBrowser.e-awt:565:36:    scrollingTextPane.setMinimumSize(<awt:Dimension>(200, 100))
~/efoo/src/esrc/scripts/eBrowser.e-awt:566:38:    scrollingTextPane.setPreferredSize(<awt:Dimension>(800, 600))
~/efoo/src/esrc/scripts/eBrowser.e-awt:572:24:    def openFile(file) :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:573:41:        def path := file.getCanonicalPath()
~/efoo/src/esrc/scripts/eBrowser.e-awt:575:26:        if (openFiles.maps(path)) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:576:38:            openFiles[path].bringToTop()
~/efoo/src/esrc/scripts/eBrowser.e-awt:577:45:        } else if (! (textModel.saveFileIsSet()) &&
~/efoo/src/esrc/scripts/eBrowser.e-awt:578:51:                     textPane.getText().trim().size() == 0) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:579:37:            textModel.replaceStubFile(file)
~/efoo/src/esrc/scripts/eBrowser.e-awt:582:45:            textPane.setText(textModel.reload())
~/efoo/src/esrc/scripts/eBrowser.e-awt:593:33:    def reactToFilesDrop(files) :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:594:31:        for i in 0..(files.size() - 1) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:598:73:    setupDrop(textPane, [<awt:datatransfer.DataFlavor>.javaFileListFlavor()
~/efoo/src/esrc/scripts/eBrowser.e-awt:608:30:    varListPane.setMinimumSize(<unsafe:java.awt.Dimension>(20,20))
~/efoo/src/esrc/scripts/eBrowser.e-awt:609:64:    varListPane.setFont(<awt:Font>("Monospaced",<awt:Font>.PLAIN(),12))
~/efoo/src/esrc/scripts/eBrowser.e-awt:611:61:        <swing:ScrollPaneConstants>.VERTICAL_SCROLLBAR_ALWAYS(),
~/efoo/src/esrc/scripts/eBrowser.e-awt:612:63:        <swing:ScrollPaneConstants>.HORIZONTAL_SCROLLBAR_ALWAYS())
~/efoo/src/esrc/scripts/eBrowser.e-awt:613:35:    scrollingVarPane.setMinimumSize(<unsafe:java.awt.Dimension>(20,20))
~/efoo/src/esrc/scripts/eBrowser.e-awt:614:38:    scrollingVarPane.getViewport().add(varListPane)
~/efoo/src/esrc/scripts/eBrowser.e-awt:616:35:        to mouseClicked(theEvent) :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:617:38:            if (theEvent.getClickCount() > 1) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:618:65:                def varLineIndices := textModel.getVarLineIndices()
~/efoo/src/esrc/scripts/eBrowser.e-awt:620:61:                  varLineIndices[varListPane.getSelectedIndex()]
~/efoo/src/esrc/scripts/eBrowser.e-awt:621:62:                def newPosition := textPane.getLineStartOffset(selectedLineNum)
~/efoo/src/esrc/scripts/eBrowser.e-awt:622:41:                textPane.setCaretPosition(
~/efoo/src/esrc/scripts/eBrowser.e-awt:623:47:                    textPane.getLineStartOffset(selectedLineNum + 1) - 1)
~/efoo/src/esrc/scripts/eBrowser.e-awt:624:42:                textPane.moveCaretPosition(newPosition)
~/efoo/src/esrc/scripts/eBrowser.e-awt:627:46:            } else if (theEvent.isPopupTrigger() ||
~/efoo/src/esrc/scripts/eBrowser.e-awt:628:79:                         <unsafe:javax.swing.SwingUtilities>.isRightMouseButton(theEvent)) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:629:91:                def clickLocation := <unsafe:java.awt.Point>(theEvent.getX(), theEvent.getY())
~/efoo/src/esrc/scripts/eBrowser.e-awt:630:65:                def selectionIndex := varListPane.locationToIndex(clickLocation)
~/efoo/src/esrc/scripts/eBrowser.e-awt:631:44:                varListPane.setSelectedIndex(selectionIndex)
~/efoo/src/esrc/scripts/eBrowser.e-awt:632:33:                varListPopup.show(varListPane,
~/efoo/src/esrc/scripts/eBrowser.e-awt:633:47:                                  theEvent.getX(),
~/efoo/src/esrc/scripts/eBrowser.e-awt:634:47:                                  theEvent.getY())
~/efoo/src/esrc/scripts/eBrowser.e-awt:639:32:    varListPane.addMouseListener(varListPaneListener)
~/efoo/src/esrc/scripts/eBrowser.e-awt:640:35:    scrollingVarPane.setMinimumSize(<awt:Dimension>(50, 100))
~/efoo/src/esrc/scripts/eBrowser.e-awt:644:65:    funcListPane.setFont(<awt:Font>("Monospaced",<awt:Font>.PLAIN(),12))
~/efoo/src/esrc/scripts/eBrowser.e-awt:646:61:        <swing:ScrollPaneConstants>.VERTICAL_SCROLLBAR_ALWAYS(),
~/efoo/src/esrc/scripts/eBrowser.e-awt:647:63:        <swing:ScrollPaneConstants>.HORIZONTAL_SCROLLBAR_ALWAYS())
~/efoo/src/esrc/scripts/eBrowser.e-awt:648:39:    scrollingFuncPane.getViewport().add(funcListPane)
~/efoo/src/esrc/scripts/eBrowser.e-awt:653:35:        to mouseClicked(theEvent) :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:654:38:            if (theEvent.getClickCount() > 1) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:655:65:                def outlineIndices := textModel.getOutlineIndices()
~/efoo/src/esrc/scripts/eBrowser.e-awt:657:62:                  outlineIndices[funcListPane.getSelectedIndex()]
~/efoo/src/esrc/scripts/eBrowser.e-awt:658:62:                def newPosition := textPane.getLineStartOffset(selectedLineNum)
~/efoo/src/esrc/scripts/eBrowser.e-awt:659:41:                textPane.setCaretPosition(
~/efoo/src/esrc/scripts/eBrowser.e-awt:660:47:                    textPane.getLineStartOffset(selectedLineNum + 1) - 1)
~/efoo/src/esrc/scripts/eBrowser.e-awt:661:42:                textPane.moveCaretPosition(newPosition)
~/efoo/src/esrc/scripts/eBrowser.e-awt:664:46:            } else if (theEvent.isPopupTrigger() ||
~/efoo/src/esrc/scripts/eBrowser.e-awt:665:79:                         <unsafe:javax.swing.SwingUtilities>.isRightMouseButton(theEvent)) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:666:91:                def clickLocation := <unsafe:java.awt.Point>(theEvent.getX(), theEvent.getY())
~/efoo/src/esrc/scripts/eBrowser.e-awt:667:66:                def selectionIndex := funcListPane.locationToIndex(clickLocation)
~/efoo/src/esrc/scripts/eBrowser.e-awt:668:45:                funcListPane.setSelectedIndex(selectionIndex)
~/efoo/src/esrc/scripts/eBrowser.e-awt:669:34:                funcListPopup.show(funcListPane,
~/efoo/src/esrc/scripts/eBrowser.e-awt:670:48:                                   theEvent.getX(),
~/efoo/src/esrc/scripts/eBrowser.e-awt:671:48:                                   theEvent.getY())
~/efoo/src/esrc/scripts/eBrowser.e-awt:676:33:    funcListPane.addMouseListener(funcListPaneListener)
~/efoo/src/esrc/scripts/eBrowser.e-awt:694:36:    varLineSplitter.setLeftComponent(scrollingTextPane)
~/efoo/src/esrc/scripts/eBrowser.e-awt:695:37:    varLineSplitter.setRightComponent(scrollingVarPane)
~/efoo/src/esrc/scripts/eBrowser.e-awt:696:35:    varLineSplitter.setResizeWeight(0.9)
~/efoo/src/esrc/scripts/eBrowser.e-awt:702:36:    outLineSplitter.setLeftComponent(scrollingFuncPane)
~/efoo/src/esrc/scripts/eBrowser.e-awt:704:37:    outLineSplitter.setRightComponent(varLineSplitter)
~/efoo/src/esrc/scripts/eBrowser.e-awt:705:35:    outLineSplitter.setResizeWeight(0.3)
~/efoo/src/esrc/scripts/eBrowser.e-awt:709:63:    statusPane.setFont(<awt:Font>("Monospaced",<awt:Font>.PLAIN(),11))
~/efoo/src/esrc/scripts/eBrowser.e-awt:711:31:    def s1 := uiTools.labelIcon(<icons:separator.gif>)
~/efoo/src/esrc/scripts/eBrowser.e-awt:712:31:    def s2 := uiTools.labelIcon(<icons:separator.gif>)
~/efoo/src/esrc/scripts/eBrowser.e-awt:713:31:    def s3 := uiTools.labelIcon(<icons:separator.gif>)
~/efoo/src/esrc/scripts/eBrowser.e-awt:726:23:    def newFileFunc() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:729:20:    def openFunc() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:730:48:        fileDialog.setMode(<awt:FileDialog>.LOAD())
~/efoo/src/esrc/scripts/eBrowser.e-awt:731:27:        fileDialog.setTitle("Pick File To Open")
~/efoo/src/esrc/scripts/eBrowser.e-awt:732:23:        fileDialog.show()
~/efoo/src/esrc/scripts/eBrowser.e-awt:733:42:        def fileName := fileDialog.getFile()
~/efoo/src/esrc/scripts/eBrowser.e-awt:734:45:        if (fileName != null && fileName.size() > 0) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:735:55:            def localPath := `${fileDialog.getDirectory()}$fileName`
~/efoo/src/esrc/scripts/eBrowser.e-awt:741:33:    def saveFunc() :void {eBrowser.save()}
~/efoo/src/esrc/scripts/eBrowser.e-awt:742:22:    def saveAsFunc() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:743:48:        fileDialog.setMode(<awt:FileDialog>.SAVE())
~/efoo/src/esrc/scripts/eBrowser.e-awt:744:27:        fileDialog.setTitle("Save File As")
~/efoo/src/esrc/scripts/eBrowser.e-awt:745:23:        fileDialog.show()
~/efoo/src/esrc/scripts/eBrowser.e-awt:746:42:        def fileName := fileDialog.getFile()
~/efoo/src/esrc/scripts/eBrowser.e-awt:747:45:        if (fileName != null && fileName.size() > 0) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:748:55:            def localPath := `${fileDialog.getDirectory()}$fileName`
~/efoo/src/esrc/scripts/eBrowser.e-awt:751:49:            def path := openFile.getCanonicalPath()
~/efoo/src/esrc/scripts/eBrowser.e-awt:753:30:            if (openFiles.maps(path)) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:756:32:                textModel.saveAs(path)
~/efoo/src/esrc/scripts/eBrowser.e-awt:763:26:    def makeFontLarger() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:764:39:        def oldFont := textPane.getFont()
~/efoo/src/esrc/scripts/eBrowser.e-awt:765:63:        def newFont := oldFont.deriveFont(0.0 + oldFont.getSize() + 2.0)
~/efoo/src/esrc/scripts/eBrowser.e-awt:766:24:        textPane.setFont(newFont)
~/efoo/src/esrc/scripts/eBrowser.e-awt:767:28:        funcListPane.setFont(newFont)
~/efoo/src/esrc/scripts/eBrowser.e-awt:768:27:        varListPane.setFont(newFont)
~/efoo/src/esrc/scripts/eBrowser.e-awt:771:27:    def makeFontSmaller() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:772:39:        def oldFont := textPane.getFont()
~/efoo/src/esrc/scripts/eBrowser.e-awt:773:63:        def newFont := oldFont.deriveFont(0.0 + oldFont.getSize() - 2.0)
~/efoo/src/esrc/scripts/eBrowser.e-awt:774:24:        textPane.setFont(newFont)
~/efoo/src/esrc/scripts/eBrowser.e-awt:775:28:        funcListPane.setFont(newFont)
~/efoo/src/esrc/scripts/eBrowser.e-awt:776:27:        varListPane.setFont(newFont)
~/efoo/src/esrc/scripts/eBrowser.e-awt:802:26:            def action() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:803:34:                eBrowser.setStatus(`Running script: $runnableName ...`)
~/efoo/src/esrc/scripts/eBrowser.e-awt:805:62:                    def source := folder[runnableName].getText()
~/efoo/src/esrc/scripts/eBrowser.e-awt:807:65:                    def result := script(textPane.getSelectedText())
~/efoo/src/esrc/scripts/eBrowser.e-awt:809:53:                          script.requestsSubstitution()
~/efoo/src/esrc/scripts/eBrowser.e-awt:812:41:                        outputPane.append(
~/efoo/src/esrc/scripts/eBrowser.e-awt:815:41:                        outputPane.append(
~/efoo/src/esrc/scripts/eBrowser.e-awt:818:46:                } catch err {outputPane.append("\n" + `Script error: $err`)}
~/efoo/src/esrc/scripts/eBrowser.e-awt:819:34:                eBrowser.setStatus(`Script $runnableName completed.`)
~/efoo/src/esrc/scripts/eBrowser.e-awt:824:31:            uiTools.addMenuItem(scriptMenu,
~/efoo/src/esrc/scripts/eBrowser.e-awt:845:21:        to doOpen() :void {openFunc()}
~/efoo/src/esrc/scripts/eBrowser.e-awt:846:21:        to doSave() :void {saveFunc()}
~/efoo/src/esrc/scripts/eBrowser.e-awt:847:23:        to doSaveAs() :void {saveAsFunc()}
~/efoo/src/esrc/scripts/eBrowser.e-awt:853:28:        to doSmallerFont() :void {makeFontSmaller()}
~/efoo/src/esrc/scripts/eBrowser.e-awt:854:27:        to doLargerFont() :void {makeFontLarger()}
~/efoo/src/esrc/scripts/eBrowser.e-awt:855:31:        to doSetImportsRoot() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:859:49:                importsRootDirConf.getText().trim(),
~/efoo/src/esrc/scripts/eBrowser.e-awt:861:54:            when (pathDialogVow) -> done(pathDialog) :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:862:47:                if (pathDialog.getClickedButton() == "OK") {
~/efoo/src/esrc/scripts/eBrowser.e-awt:863:72:                    importsRootDirConf.setText(pathDialog.getEnteredText())
~/efoo/src/esrc/scripts/eBrowser.e-awt:868:36:        to doAbout() :void {eBrowser.about()}
~/efoo/src/esrc/scripts/eBrowser.e-awt:877:29:    def menuBar := mm.menuBar([
~/efoo/src/esrc/scripts/eBrowser.e-awt:878:15:        mm.menu("&File", [
~/efoo/src/esrc/scripts/eBrowser.e-awt:879:21:            mm.action("&New",  "Ctrl+N"),
~/efoo/src/esrc/scripts/eBrowser.e-awt:880:21:            mm.action("&Open...", "Ctrl+O"),
~/efoo/src/esrc/scripts/eBrowser.e-awt:881:21:            mm.action("&Save", "Ctrl+S"),
~/efoo/src/esrc/scripts/eBrowser.e-awt:882:21:            mm.action("Save &As...")
~/efoo/src/esrc/scripts/eBrowser.e-awt:884:15:        mm.menu("For&mat", [
~/efoo/src/esrc/scripts/eBrowser.e-awt:889:21:            mm.action("Smaller Font", "Ctrl+OPEN_BRACKET"),
~/efoo/src/esrc/scripts/eBrowser.e-awt:890:21:            mm.action("Larger Font", "Ctrl+CLOSE_BRACKET")
~/efoo/src/esrc/scripts/eBrowser.e-awt:892:15:        mm.menu("&Tools", [
~/efoo/src/esrc/scripts/eBrowser.e-awt:893:21:            mm.action("Set &Imports Root...")
~/efoo/src/esrc/scripts/eBrowser.e-awt:895:15:        mm.menu("&Help", [
~/efoo/src/esrc/scripts/eBrowser.e-awt:896:21:            mm.action("&About...")
~/efoo/src/esrc/scripts/eBrowser.e-awt:900:25:    mainFrame.setJMenuBar(menuBar)
~/efoo/src/esrc/scripts/eBrowser.e-awt:903:16:    mainPane.add(realPane)
~/efoo/src/esrc/scripts/eBrowser.e-awt:905:38:    textPane.setText(textModel.getText())
~/efoo/src/esrc/scripts/eBrowser.e-awt:906:29:    textPane.setCaretPosition(0)
~/efoo/src/esrc/scripts/eBrowser.e-awt:907:18:    mainFrame.pack()
~/efoo/src/esrc/scripts/eBrowser.e-awt:908:21:    mainFrame.setSize(1000,700)
~/efoo/src/esrc/scripts/eBrowser.e-awt:909:75:    mainFrame.setLocation(50 + entropy.nextInt() % 30, 50 + entropy.nextInt() % 30)
~/efoo/src/esrc/scripts/eBrowser.e-awt:910:10:    E.call(outLineSplitter, "setDividerLocation(int)",[200])
~/efoo/src/esrc/scripts/eBrowser.e-awt:913:10:    E.call(varLineSplitter, "setDividerLocation(int)",[600])
~/efoo/src/esrc/scripts/eBrowser.e-awt:914:18:    mainFrame.show()
~/efoo/src/esrc/scripts/eBrowser.e-awt:919:31:        to windowActivated(e) :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:920:46:            if (textModel.storedVersionIsNewer()) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:922:59:                if (textPane.getText() != textModel.getText()) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:926:73:                def shouldUpdate := <swing:JOptionPane>.showConfirmDialog(
~/efoo/src/esrc/scripts/eBrowser.e-awt:929:53:                    <swing:JOptionPane>.YES_NO_OPTION())
~/efoo/src/esrc/scripts/eBrowser.e-awt:930:66:                if (shouldUpdate == <swing:JOptionPane>.YES_OPTION()) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:931:53:                    textPane.setText(textModel.reload())
~/efoo/src/esrc/scripts/eBrowser.e-awt:932:55:                } else {textModel.resetSaveTimeNoReload()}
~/efoo/src/esrc/scripts/eBrowser.e-awt:938:31:    mainFrame.addWindowListener(windowActiveListener)
~/efoo/src/esrc/scripts/eBrowser.e-awt:942:37:    def path := textModel.getFilePath()
~/efoo/src/esrc/scripts/eBrowser.e-awt:951:56:        def reader := StringReaderMaker(textPane.getText())
~/efoo/src/esrc/scripts/eBrowser.e-awt:952:23:        reader.getTwine(`file:$path`)
~/efoo/src/esrc/scripts/eBrowser.e-awt:956:24:    def closeCleanly() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:957:23:        textModel.close()
~/efoo/src/esrc/scripts/eBrowser.e-awt:959:29:            mainFrame.dispose()
~/efoo/src/esrc/scripts/eBrowser.e-awt:965:19:        to save() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:966:46:            textModel.setText(textPane.getText())
~/efoo/src/esrc/scripts/eBrowser.e-awt:967:39:            if (textModel.saveFileIsSet()) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:968:30:                textModel.save()
~/efoo/src/esrc/scripts/eBrowser.e-awt:973:25:        to openImport() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:991:25:        to bringToTop() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:995:34:        to setStatus(statusText) :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:996:30:            statusPane.setText(statusText)
~/efoo/src/esrc/scripts/eBrowser.e-awt:997:30:            statusPane.repaint()
~/efoo/src/esrc/scripts/eBrowser.e-awt:999:19:        to find() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:1000:30:            eBrowser.setStatus("Finding...")
~/efoo/src/esrc/scripts/eBrowser.e-awt:1001:51:            def textSize := textPane.getText().size()
~/efoo/src/esrc/scripts/eBrowser.e-awt:1002:61:            def startSearchIndex := textPane.getCaretPosition()
~/efoo/src/esrc/scripts/eBrowser.e-awt:1003:46:            def searchArea := textPane.getText(startSearchIndex,
~/efoo/src/esrc/scripts/eBrowser.e-awt:1005:60:            if (searchArea =~ `@{front}${searchField.getText()}@{tail}`) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:1006:49:                def startFoundIndex := front.size() + startSearchIndex
~/efoo/src/esrc/scripts/eBrowser.e-awt:1007:41:                textPane.setCaretPosition(startFoundIndex )
~/efoo/src/esrc/scripts/eBrowser.e-awt:1008:42:                textPane.moveCaretPosition(
~/efoo/src/esrc/scripts/eBrowser.e-awt:1009:64:                    startFoundIndex + searchField.getText().size())
~/efoo/src/esrc/scripts/eBrowser.e-awt:1010:34:                eBrowser.setStatus("Found")
~/efoo/src/esrc/scripts/eBrowser.e-awt:1014:38:            } else {eBrowser.setStatus("Not Found")}
~/efoo/src/esrc/scripts/eBrowser.e-awt:1016:19:        to goto() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:1027:58:            def newPosition := textPane.getLineStartOffset(lineNum)
~/efoo/src/esrc/scripts/eBrowser.e-awt:1029:37:            textPane.setCaretPosition(
~/efoo/src/esrc/scripts/eBrowser.e-awt:1030:43:                textPane.getLineStartOffset(lineNum + 1) - 1)
~/efoo/src/esrc/scripts/eBrowser.e-awt:1032:38:            textPane.moveCaretPosition(newPosition)
~/efoo/src/esrc/scripts/eBrowser.e-awt:1037:20:        to about() :void {popAboutBox()}
~/efoo/src/esrc/scripts/eBrowser.e-awt:1040:28:        to executeHiLite() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:1041:30:            outputPane.setText("")
~/efoo/src/esrc/scripts/eBrowser.e-awt:1042:66:            def selection := getTwine()(textPane.getSelectionStart(),
~/efoo/src/esrc/scripts/eBrowser.e-awt:1043:64:                                        textPane.getSelectionEnd())
~/efoo/src/esrc/scripts/eBrowser.e-awt:1048:29:        to executeProgram() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:1049:30:            outputPane.setText("")
~/efoo/src/esrc/scripts/eBrowser.e-awt:1052:24:        to insertVar() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:1053:59:            def insert := "" + varListPane.getSelectedValue()
~/efoo/src/esrc/scripts/eBrowser.e-awt:1054:45:            if (insert != null && insert.size() > 0) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:1055:51:                def insertVarTrimmed := insert.trim()
~/efoo/src/esrc/scripts/eBrowser.e-awt:1059:25:        to insertFunc() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:1060:60:            def insert := "" + funcListPane.getSelectedValue()
~/efoo/src/esrc/scripts/eBrowser.e-awt:1061:45:            if (insert != null && insert.size() > 0) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:1077:51:                insertSection := insertSection.trim()
~/efoo/src/esrc/scripts/eBrowser.e-awt:1081:24:        to alignVars() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:1083:64:              textPane.getLineOfOffset(textPane.getCaretPosition())
~/efoo/src/esrc/scripts/eBrowser.e-awt:1085:54:            def indices := textModel.getVarLineIndices()
~/efoo/src/esrc/scripts/eBrowser.e-awt:1086:47:            if (indices != null && indices.size() > 0) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:1087:39:                while (i < indices.size() && indices[i] < currentLine) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:1091:44:                varListPane.setSelectedIndex(i)
~/efoo/src/esrc/scripts/eBrowser.e-awt:1092:48:                varListPane.ensureIndexIsVisible(i)
~/efoo/src/esrc/scripts/eBrowser.e-awt:1097:25:        to alignFuncs() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:1099:64:              textPane.getLineOfOffset(textPane.getCaretPosition())
~/efoo/src/esrc/scripts/eBrowser.e-awt:1101:54:            def indices := textModel.getOutlineIndices()
~/efoo/src/esrc/scripts/eBrowser.e-awt:1102:47:            if (indices != null && indices.size() > 0) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:1103:39:                while (i < indices.size() && indices[i] < currentLine) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:1107:45:                funcListPane.setSelectedIndex(i)
~/efoo/src/esrc/scripts/eBrowser.e-awt:1108:49:                funcListPane.ensureIndexIsVisible(i)
~/efoo/src/esrc/scripts/eBrowser.e-awt:1113:23:        to reformat() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:1114:32:            textPane.setEditable(false)
~/efoo/src/esrc/scripts/eBrowser.e-awt:1115:30:            eBrowser.setStatus("Reformatting...")
~/efoo/src/esrc/scripts/eBrowser.e-awt:1116:30:            outputPane.setText("Reformatting...")
~/efoo/src/esrc/scripts/eBrowser.e-awt:1117:25:            def after() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:1119:56:                    textPane.setText(PrettyFeeder.pretty(getTwine()))
~/efoo/src/esrc/scripts/eBrowser.e-awt:1120:38:                    eBrowser.setStatus("Reformat Done.")
~/efoo/src/esrc/scripts/eBrowser.e-awt:1124:47:                } finally {textPane.setEditable(true)}
~/efoo/src/esrc/scripts/eBrowser.e-awt:1128:27:        to linesChanged() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:1129:75:            configureUpdatedListPane(funcListPane, textModel.getOutlineList())
~/efoo/src/esrc/scripts/eBrowser.e-awt:1130:74:            configureUpdatedListPane(varListPane, textModel.getVarLineList())
~/efoo/src/esrc/scripts/eBrowser.e-awt:1132:25:        to pasteUpdoc() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:1137:70:                  <awt:Toolkit>.getDefaultToolkit().getSystemClipboard()
~/efoo/src/esrc/scripts/eBrowser.e-awt:1139:57:                def transferObject := SysClip.getContents(null)
~/efoo/src/esrc/scripts/eBrowser.e-awt:1143:64:                      <awt:datatransfer.DataFlavor>.stringFlavor()
~/efoo/src/esrc/scripts/eBrowser.e-awt:1146:52:                      transferObject.getTransferData(stringFlavor)
~/efoo/src/esrc/scripts/eBrowser.e-awt:1152:37:            for each in rawcode.split("\n") {
~/efoo/src/esrc/scripts/eBrowser.e-awt:1161:28:        to windowClosing() :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:1165:59:                if (textPane.getText() == textModel.getText()) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:1169:64:                        "Modified File " + textModel.getFileName(),
~/efoo/src/esrc/scripts/eBrowser.e-awt:1173:79:                    when (saveDecision <- getClickedButton()) -> done(answer) :void {
~/efoo/src/esrc/scripts/eBrowser.e-awt:1180:41:                            eBrowser.save()
~/efoo/src/esrc/scripts/eBrowser.e-awt:1198:33:def commandArgs := interp.getArgs()
~/efoo/src/esrc/scripts/eBrowser.e-awt:1199:20:if (commandArgs.size() > 0) {
~/efoo/src/esrc/scripts/eBrowser.e-awt:1205:44:    openFiles[optBrowseFile.getCanonicalPath()] := browser
~/efoo/src/esrc/scripts/eBrowser.e-awt:1208:17:interp.blockAtTop()
~/efoo/src/esrc/scripts/eBrowser.e-swt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/eBrowser.e-swt:9:35:def traceline(str) :void { stderr.println(str) }
~/efoo/src/esrc/scripts/eBrowser.e-swt:16:56:    def runtime := <unsafe:java.lang.Runtime>.getRuntime()
~/efoo/src/esrc/scripts/eBrowser.e-swt:17:20:    def traceMem() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:19:38:        def free := runtime.freeMemory()
~/efoo/src/esrc/scripts/eBrowser.e-swt:20:40:        def total := runtime.totalMemory()
~/efoo/src/esrc/scripts/eBrowser.e-swt:44:42:    display, "Courier New", 10, SWT.NORMAL())
~/efoo/src/esrc/scripts/eBrowser.e-swt:47:35:def windowSet := [].asMap().diverge()
~/efoo/src/esrc/scripts/eBrowser.e-swt:50:67:def eLogoImage := <swt:graphics.Image>(display, eLogoURL.openStream())
~/efoo/src/esrc/scripts/eBrowser.e-swt:56:22:        result.setText(title)
~/efoo/src/esrc/scripts/eBrowser.e-swt:57:23:        result.setImage(eLogoImage)
~/efoo/src/esrc/scripts/eBrowser.e-swt:82:57:  <unsafe:org.quasiliteral.syntax.SyntaxException>.asType()
~/efoo/src/esrc/scripts/eBrowser.e-swt:92:41:if (! (homeDir.exists())) {homeDir.mkdirs()}
~/efoo/src/esrc/scripts/eBrowser.e-swt:94:64:if (! (importsRootDirConf.exists())) {importsRootDirConf.setText("")}
~/efoo/src/esrc/scripts/eBrowser.e-swt:96:25:def setOptImportsRoot() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:98:63:    def importsRootDirPath := importsRootDirConf.getText().trim()
~/efoo/src/esrc/scripts/eBrowser.e-swt:99:31:    if (importsRootDirPath.size() > 0) {
~/efoo/src/esrc/scripts/eBrowser.e-swt:126:31:        to shellClosed(event) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:127:22:            event.doit(false)
~/efoo/src/esrc/scripts/eBrowser.e-swt:128:46:            windowClosingHandler.windowClosing()
~/efoo/src/esrc/scripts/eBrowser.e-swt:132:30:    mainFrame.addShellListener(shellListener)
~/efoo/src/esrc/scripts/eBrowser.e-swt:134:34:        to widgetDisposed(event) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:135:31:            windowSet.removeKey(mainFrame)
~/efoo/src/esrc/scripts/eBrowser.e-swt:136:58:            if (windowSet.size() <1) {interp.continueAtTop()}
~/efoo/src/esrc/scripts/eBrowser.e-swt:139:32:    mainFrame.addDisposeListener(disposeListener)
~/efoo/src/esrc/scripts/eBrowser.e-swt:148:62:def replaceSelectionHilite(mainFrame, textPane, replacement) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:149:45:    def location := textPane.getSelection().x()
~/efoo/src/esrc/scripts/eBrowser.e-swt:150:19:    textPane.insert(replacement)
~/efoo/src/esrc/scripts/eBrowser.e-swt:151:63:    textPane.setSelection(location, location + replacement.size())
~/efoo/src/esrc/scripts/eBrowser.e-swt:152:34:    <widget:Control>.transferFocus([mainFrame], textPane)
~/efoo/src/esrc/scripts/eBrowser.e-swt:155:19:def popAboutBox() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:156:32:    def props := interp.getProps()
~/efoo/src/esrc/scripts/eBrowser.e-swt:172:31:    def runnables := [].diverge()
~/efoo/src/esrc/scripts/eBrowser.e-swt:173:21:    if (folder.exists()) {
~/efoo/src/esrc/scripts/eBrowser.e-swt:175:28:            if (each.getName() =~ `@menuLabel.$suffix`) {
~/efoo/src/esrc/scripts/eBrowser.e-swt:176:30:                runnables.push(`$menuLabel.$suffix`)
~/efoo/src/esrc/scripts/eBrowser.e-swt:180:22:    runnables.snapshot()
~/efoo/src/esrc/scripts/eBrowser.e-swt:183:35:def openFiles := [].asMap().diverge()
~/efoo/src/esrc/scripts/eBrowser.e-swt:198:51:    def funcsChangedAlertList := [].asMap().diverge()
~/efoo/src/esrc/scripts/eBrowser.e-swt:199:67:    def current() :any {<unsafe:java.lang.System>.currentTimeMillis()}
~/efoo/src/esrc/scripts/eBrowser.e-swt:200:36:    var myText := browseFile.getText()
~/efoo/src/esrc/scripts/eBrowser.e-swt:202:50:    var myTimeLastSaved := browseFile.lastModified()
~/efoo/src/esrc/scripts/eBrowser.e-swt:210:30:            browseFile.getName()
~/efoo/src/esrc/scripts/eBrowser.e-swt:213:39:            browseFile.getCanonicalPath()
~/efoo/src/esrc/scripts/eBrowser.e-swt:217:56:        to addFuncsChangedAlertRecipient(vowRecipient) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:218:52:            when (vowRecipient) -> done(recipient) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:222:56:        to removeFuncsChangedAlertRecipient(recipient) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:223:43:            funcsChangedAlertList.removeKey(recipient)
~/efoo/src/esrc/scripts/eBrowser.e-swt:225:29:        to setText(newText) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:229:76:        to setLines(outlineList,outlineIndices,varLineList,varLineIndices) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:234:64:            for each in funcsChangedAlertList {each.linesChanged()}
~/efoo/src/esrc/scripts/eBrowser.e-swt:245:19:        to save() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:246:30:            browseFile.setText(myText)
~/efoo/src/esrc/scripts/eBrowser.e-swt:247:54:            myTimeLastSaved := browseFile.lastModified()
~/efoo/src/esrc/scripts/eBrowser.e-swt:249:29:        to saveAs(filePath) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:251:63:                openFiles.removeKey(browseFile.getCanonicalPath())
~/efoo/src/esrc/scripts/eBrowser.e-swt:254:26:            textModel.save()
~/efoo/src/esrc/scripts/eBrowser.e-swt:256:45:        to replaceStubFile(replacementFile) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:262:53:            myTimeLastSaved < browseFile.lastModified()
~/efoo/src/esrc/scripts/eBrowser.e-swt:265:40:            myText := browseFile.getText()
~/efoo/src/esrc/scripts/eBrowser.e-swt:266:54:            myTimeLastSaved := browseFile.lastModified()
~/efoo/src/esrc/scripts/eBrowser.e-swt:270:36:        to resetSaveTimeNoReload() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:271:54:            myTimeLastSaved := browseFile.lastModified()
~/efoo/src/esrc/scripts/eBrowser.e-swt:273:20:        to close() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:275:63:                openFiles.removeKey(browseFile.getCanonicalPath())
~/efoo/src/esrc/scripts/eBrowser.e-swt:297:22:    resultPane.setText("Executing...")
~/efoo/src/esrc/scripts/eBrowser.e-swt:309:31:            result := tree.eval(scope1)
~/efoo/src/esrc/scripts/eBrowser.e-swt:311:29:            resultPane.append("\n# value: " + result)
~/efoo/src/esrc/scripts/eBrowser.e-swt:314:29:            resultPane.append(`Error: ${"\n"}$problem`)
~/efoo/src/esrc/scripts/eBrowser.e-swt:323:34:    def problemReporter(problem) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:341:77:def programRunner(sourceTwine, textPane, textModel, resultPane, statusPane) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:342:22:    resultPane.setText("Executing...")
~/efoo/src/esrc/scripts/eBrowser.e-swt:343:22:    statusPane.setText("Executing...")
~/efoo/src/esrc/scripts/eBrowser.e-swt:345:37:    def path := textModel.getFilePath()
~/efoo/src/esrc/scripts/eBrowser.e-swt:350:21:    def interpret() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:353:29:            to blockAtTop() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:356:32:            to continueAtTop() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:376:35:            def result := tree.eval(scope)
~/efoo/src/esrc/scripts/eBrowser.e-swt:378:30:            resultPane.setText("Execution ended:\n# value: " + result)
~/efoo/src/esrc/scripts/eBrowser.e-swt:379:30:            statusPane.setText("Execution ended")
~/efoo/src/esrc/scripts/eBrowser.e-swt:399:21:            body.trim()
~/efoo/src/esrc/scripts/eBrowser.e-swt:406:50:    def currentIndex := listPane.getSelectionIndex()
~/efoo/src/esrc/scripts/eBrowser.e-swt:409:64:        def currentFunc := extractElement((listPane.getSelection())[0])
~/efoo/src/esrc/scripts/eBrowser.e-swt:411:54:            if (listIndex > 0 && listIndex < list.size()) {
~/efoo/src/esrc/scripts/eBrowser.e-swt:432:37:def buildKeymap(mainFrame,textPane) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:434:50:    def lineDelimiter := textPane.getLineDelimiter()
~/efoo/src/esrc/scripts/eBrowser.e-swt:436:22:    def doTab(event) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:437:49:        def location := textPane.getSelection().x()
~/efoo/src/esrc/scripts/eBrowser.e-swt:439:23:        textPane.insert(tabValue)
~/efoo/src/esrc/scripts/eBrowser.e-swt:440:54:        textPane.setSelection(location + tabValue.size())
~/efoo/src/esrc/scripts/eBrowser.e-swt:443:27:    def doShiftTab(event) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:444:52:        def caretPosition := textPane.getCaretOffset()
~/efoo/src/esrc/scripts/eBrowser.e-swt:446:36:        def tabSize := tabValue.size()
~/efoo/src/esrc/scripts/eBrowser.e-swt:448:45:                    textPane.getSelectionText())
~/efoo/src/esrc/scripts/eBrowser.e-swt:449:37:        if (textPane.getSelectionText() == "" && caretPosition >= tabSize ) {
~/efoo/src/esrc/scripts/eBrowser.e-swt:451:45:            def text := textPane.getTextRange(caretPosition - tabSize, tabSize)
~/efoo/src/esrc/scripts/eBrowser.e-swt:456:41:                textPane.replaceTextRange(caretPosition -tabSize, tabSize, "")
~/efoo/src/esrc/scripts/eBrowser.e-swt:458:39:                textPane.setCaretOffset(caretPosition - tabSize)
~/efoo/src/esrc/scripts/eBrowser.e-swt:464:24:    def doEnter(event) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:465:52:        def caretPosition := textPane.getCaretOffset()
~/efoo/src/esrc/scripts/eBrowser.e-swt:466:41:        def insertIndented(indentation) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:467:53:            def location := textPane.getSelection().x()
~/efoo/src/esrc/scripts/eBrowser.e-swt:470:22:            event.text("\n" + indentation)
~/efoo/src/esrc/scripts/eBrowser.e-swt:472:47:        def lineNum := textPane.getLineAtOffset(caretPosition)
~/efoo/src/esrc/scripts/eBrowser.e-swt:473:49:        def lineIndex := textPane.getOffsetAtLine(lineNum)
~/efoo/src/esrc/scripts/eBrowser.e-swt:474:48:        def currentLine := textPane.getTextRange(lineIndex,
~/efoo/src/esrc/scripts/eBrowser.e-swt:476:39:        def trimmed := currentLine.trim()
~/efoo/src/esrc/scripts/eBrowser.e-swt:477:24:        if (trimmed.size() == 0) {
~/efoo/src/esrc/scripts/eBrowser.e-swt:485:30:        to verifyText(event) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:486:34:            def text := event.text()
~/efoo/src/esrc/scripts/eBrowser.e-swt:489:26:                event.doit(false)
~/efoo/src/esrc/scripts/eBrowser.e-swt:492:54:                    if (event.stateMask() == SWT.SHIFT()) {
~/efoo/src/esrc/scripts/eBrowser.e-swt:511:30:    textPane.addVerifyListener(verifyListener)
~/efoo/src/esrc/scripts/eBrowser.e-swt:514:32:        to keyTraversed(event) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:515:59:            if (event.detail() == SWT.TRAVERSE_TAB_PREVIOUS()) {
~/efoo/src/esrc/scripts/eBrowser.e-swt:516:26:                event.doit(false)
~/efoo/src/esrc/scripts/eBrowser.e-swt:523:32:    textPane.addTraverseListener(traverseListener)
~/efoo/src/esrc/scripts/eBrowser.e-swt:526:45:def configureUpdatedListPane(listPane,list) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:528:40:        def current := listPane.getItems()
~/efoo/src/esrc/scripts/eBrowser.e-swt:530:39:        if (current.size() != list.size()) {
~/efoo/src/esrc/scripts/eBrowser.e-swt:533:36:            for i in 0..current.size()-1 {
~/efoo/src/esrc/scripts/eBrowser.e-swt:544:59:        E.call(listPane,"setItems(String[])",[list.snapshot()])
~/efoo/src/esrc/scripts/eBrowser.e-swt:546:33:            listPane.setSelection(selectedIndex)
~/efoo/src/esrc/scripts/eBrowser.e-swt:547:34:            listPane.showSelection()
~/efoo/src/esrc/scripts/eBrowser.e-swt:560:43:    textModel.addFuncsChangedAlertRecipient(eBrowser)
~/efoo/src/esrc/scripts/eBrowser.e-swt:565:22:        to (isDirty) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:569:67:            mainFrame.setText("eBrowser - " + textModel.getFileName() +
~/efoo/src/esrc/scripts/eBrowser.e-swt:570:61:                                " @ " + textModel.getFilePath())
~/efoo/src/esrc/scripts/eBrowser.e-swt:572:15:        to () :void {setTitle(false)}
~/efoo/src/esrc/scripts/eBrowser.e-swt:579:31:        to shellClosed(event) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:580:22:            event.doit(false)
~/efoo/src/esrc/scripts/eBrowser.e-swt:584:30:    mainFrame.addShellListener(noCloseListener)
~/efoo/src/esrc/scripts/eBrowser.e-swt:588:21:    layout.numColumns(1)
~/efoo/src/esrc/scripts/eBrowser.e-swt:589:23:    layout.marginHeight(0)
~/efoo/src/esrc/scripts/eBrowser.e-swt:590:26:    layout.verticalSpacing(0)
~/efoo/src/esrc/scripts/eBrowser.e-swt:591:22:    layout.marginWidth(0)
~/efoo/src/esrc/scripts/eBrowser.e-swt:592:28:    layout.horizontalSpacing(0)
~/efoo/src/esrc/scripts/eBrowser.e-swt:593:23:    mainFrame.setLayout(layout)
~/efoo/src/esrc/scripts/eBrowser.e-swt:596:54:    def toolArea := <widget:Group>(mainFrame, SWT.NULL())
~/efoo/src/esrc/scripts/eBrowser.e-swt:598:29:    toolAreaLayout.numColumns(2)
~/efoo/src/esrc/scripts/eBrowser.e-swt:599:31:    toolAreaLayout.marginHeight(0)
~/efoo/src/esrc/scripts/eBrowser.e-swt:600:34:    toolAreaLayout.verticalSpacing(0)
~/efoo/src/esrc/scripts/eBrowser.e-swt:601:30:    toolAreaLayout.marginWidth(0)
~/efoo/src/esrc/scripts/eBrowser.e-swt:602:36:    toolAreaLayout.horizontalSpacing(0)
~/efoo/src/esrc/scripts/eBrowser.e-swt:603:22:    toolArea.setLayout(toolAreaLayout)
~/efoo/src/esrc/scripts/eBrowser.e-swt:604:55:    def taGridData := GRIDDATA(GRIDDATA.FILL_HORIZONTAL())
~/efoo/src/esrc/scripts/eBrowser.e-swt:606:26:    toolArea.setLayoutData(taGridData)
~/efoo/src/esrc/scripts/eBrowser.e-swt:609:74:    def toolbar := <widget:ToolBar>(toolArea, (SWT.HORIZONTAL() | SWT.FLAT()))
~/efoo/src/esrc/scripts/eBrowser.e-swt:610:25:    toolbar.setLayoutData(GRIDDATA())
~/efoo/src/esrc/scripts/eBrowser.e-swt:614:38:            to widgetSelected(event) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:615:22:                E.call(target, operation, [])
~/efoo/src/esrc/scripts/eBrowser.e-swt:619:58:        def button := <widget:ToolItem> (toolbar, SWT.PUSH())
~/efoo/src/esrc/scripts/eBrowser.e-swt:620:65:        def image := <swt:graphics.Image>(display, uri.openStream())
~/efoo/src/esrc/scripts/eBrowser.e-swt:621:23:        button.setImage(image)
~/efoo/src/esrc/scripts/eBrowser.e-swt:622:26:        button.setHotImage(image)
~/efoo/src/esrc/scripts/eBrowser.e-swt:623:29:        button.setToolTipText(tipText)
~/efoo/src/esrc/scripts/eBrowser.e-swt:624:35:        button.addSelectionListener(listener)
~/efoo/src/esrc/scripts/eBrowser.e-swt:634:20:    def separate() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:635:59:        def sep := <widget:ToolItem>(toolbar, SWT.SEPARATOR())
~/efoo/src/esrc/scripts/eBrowser.e-swt:651:31:    pasteUpdocButton.setEnabled(false)
~/efoo/src/esrc/scripts/eBrowser.e-swt:655:26:    elmerButton.setEnabled(false)
~/efoo/src/esrc/scripts/eBrowser.e-swt:664:30:    runHiLiteButton.setEnabled(false)
~/efoo/src/esrc/scripts/eBrowser.e-swt:668:24:    runButton.setEnabled(false)
~/efoo/src/esrc/scripts/eBrowser.e-swt:677:68:    def searchField := makeEText(toolArea, SWT.SINGLE() | SWT.BORDER())
~/efoo/src/esrc/scripts/eBrowser.e-swt:678:63:    searchField.setLayoutData(GRIDDATA(GRIDDATA.FILL_HORIZONTAL()))
~/efoo/src/esrc/scripts/eBrowser.e-swt:679:23:    searchField.setFont(currentFont)
~/efoo/src/esrc/scripts/eBrowser.e-swt:680:29:    searchField.setBackground(white)
~/efoo/src/esrc/scripts/eBrowser.e-swt:683:74:    def outlineSplitter := <swt:custom.SashForm>(mainFrame, SWT.HORIZONTAL())
~/efoo/src/esrc/scripts/eBrowser.e-swt:684:61:    outlineSplitter.setLayoutData(GRIDDATA(GRIDDATA.FILL_BOTH()))
~/efoo/src/esrc/scripts/eBrowser.e-swt:688:65:                    SWT.BORDER() | (SWT.V_SCROLL() | SWT.H_SCROLL()))
~/efoo/src/esrc/scripts/eBrowser.e-swt:689:24:    funcListPane.setFont(currentFont)
~/efoo/src/esrc/scripts/eBrowser.e-swt:690:30:    funcListPane.setBackground(white)
~/efoo/src/esrc/scripts/eBrowser.e-swt:692:25:    funcListPane.setItems([])
~/efoo/src/esrc/scripts/eBrowser.e-swt:697:63:                                                 SWT.HORIZONTAL())
~/efoo/src/esrc/scripts/eBrowser.e-swt:698:67:    varLineSplitter.setLayoutData(GRIDDATA(GRIDDATA.FILL_HORIZONTAL()))
~/efoo/src/esrc/scripts/eBrowser.e-swt:702:75:                              SWT.BORDER() | (SWT.V_SCROLL() | SWT.H_SCROLL()))
~/efoo/src/esrc/scripts/eBrowser.e-swt:703:20:    textPane.setFont(currentFont)
~/efoo/src/esrc/scripts/eBrowser.e-swt:704:26:    textPane.setBackground(white)
~/efoo/src/esrc/scripts/eBrowser.e-swt:706:32:    def requestTextPaneFocus() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:707:38:        <widget:Control>.transferFocus([mainFrame], textPane)
~/efoo/src/esrc/scripts/eBrowser.e-swt:714:24:    def openFile(file) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:715:41:        def path := file.getCanonicalPath()
~/efoo/src/esrc/scripts/eBrowser.e-swt:717:26:        if (openFiles.maps(path)) {
~/efoo/src/esrc/scripts/eBrowser.e-swt:718:38:            openFiles[path].bringToTop()
~/efoo/src/esrc/scripts/eBrowser.e-swt:719:45:        } else if (! (textModel.saveFileIsSet()) &&
~/efoo/src/esrc/scripts/eBrowser.e-swt:720:51:                     textPane.getText().trim().size() == 0) {
~/efoo/src/esrc/scripts/eBrowser.e-swt:721:37:            textModel.replaceStubFile(file)
~/efoo/src/esrc/scripts/eBrowser.e-swt:724:45:            textPane.setText(textModel.reload())
~/efoo/src/esrc/scripts/eBrowser.e-swt:735:33:    def reactToFilesDrop(files) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:736:31:        for i in 0..(files.size() - 1) {
~/efoo/src/esrc/scripts/eBrowser.e-swt:742:58:    def FileTransfer := <swt:dnd.FileTransfer>.getInstance()
~/efoo/src/esrc/scripts/eBrowser.e-swt:745:40:                           DND.DROP_LINK() |
~/efoo/src/esrc/scripts/eBrowser.e-swt:746:61:                             (DND.DROP_MOVE() | DND.DROP_COPY()))
~/efoo/src/esrc/scripts/eBrowser.e-swt:747:34:    textPaneDropTarget.setTransfer([FileTransfer])
~/efoo/src/esrc/scripts/eBrowser.e-swt:751:41:            def data := event.getDropData()
~/efoo/src/esrc/scripts/eBrowser.e-swt:756:30:        to dropAccept(event) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:760:56:                            FileTransfer.isSupportedType(
~/efoo/src/esrc/scripts/eBrowser.e-swt:761:53:                                event.currentDataType()))
~/efoo/src/esrc/scripts/eBrowser.e-swt:767:38:    textPaneDropTarget.addDropListener(fileDropListener)
~/efoo/src/esrc/scripts/eBrowser.e-swt:773:64:                                     SWT.BORDER() | SWT.V_SCROLL())
~/efoo/src/esrc/scripts/eBrowser.e-swt:774:23:    varListPane.setFont(currentFont)
~/efoo/src/esrc/scripts/eBrowser.e-swt:776:24:    varListPane.setItems([])
~/efoo/src/esrc/scripts/eBrowser.e-swt:778:41:        to doInsert() :void {eBrowser.insertVar()}
~/efoo/src/esrc/scripts/eBrowser.e-swt:779:40:        to doAlign() :void {eBrowser.alignVars()}
~/efoo/src/esrc/scripts/eBrowser.e-swt:788:36:        to mouseDoubleClick(event) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:790:61:            def varLineIndices := textModel.getVarLineIndices()
~/efoo/src/esrc/scripts/eBrowser.e-swt:792:58:              varLineIndices[varListPane.getSelectionIndex()]
~/efoo/src/esrc/scripts/eBrowser.e-swt:793:55:            def newPosition := textPane.getOffsetAtLine(selectedLineNum)
~/efoo/src/esrc/scripts/eBrowser.e-swt:795:50:            def offset := textPane.getOffsetAtLine(selectedLineNum + 1)
~/efoo/src/esrc/scripts/eBrowser.e-swt:796:33:            textPane.setSelection(newPosition, offset - 1)
~/efoo/src/esrc/scripts/eBrowser.e-swt:801:32:    varListPane.addMouseListener(varListPaneListener)
~/efoo/src/esrc/scripts/eBrowser.e-swt:805:42:        to doInsert() :void {eBrowser.insertFunc()}
~/efoo/src/esrc/scripts/eBrowser.e-swt:806:41:        to doAlign() :void {eBrowser.alignFuncs()}
~/efoo/src/esrc/scripts/eBrowser.e-swt:815:36:        to mouseDoubleClick(event) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:817:61:            def outlineIndices := textModel.getOutlineIndices()
~/efoo/src/esrc/scripts/eBrowser.e-swt:819:59:              outlineIndices[funcListPane.getSelectionIndex()]
~/efoo/src/esrc/scripts/eBrowser.e-swt:821:55:            def newPosition := textPane.getOffsetAtLine(selectedLineNum)
~/efoo/src/esrc/scripts/eBrowser.e-swt:824:38:              textPane.getOffsetAtLine(selectedLineNum + 1) - 1
~/efoo/src/esrc/scripts/eBrowser.e-swt:825:33:            textPane.setSelection(newPosition, newSelectionEnd)
~/efoo/src/esrc/scripts/eBrowser.e-swt:830:33:    funcListPane.addMouseListener(funcListPaneListener)
~/efoo/src/esrc/scripts/eBrowser.e-swt:841:58:    def statusPane := <widget:Label>(mainFrame, SWT.BORDER())
~/efoo/src/esrc/scripts/eBrowser.e-swt:842:22:    statusPane.setText("   ")
~/efoo/src/esrc/scripts/eBrowser.e-swt:843:62:    statusPane.setLayoutData(GRIDDATA(GRIDDATA.FILL_HORIZONTAL()))
~/efoo/src/esrc/scripts/eBrowser.e-swt:847:30:    outlineSplitter.setWeights([1, 3])
~/efoo/src/esrc/scripts/eBrowser.e-swt:848:30:    varLineSplitter.setWeights([4, 1])
~/efoo/src/esrc/scripts/eBrowser.e-swt:867:23:    def newFileFunc() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:871:20:    def openFunc() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:872:65:        def fileDialog := <widget:FileDialog>(mainFrame, SWT.OPEN())
~/efoo/src/esrc/scripts/eBrowser.e-swt:873:26:        fileDialog.setText("Pick File To Open")
~/efoo/src/esrc/scripts/eBrowser.e-swt:874:23:        fileDialog.open()
~/efoo/src/esrc/scripts/eBrowser.e-swt:875:46:        def fileName := fileDialog.getFileName()
~/efoo/src/esrc/scripts/eBrowser.e-swt:877:44:        def path := fileDialog.getFilterPath()
~/efoo/src/esrc/scripts/eBrowser.e-swt:879:45:        if (fileName != null && fileName.size() > 0) {
~/efoo/src/esrc/scripts/eBrowser.e-swt:886:33:    def saveFunc() :void {eBrowser.save()}
~/efoo/src/esrc/scripts/eBrowser.e-swt:887:22:    def saveAsFunc() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:888:65:        def fileDialog := <widget:FileDialog>(mainFrame, SWT.SAVE())
~/efoo/src/esrc/scripts/eBrowser.e-swt:889:26:        fileDialog.setText("Save File As")
~/efoo/src/esrc/scripts/eBrowser.e-swt:890:23:        fileDialog.open()
~/efoo/src/esrc/scripts/eBrowser.e-swt:891:46:        def fileName := fileDialog.getFileName()
~/efoo/src/esrc/scripts/eBrowser.e-swt:892:45:        if (fileName != null && fileName.size() > 0) {
~/efoo/src/esrc/scripts/eBrowser.e-swt:893:59:            def openFile := <file: fileDialog.getFilterPath()>[fileName]
~/efoo/src/esrc/scripts/eBrowser.e-swt:895:49:            def path := openFile.getCanonicalPath()
~/efoo/src/esrc/scripts/eBrowser.e-swt:897:30:            if (openFiles.maps(path)) {
~/efoo/src/esrc/scripts/eBrowser.e-swt:903:50:                textModel.setText(textPane.getText())
~/efoo/src/esrc/scripts/eBrowser.e-swt:904:32:                textModel.saveAs(path)
~/efoo/src/esrc/scripts/eBrowser.e-swt:911:26:    def makeFontLarger() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:912:55:        def fontData := (textPane.getFont().getFontData())[0]
~/efoo/src/esrc/scripts/eBrowser.e-swt:913:45:        fontData.setHeight(fontData.getHeight() + 2)
~/efoo/src/esrc/scripts/eBrowser.e-swt:915:26:        eBrowser.resetFont(currentFont)
~/efoo/src/esrc/scripts/eBrowser.e-swt:918:27:    def makeFontSmaller() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:919:55:        def fontData := (textPane.getFont().getFontData())[0]
~/efoo/src/esrc/scripts/eBrowser.e-swt:920:45:        fontData.setHeight(fontData.getHeight() - 2)
~/efoo/src/esrc/scripts/eBrowser.e-swt:922:26:        eBrowser.resetFont(currentFont)
~/efoo/src/esrc/scripts/eBrowser.e-swt:948:26:            def action() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:949:34:                eBrowser.setStatus(`Running script: $runnableName ...`)
~/efoo/src/esrc/scripts/eBrowser.e-swt:951:62:                    def source := folder[runnableName].getText()
~/efoo/src/esrc/scripts/eBrowser.e-swt:953:65:                    def result := script(textPane.getSelectedText())
~/efoo/src/esrc/scripts/eBrowser.e-swt:955:53:                          script.requestsSubstitution()
~/efoo/src/esrc/scripts/eBrowser.e-swt:967:34:                eBrowser.setStatus(`Script $runnableName completed.`)
~/efoo/src/esrc/scripts/eBrowser.e-swt:997:21:        to doOpen() :void {openFunc()}
~/efoo/src/esrc/scripts/eBrowser.e-swt:998:21:        to doSave() :void {saveFunc()}
~/efoo/src/esrc/scripts/eBrowser.e-swt:999:23:        to doSaveAs() :void {saveAsFunc()}
~/efoo/src/esrc/scripts/eBrowser.e-swt:1005:28:        to doSmallerFont() :void {makeFontSmaller()}
~/efoo/src/esrc/scripts/eBrowser.e-swt:1006:27:        to doLargerFont() :void {makeFontLarger()}
~/efoo/src/esrc/scripts/eBrowser.e-swt:1007:42:        to doReformat() :void {eBrowser.reformat()}
~/efoo/src/esrc/scripts/eBrowser.e-swt:1008:31:        to doSetImportsRoot() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1014:61:                            importsRootDirConf.getText().trim(),
~/efoo/src/esrc/scripts/eBrowser.e-swt:1016:54:            when (pathDialogVow) -> done(pathDialog) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1017:47:                if (pathDialog.optClickedButton() == "OK") {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1018:67:                    def trimmed := pathDialog.optEnteredText().trim()
~/efoo/src/esrc/scripts/eBrowser.e-swt:1019:46:                    importsRootDirConf.setText(trimmed)
~/efoo/src/esrc/scripts/eBrowser.e-swt:1024:36:        to doAbout() :void {eBrowser.about()}
~/efoo/src/esrc/scripts/eBrowser.e-swt:1067:38:    textPane.setText(textModel.getText())
~/efoo/src/esrc/scripts/eBrowser.e-swt:1068:27:    textPane.setCaretOffset(0)
~/efoo/src/esrc/scripts/eBrowser.e-swt:1070:21:    mainFrame.setSize(1000,700)
~/efoo/src/esrc/scripts/eBrowser.e-swt:1071:46:    mainFrame.setLocation(50 + entropy.nextInt() % 30,
~/efoo/src/esrc/scripts/eBrowser.e-swt:1072:46:                          50 + entropy.nextInt() % 30)
~/efoo/src/esrc/scripts/eBrowser.e-swt:1077:18:    mainFrame.open()
~/efoo/src/esrc/scripts/eBrowser.e-swt:1085:30:        to shellActivated(_) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1098:59:                when (optUpdateVow) -> doneUpdate(update) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1113:30:    mainFrame.addShellListener(windowActiveListener)
~/efoo/src/esrc/scripts/eBrowser.e-swt:1117:37:    def path := textModel.getFilePath()
~/efoo/src/esrc/scripts/eBrowser.e-swt:1128:56:        def reader := StringReaderMaker(textPane.getText())
~/efoo/src/esrc/scripts/eBrowser.e-swt:1129:23:        reader.getTwine(`file:$path`)
~/efoo/src/esrc/scripts/eBrowser.e-swt:1133:24:    def closeCleanly() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1135:23:        textModel.close()
~/efoo/src/esrc/scripts/eBrowser.e-swt:1138:29:            mainFrame.dispose()
~/efoo/src/esrc/scripts/eBrowser.e-swt:1145:19:        to save() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1146:46:            textModel.setText(textPane.getText())
~/efoo/src/esrc/scripts/eBrowser.e-swt:1147:39:            if (textModel.saveFileIsSet()) {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1149:34:                    textModel.save()
~/efoo/src/esrc/scripts/eBrowser.e-swt:1159:25:        to openImport() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1179:25:        to bringToTop() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1183:34:        to setStatus(statusText) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1184:30:            statusPane.setText(statusText)
~/efoo/src/esrc/scripts/eBrowser.e-swt:1187:19:        to find() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1188:30:            eBrowser.setStatus("Finding...")
~/efoo/src/esrc/scripts/eBrowser.e-swt:1189:51:            def textSize := textPane.getText().size()
~/efoo/src/esrc/scripts/eBrowser.e-swt:1190:59:            def startSearchIndex := textPane.getCaretOffset()
~/efoo/src/esrc/scripts/eBrowser.e-swt:1191:46:            def searchArea := textPane.getText(startSearchIndex,
~/efoo/src/esrc/scripts/eBrowser.e-swt:1193:60:            if (searchArea =~ `@{front}${searchField.getText()}@{tail}`) {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1194:49:                def startFoundIndex := front.size() + startSearchIndex
~/efoo/src/esrc/scripts/eBrowser.e-swt:1195:42:                textPane.setSelectionRange(startFoundIndex,
~/efoo/src/esrc/scripts/eBrowser.e-swt:1196:69:                                           searchField.getText().size())
~/efoo/src/esrc/scripts/eBrowser.e-swt:1197:39:                textPane.setCaretOffset(startFoundIndex +
~/efoo/src/esrc/scripts/eBrowser.e-swt:1198:68:                                          searchField.getText().size() )
~/efoo/src/esrc/scripts/eBrowser.e-swt:1199:34:                eBrowser.setStatus("Found")
~/efoo/src/esrc/scripts/eBrowser.e-swt:1200:38:                textPane.showSelection()
~/efoo/src/esrc/scripts/eBrowser.e-swt:1202:38:            } else {eBrowser.setStatus("Not Found")}
~/efoo/src/esrc/scripts/eBrowser.e-swt:1204:19:        to goto() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1207:55:            def newPosition := textPane.getOffsetAtLine(lineNum)
~/efoo/src/esrc/scripts/eBrowser.e-swt:1209:35:            textPane.setCaretOffset(newPosition)
~/efoo/src/esrc/scripts/eBrowser.e-swt:1211:55:            def endPosition := textPane.getOffsetAtLine(lineNum+1) - 1
~/efoo/src/esrc/scripts/eBrowser.e-swt:1213:37:                textPane.setSelection(newPosition, endPosition)
~/efoo/src/esrc/scripts/eBrowser.e-swt:1219:20:        to about() :void {popAboutBox()}
~/efoo/src/esrc/scripts/eBrowser.e-swt:1222:28:        to executeHiLite() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1224:65:            def selection := getTwine()(textPane.getSelection().x(),
~/efoo/src/esrc/scripts/eBrowser.e-swt:1225:65:                                        textPane.getSelection().y())
~/efoo/src/esrc/scripts/eBrowser.e-swt:1234:29:        to executeProgram() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1242:24:        to insertVar() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1243:56:            def insert := "" + (varListPane.getSelection())[0]
~/efoo/src/esrc/scripts/eBrowser.e-swt:1244:45:            if (insert != null && insert.size() > 0) {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1245:51:                def insertVarTrimmed := insert.trim()
~/efoo/src/esrc/scripts/eBrowser.e-swt:1251:25:        to insertFunc() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1252:57:            def insert := "" + (funcListPane.getSelection())[0]
~/efoo/src/esrc/scripts/eBrowser.e-swt:1253:45:            if (insert != null && insert.size() > 0) {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1269:51:                insertSection := insertSection.trim()
~/efoo/src/esrc/scripts/eBrowser.e-swt:1275:24:        to alignVars() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1277:62:              textPane.getLineAtOffset(textPane.getCaretOffset())
~/efoo/src/esrc/scripts/eBrowser.e-swt:1279:54:            def indices := textModel.getVarLineIndices()
~/efoo/src/esrc/scripts/eBrowser.e-swt:1280:47:            if (indices != null && indices.size() > 0) {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1281:39:                while (i < indices.size() && indices[i] < currentLine) {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1285:40:                varListPane.setSelection(i)
~/efoo/src/esrc/scripts/eBrowser.e-swt:1286:41:                varListPane.showSelection()
~/efoo/src/esrc/scripts/eBrowser.e-swt:1290:25:        to alignFuncs() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1292:62:              textPane.getLineAtOffset(textPane.getCaretOffset())
~/efoo/src/esrc/scripts/eBrowser.e-swt:1294:54:            def indices := textModel.getOutlineIndices()
~/efoo/src/esrc/scripts/eBrowser.e-swt:1295:47:            if (indices != null && indices.size() > 0) {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1296:39:                while (i < indices.size() && indices[i] < currentLine) {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1300:41:                funcListPane.setSelection(i)
~/efoo/src/esrc/scripts/eBrowser.e-swt:1301:42:                funcListPane.showSelection()
~/efoo/src/esrc/scripts/eBrowser.e-swt:1305:23:        to reformat() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1306:32:            textPane.setEditable(false)
~/efoo/src/esrc/scripts/eBrowser.e-swt:1307:30:            eBrowser.setStatus("Reformatting...")
~/efoo/src/esrc/scripts/eBrowser.e-swt:1309:25:            def after() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1311:56:                    textPane.setText(PrettyFeeder.pretty(getTwine()))
~/efoo/src/esrc/scripts/eBrowser.e-swt:1312:38:                    eBrowser.setStatus("Reformat Done.")
~/efoo/src/esrc/scripts/eBrowser.e-swt:1316:47:                } finally {textPane.setEditable(true)}
~/efoo/src/esrc/scripts/eBrowser.e-swt:1320:27:        to linesChanged() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1321:75:            configureUpdatedListPane(funcListPane, textModel.getOutlineList())
~/efoo/src/esrc/scripts/eBrowser.e-swt:1322:74:            configureUpdatedListPane(varListPane, textModel.getVarLineList())
~/efoo/src/esrc/scripts/eBrowser.e-swt:1324:28:        to resetFont(font) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1325:28:            textPane.setFont(font)
~/efoo/src/esrc/scripts/eBrowser.e-swt:1326:32:            funcListPane.setFont(font)
~/efoo/src/esrc/scripts/eBrowser.e-swt:1328:31:            varListPane.setFont(font)
~/efoo/src/esrc/scripts/eBrowser.e-swt:1330:25:        to pasteUpdoc() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1337:57:                def transferObject := SysClip.getContents(null)
~/efoo/src/esrc/scripts/eBrowser.e-swt:1344:52:                      transferObject.getTransferData(stringFlavor)
~/efoo/src/esrc/scripts/eBrowser.e-swt:1350:37:            for each in rawcode.split("\n") {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1359:28:        to windowClosing() :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1363:59:                if (textPane.getText() == textModel.getText()) {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1367:64:                        "Modified File " + textModel.getFileName(),
~/efoo/src/esrc/scripts/eBrowser.e-swt:1371:79:                    when (saveDecision <- optClickedButton()) -> done(answer) :void {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1378:41:                            eBrowser.save()
~/efoo/src/esrc/scripts/eBrowser.e-swt:1392:33:def commandArgs := interp.getArgs()
~/efoo/src/esrc/scripts/eBrowser.e-swt:1393:20:if (commandArgs.size() > 0) {
~/efoo/src/esrc/scripts/eBrowser.e-swt:1399:44:    openFiles[optBrowseFile.getCanonicalPath()] := browser
~/efoo/src/esrc/scripts/eBrowser.e-swt:1402:17:interp.blockAtTop()
~/efoo/src/esrc/scripts/eChat.e-swt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/eChat.e-swt:7:21:def traceline(text) :void {println(text)}
~/efoo/src/esrc/scripts/eChat.e-swt:65:31:def offerMyAddress(file, uri) :void {
~/efoo/src/esrc/scripts/eChat.e-swt:72:50:    def button := <widget:Button>(parent, SWT.PUSH())
~/efoo/src/esrc/scripts/eChat.e-swt:73:18:    button.setText(text)
~/efoo/src/esrc/scripts/eChat.e-swt:134:19:    chatWin.setText("eChat")
~/efoo/src/esrc/scripts/eChat.e-swt:135:21:    chatWin.setBounds(30, 30, 600, 300)
~/efoo/src/esrc/scripts/eChat.e-swt:138:34:        to widgetDisposed(event) :void {
~/efoo/src/esrc/scripts/eChat.e-swt:139:32:            chatController.leave()
~/efoo/src/esrc/scripts/eChat.e-swt:140:32:            interp.continueAtTop()
~/efoo/src/esrc/scripts/eChat.e-swt:143:30:    chatWin.addDisposeListener(winDisposeListener)
~/efoo/src/esrc/scripts/eChat.e-swt:146:36:    def attachAction(button, verb) :void {
~/efoo/src/esrc/scripts/eChat.e-swt:148:44:            to widgetSelected(event) :void {E.call(chatController, verb, [])}
~/efoo/src/esrc/scripts/eChat.e-swt:150:35:        button.addSelectionListener(listener)
~/efoo/src/esrc/scripts/eChat.e-swt:154:72:    def setNameField := <widget:Text>(chatWin, SWT.SINGLE() | SWT.BORDER())
~/efoo/src/esrc/scripts/eChat.e-swt:173:74:        chatWin, (SWT.MULTI() | SWT.WRAP()) | (SWT.BORDER() | SWT.V_SCROLL()))
~/efoo/src/esrc/scripts/eChat.e-swt:175:24:    chatTextArea.setText("read conversation here")
~/efoo/src/esrc/scripts/eChat.e-swt:178:74:    def nextMessageBox := <widget:Text>(chatWin, SWT.SINGLE() | SWT.BORDER())
~/efoo/src/esrc/scripts/eChat.e-swt:179:26:    nextMessageBox.setText("type message here")
~/efoo/src/esrc/scripts/eChat.e-swt:193:16:    chatWin.open()
~/efoo/src/esrc/scripts/eChat.e-swt:205:49:        to setButtonsForEstablishedConnection() :void {
~/efoo/src/esrc/scripts/eChat.e-swt:268:42:    def showMessage(senderName, message) :void {
~/efoo/src/esrc/scripts/eChat.e-swt:273:19:        to send() :void {
~/efoo/src/esrc/scripts/eChat.e-swt:280:24:        to setMyName() :void {
~/efoo/src/esrc/scripts/eChat.e-swt:287:24:        to offerSelf() :void {
~/efoo/src/esrc/scripts/eChat.e-swt:294:20:        to leave() :void {
~/efoo/src/esrc/scripts/eChat.e-swt:299:29:        to receive(message) :void {
~/efoo/src/esrc/scripts/eChat.e-swt:308:57:            Ref.whenBroken(myFriend, def observer(prom) :void {
~/efoo/src/esrc/scripts/eChat.e-swt:314:25:        to findFriend() :void {
~/efoo/src/esrc/scripts/eChat.e-swt:321:46:                when (nameVow) -> done(name) :void {
~/efoo/src/esrc/scripts/eChat.e-swt:326:45:                    chatController.disconnect("friend is unreachable")
~/efoo/src/esrc/scripts/eChat.e-swt:330:29:        to disconnect(desc) :void {
~/efoo/src/esrc/scripts/eChat.e-swt:342:17:interp.blockAtTop()
~/efoo/src/esrc/scripts/eConfig.e-awt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/eConfig.e-awt:47:35:def traceline(str) :void { stderr.println(str) }
~/efoo/src/esrc/scripts/eConfig.e-awt:51:36:def SysProps := System.getProperties()
~/efoo/src/esrc/scripts/eConfig.e-awt:61:15:    System.exit(-1)
~/efoo/src/esrc/scripts/eConfig.e-awt:66:24:if (SysProps.getProperty("e.swingLnF",null) == "none") {
~/efoo/src/esrc/scripts/eConfig.e-awt:69:15:    System.exit(0)
~/efoo/src/esrc/scripts/eConfig.e-awt:73:22:root.addWindowListener(def closeListener {
~/efoo/src/esrc/scripts/eConfig.e-awt:74:25:    to windowClosing(_) :void {
~/efoo/src/esrc/scripts/eConfig.e-awt:75:28:        interp.continueAtTop()
~/efoo/src/esrc/scripts/eConfig.e-awt:81:40:okButton.setBackground(<awt:Color>.white())
~/efoo/src/esrc/scripts/eConfig.e-awt:83:26:okButton.addActionListener(def okListener {
~/efoo/src/esrc/scripts/eConfig.e-awt:84:27:    to actionPerformed(_) :void {
~/efoo/src/esrc/scripts/eConfig.e-awt:85:28:        interp.continueAtTop()
~/efoo/src/esrc/scripts/eConfig.e-awt:90:57:                            <swing:SwingConstants>.CENTER())
~/efoo/src/esrc/scripts/eConfig.e-awt:92:25:root.getContentPane().add(JPanel`$label.Y
~/efoo/src/esrc/scripts/eConfig.e-awt:97:52:def iconImage := <swing:ImageIcon>(iconURL).getImage()
~/efoo/src/esrc/scripts/eConfig.e-awt:98:17:root.setIconImage(iconImage)
~/efoo/src/esrc/scripts/eConfig.e-awt:101:9:root.pack()
~/efoo/src/esrc/scripts/eConfig.e-awt:102:14:root.setBounds(120, 100, 300, 100)
~/efoo/src/esrc/scripts/eConfig.e-awt:103:9:root.show()
~/efoo/src/esrc/scripts/eConfig.e-awt:104:28:HocusFocusMaker.requestFocus(okButton)
~/efoo/src/esrc/scripts/eConfig.e-awt:105:17:interp.blockAtTop()
~/efoo/src/esrc/scripts/echat.e-awt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/echat.e-awt:9:20:def traceline(str) :void {
~/efoo/src/esrc/scripts/echat.e-awt:10:18:    stderr.println(str)
~/efoo/src/esrc/scripts/echat.e-awt:14:31:traceline(introducer.negotiable())
~/efoo/src/esrc/scripts/echat.e-awt:36:18:if (interp.getArgs() =~ [`-save`, filename]) {
~/efoo/src/esrc/scripts/echat.e-awt:77:15:    dialog.show()
~/efoo/src/esrc/scripts/echat.e-awt:78:30:    var path := dialog.getFile()
~/efoo/src/esrc/scripts/echat.e-awt:80:35:        path := dialog.getDirectory() + path
~/efoo/src/esrc/scripts/echat.e-awt:91:56:                                   <awt:FileDialog>.SAVE())
~/efoo/src/esrc/scripts/echat.e-awt:92:15:    dialog.show()
~/efoo/src/esrc/scripts/echat.e-awt:93:37:    var addressName := dialog.getFile()
~/efoo/src/esrc/scripts/echat.e-awt:95:42:        addressName := dialog.getDirectory() + addressName
~/efoo/src/esrc/scripts/echat.e-awt:104:31:def offerMyAddress(file, uri) :void {
~/efoo/src/esrc/scripts/echat.e-awt:106:16:    file.setText(uri)
~/efoo/src/esrc/scripts/echat.e-awt:109:44:def set1LineComponentParameters(component) :void {
~/efoo/src/esrc/scripts/echat.e-awt:110:30:    component.setPreferredSize(<awt:Dimension>(150,25))
~/efoo/src/esrc/scripts/echat.e-awt:111:28:    component.setMaximumSize(<awt:Dimension>(1000,25))
~/efoo/src/esrc/scripts/echat.e-awt:112:27:    component.setAlignmentX(0.5)
~/efoo/src/esrc/scripts/echat.e-awt:118:42:    def chatPane := chatWin.getContentPane()
~/efoo/src/esrc/scripts/echat.e-awt:120:22:    chatPane.setLayout(border)
~/efoo/src/esrc/scripts/echat.e-awt:123:33:        to windowClosing(event) :void {
~/efoo/src/esrc/scripts/echat.e-awt:124:32:            chatController.leave()
~/efoo/src/esrc/scripts/echat.e-awt:126:32:            interp.continueAtTop()
~/efoo/src/esrc/scripts/echat.e-awt:130:29:    chatWin.addWindowListener(windowListener)
~/efoo/src/esrc/scripts/echat.e-awt:142:39:            to actionPerformed(event) :void {
~/efoo/src/esrc/scripts/echat.e-awt:143:22:                E.call(chatController, verb, [])
~/efoo/src/esrc/scripts/echat.e-awt:146:32:        button.addActionListener(buttonListener)
~/efoo/src/esrc/scripts/echat.e-awt:156:30:    offerChatButton.setEnabled(false)
~/efoo/src/esrc/scripts/echat.e-awt:160:31:    findFriendButton.setEnabled(false)
~/efoo/src/esrc/scripts/echat.e-awt:164:31:    chatScroller.setMaximumSize(<awt:Dimension>(2000,1000))
~/efoo/src/esrc/scripts/echat.e-awt:165:33:    chatScroller.setPreferredSize(<awt:Dimension>(250,80))
~/efoo/src/esrc/scripts/echat.e-awt:169:28:    chatTextArea.setLineWrap(true)
~/efoo/src/esrc/scripts/echat.e-awt:170:34:    chatScroller.getViewport().add(chatTextArea)
~/efoo/src/esrc/scripts/echat.e-awt:175:16:    chatPane.add(nextMessageBox)
~/efoo/src/esrc/scripts/echat.e-awt:180:32:    sendMessageButton.setEnabled(false)
~/efoo/src/esrc/scripts/echat.e-awt:182:16:    chatPane.add(JPanel`$setNameButton
~/efoo/src/esrc/scripts/echat.e-awt:188:16:    chatWin.pack()
~/efoo/src/esrc/scripts/echat.e-awt:189:16:    chatWin.show()
~/efoo/src/esrc/scripts/echat.e-awt:208:52:        to receive(message) :void { chatController.receive(message) }
~/efoo/src/esrc/scripts/echat.e-awt:210:40:            chatController.receiveFriend(friend, name)
~/efoo/src/esrc/scripts/echat.e-awt:212:61:        to friendIsLeaving() :void { chatController.friendIsLeaving() }
~/efoo/src/esrc/scripts/echat.e-awt:213:21:        to revoke() :void { chatController := null }
~/efoo/src/esrc/scripts/echat.e-awt:229:46:        def showMessage(senderName, message) :void {
~/efoo/src/esrc/scripts/echat.e-awt:230:43:            chatUI.getChatTextArea().append(senderName +" says:\t"+ message + "\n")
~/efoo/src/esrc/scripts/echat.e-awt:232:32:        def showDebug(message) :void {
~/efoo/src/esrc/scripts/echat.e-awt:240:23:            to send() :void {
~/efoo/src/esrc/scripts/echat.e-awt:241:58:                def nextMsgBox := chatUI.getNextMessageBox()
~/efoo/src/esrc/scripts/echat.e-awt:242:53:                def nextMessage := nextMsgBox.getText()
~/efoo/src/esrc/scripts/echat.e-awt:243:34:                nextMsgBox.setText("")
~/efoo/src/esrc/scripts/echat.e-awt:248:28:            to setMyName() :void {
~/efoo/src/esrc/scripts/echat.e-awt:249:61:                myName := <swing:JOptionPane>.showInputDialog(
~/efoo/src/esrc/scripts/echat.e-awt:253:51:                    chatUI.getNameButton().setLabel(myName)
~/efoo/src/esrc/scripts/echat.e-awt:254:53:                    chatUI.getNameButton().setEnabled(false)
~/efoo/src/esrc/scripts/echat.e-awt:255:58:                    chatUI.getOfferChatButton().setEnabled(true)
~/efoo/src/esrc/scripts/echat.e-awt:256:59:                    chatUI.getFindFriendButton().setEnabled(true)
~/efoo/src/esrc/scripts/echat.e-awt:259:28:            to offerSelf() :void {
~/efoo/src/esrc/scripts/echat.e-awt:260:66:                myAddressFile := requestSaveFile(chatUI.getChatWin())
~/efoo/src/esrc/scripts/echat.e-awt:262:53:                    def uri := introducer.sturdyToURI(sturdyChatReceiver)
~/efoo/src/esrc/scripts/echat.e-awt:266:24:            to leave() :void {
~/efoo/src/esrc/scripts/echat.e-awt:271:41:                chatController.disconnect("is being left")
~/efoo/src/esrc/scripts/echat.e-awt:273:33:            to receive(message) :void {
~/efoo/src/esrc/scripts/echat.e-awt:280:56:                chatUI.getSendMessageButton().setEnabled(true)
~/efoo/src/esrc/scripts/echat.e-awt:281:54:                chatUI.getOfferChatButton().setEnabled(false)
~/efoo/src/esrc/scripts/echat.e-awt:282:55:                chatUI.getFindFriendButton().setEnabled(false)
~/efoo/src/esrc/scripts/echat.e-awt:283:47:                chatUI.getChatTextArea().append(myFriendName + " has arrived\n")
~/efoo/src/esrc/scripts/echat.e-awt:284:59:                Ref.whenBroken(friend, def observer(prom) :void {
~/efoo/src/esrc/scripts/echat.e-awt:285:45:                    chatController.disconnect("disconnected")
~/efoo/src/esrc/scripts/echat.e-awt:290:29:            to findFriend() :void {
~/efoo/src/esrc/scripts/echat.e-awt:291:60:                def file := findFriendFile(chatUI.getChatWin())
~/efoo/src/esrc/scripts/echat.e-awt:293:49:                    def friendURI := file.getText()
~/efoo/src/esrc/scripts/echat.e-awt:299:40:                      done(friendName) :void {
~/efoo/src/esrc/scripts/echat.e-awt:302:52:                        chatController.receiveFriend(friend, friendName)
~/efoo/src/esrc/scripts/echat.e-awt:305:49:                        chatController.disconnect("is unreachable")
~/efoo/src/esrc/scripts/echat.e-awt:311:34:            to friendIsLeaving() :void {
~/efoo/src/esrc/scripts/echat.e-awt:312:41:                chatController.disconnect("is leaving")
~/efoo/src/esrc/scripts/echat.e-awt:314:33:            to disconnect(desc) :void {
~/efoo/src/esrc/scripts/echat.e-awt:315:56:                chatUI.getSendMessageButton().setEnabled(false)
~/efoo/src/esrc/scripts/echat.e-awt:319:47:                chatUI.getChatTextArea().append(myFriendName + " " + desc + "\n")
~/efoo/src/esrc/scripts/echat.e-awt:322:37:                myChatReceiver.revoke()
~/efoo/src/esrc/scripts/echat.e-awt:329:24:traceline(interp.getArgs())
~/efoo/src/esrc/scripts/echat.e-awt:330:17:interp.blockAtTop()
~/efoo/src/esrc/scripts/evalServer.e:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/evalServer.e:6:35:def traceline(str) :void { stderr.println(`$\nevalServer $str`) }
~/efoo/src/esrc/scripts/evalServer.e:58:25:                to gc() :void {
~/efoo/src/esrc/scripts/evalServer.e:82:56:    to releaseService(evaluatorMaker :rcvr[SturdyRef]) :void {
~/efoo/src/esrc/scripts/evalServer.e:96:22:    to shutdownNow() :void {
~/efoo/src/esrc/scripts/evalServer.e:97:28:        interp.continueAtTop()
~/efoo/src/esrc/scripts/evalServer.e:101:19:introducer.onTheAir()
~/efoo/src/esrc/scripts/evalServer.e:122:70:def [optionsMap, args] := interimArgParser(optionsDesc, interp.getArgs())
~/efoo/src/esrc/scripts/evalServer.e:130:23:when (ack) -> done(_) :void {
~/efoo/src/esrc/scripts/evalServer.e:137:17:interp.blockAtTop()
~/efoo/src/esrc/scripts/evalServer.updoc:1:0:# Copyright 2002 Combex, Inc. under the terms of the MIT X license
~/efoo/src/esrc/scripts/evalServer.updoc:4:21:? introducer.onTheAir()
~/efoo/src/esrc/scripts/evalServer.updoc:10:34:? def evalServerRcvr := sr.getRcvr()
~/efoo/src/esrc/scripts/evalServer.updoc:119:16:? Ref.isResolved(sePass1)
~/efoo/src/esrc/scripts/evalServer.updoc:122:16:? Ref.isResolved(evalServerPass)
~/efoo/src/esrc/scripts/evalServerPool.e:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/evalServerPool.e:6:35:def traceline(str) :void { stderr.println(`$\nevalServerPool $str`) }
~/efoo/src/esrc/scripts/evalServerPool.e:12:25:var members := [].diverge()
~/efoo/src/esrc/scripts/evalServerPool.e:15:25:var offline := [].diverge()
~/efoo/src/esrc/scripts/evalServerPool.e:18:24:var active := [].diverge()
~/efoo/src/esrc/scripts/evalServerPool.e:21:27:var available := [].diverge()
~/efoo/src/esrc/scripts/evalServerPool.e:25:30:var busy := [].asMap().diverge()
~/efoo/src/esrc/scripts/evalServerPool.e:28:25:var waiting := [].diverge()
~/efoo/src/esrc/scripts/evalServerPool.e:31:26:    introducer.sturdyToURI(makeSturdyRef(obj))
~/efoo/src/esrc/scripts/evalServerPool.e:34:20:def checkWaiting() :void {
~/efoo/src/esrc/scripts/evalServerPool.e:35:20:    if (waiting.size() >= 1) {
~/efoo/src/esrc/scripts/evalServerPool.e:38:29:            waiting.removeRun(0, 1)
~/efoo/src/esrc/scripts/evalServerPool.e:61:39:    to connect(evalServer :SturdyRef) :void {
~/efoo/src/esrc/scripts/evalServerPool.e:63:20:        members.push(evalServer)
~/efoo/src/esrc/scripts/evalServerPool.e:64:36:        def es := evalServer.getRcvr()
~/efoo/src/esrc/scripts/evalServerPool.e:65:19:        active.push(es)
~/efoo/src/esrc/scripts/evalServerPool.e:66:22:        available.push(es)
~/efoo/src/esrc/scripts/evalServerPool.e:69:43:        Ref.whenBroken(es, def cleanup(_) :void {
~/efoo/src/esrc/scripts/evalServerPool.e:71:36:            var i := active.indexOf1(es)
~/efoo/src/esrc/scripts/evalServerPool.e:73:32:                active.removeRun(i, i + 1)
~/efoo/src/esrc/scripts/evalServerPool.e:76:35:            i := available.indexOf1(es)
~/efoo/src/esrc/scripts/evalServerPool.e:78:35:                available.removeRun(i, i + 1)
~/efoo/src/esrc/scripts/evalServerPool.e:83:34:                    busy.removeKey(key)
~/efoo/src/esrc/scripts/evalServerPool.e:87:24:            offline.push(evalServer)
~/efoo/src/esrc/scripts/evalServerPool.e:116:47:        var result := ` members: ${members.size()}
~/efoo/src/esrc/scripts/evalServerPool.e:117:23:offline: ${offline.size()}
~/efoo/src/esrc/scripts/evalServerPool.e:118:21:active: ${active.size()}
~/efoo/src/esrc/scripts/evalServerPool.e:119:27:available: ${available.size()}
~/efoo/src/esrc/scripts/evalServerPool.e:120:23:waiting: ${waiting.size()}
~/efoo/src/esrc/scripts/evalServerPool.e:123:45:            def uri := introducer.sturdyToURI(sr)
~/efoo/src/esrc/scripts/evalServerPool.e:138:22:    to shutdownNow() :void {
~/efoo/src/esrc/scripts/evalServerPool.e:142:28:        interp.continueAtTop()
~/efoo/src/esrc/scripts/evalServerPool.e:173:23:        if (active.size() < n) {
~/efoo/src/esrc/scripts/evalServerPool.e:175:43:            for i in 0 ..! (n - active.size()) {
~/efoo/src/esrc/scripts/evalServerPool.e:180:55:                                               [].asMap(),
~/efoo/src/esrc/scripts/evalServerPool.e:186:30:            if (available.size() < n) {
~/efoo/src/esrc/scripts/evalServerPool.e:191:43:                var optMakers := [].diverge()
~/efoo/src/esrc/scripts/evalServerPool.e:198:39:                    available.removeRun(0, 1)
~/efoo/src/esrc/scripts/evalServerPool.e:202:81:                    when (es <- getAccessToService()) -> done(maker :SturdyRef) :void {
~/efoo/src/esrc/scripts/evalServerPool.e:206:57:                            clientFacet.releaseEvalServer(maker)
~/efoo/src/esrc/scripts/evalServerPool.e:208:42:                            optMakers.push(maker)
~/efoo/src/esrc/scripts/evalServerPool.e:209:46:                            if (optMakers.size() == n) {
~/efoo/src/esrc/scripts/evalServerPool.e:211:67:                                resolver.resolve(optMakers.snapshot())
~/efoo/src/esrc/scripts/evalServerPool.e:222:61:                                clientFacet.releaseEvalServer(maker)
~/efoo/src/esrc/scripts/evalServerPool.e:224:42:                            resolver.smash(problem)
~/efoo/src/esrc/scripts/evalServerPool.e:234:24:        if (waiting.size() >= 1 || ! (isSatisfied())) {
~/efoo/src/esrc/scripts/evalServerPool.e:237:24:            waiting.push(isSatisfied)
~/efoo/src/esrc/scripts/evalServerPool.e:256:40:        clientFacet.requestEvalServerSet(1) <- get(0)
~/efoo/src/esrc/scripts/evalServerPool.e:269:44:    to releaseEvalServer(maker :SturdyRef) :void {
~/efoo/src/esrc/scripts/evalServerPool.e:271:22:        busy.removeKey(maker)
~/efoo/src/esrc/scripts/evalServerPool.e:273:22:        available.push(es)
~/efoo/src/esrc/scripts/evalServerPool.e:278:19:introducer.onTheAir()
~/efoo/src/esrc/scripts/evalServerPool.e:305:70:def [optionsMap, args] := interimArgParser(optionsDesc, interp.getArgs())
~/efoo/src/esrc/scripts/evalServerPool.e:309:35:def exportFacet(optionName, face) :void {
~/efoo/src/esrc/scripts/evalServerPool.e:310:29:    for arg in optionsMap.get(optionName, []) {
~/efoo/src/esrc/scripts/evalServerPool.e:311:63:        when (exportCap(makeSturdyRef(face), arg)) -> done(_) :void {
~/efoo/src/esrc/scripts/evalServerPool.e:325:17:interp.blockAtTop()
~/efoo/src/esrc/scripts/findall.e:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/findall.e:12:27:def find(file, substring) :void {
~/efoo/src/esrc/scripts/findall.e:14:24:        if (line.indexOf(substring) != -1) {
~/efoo/src/esrc/scripts/findall.e:15:30:            print(file.getPath() + ":" + num + ":" + line)
~/efoo/src/esrc/scripts/findall.e:27:38:def findall(dirfile, ext, substring) :void {
~/efoo/src/esrc/scripts/findall.e:28:27:    if (dirfile.isDirectory()) {
~/efoo/src/esrc/scripts/findall.e:32:41:    } else if (dirfile.getName().endsWith(ext)) {
~/efoo/src/esrc/scripts/findall.e:37:26:def args := interp.getArgs()
~/efoo/src/esrc/scripts/findall.e:38:13:if (args.size() != 3) {
~/efoo/src/esrc/scripts/fixImports.e:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/fixImports.e:8:25:if (interp.getArgs().size() != 1) {
~/efoo/src/esrc/scripts/fixImports.e:12:32:fixImports(<file: interp.getArgs()[0]>)
~/efoo/src/esrc/scripts/fixdoc.e:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/fixdoc.e:43:25:def fix(filedir, level) :void {
~/efoo/src/esrc/scripts/fixdoc.e:52:31:        text := text.replaceAll("BODY BGCOLOR=\"white\"",
~/efoo/src/esrc/scripts/fixdoc.e:69:31:        text := text.replaceAll("{@docroot}/",
~/efoo/src/esrc/scripts/fixdoc.e:77:26:for path in interp.getArgs() {
~/efoo/src/esrc/scripts/jed.e-swt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/jed.e-swt:6:20:def traceline(str) :void { stderr.println(str) }
~/efoo/src/esrc/scripts/jed.e-swt:27:28:def activate(shell :Shell) :void {
~/efoo/src/esrc/scripts/jed.e-swt:31:16:def shutdown() :void {
~/efoo/src/esrc/scripts/newlines.e:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/newlines.e:10:23:def write(file, text) :void {
~/efoo/src/esrc/scripts/newlines.e:13:14:        E.call(fw, "write(String)", [text])
~/efoo/src/esrc/scripts/newlines.e:15:16:        fw.close()
~/efoo/src/esrc/scripts/newlines.e:87:23:def files := [].diverge()
~/efoo/src/esrc/scripts/newlines.e:89:25:for arg in interp.getArgs() {
~/efoo/src/esrc/scripts/newlines.e:93:23:            System.exit(0)
~/efoo/src/esrc/scripts/newlines.e:114:22:            files.push(<file: arg>)
~/efoo/src/esrc/scripts/newlines.e:121:15:    System.exit(-1)
~/efoo/src/esrc/scripts/newlines.e:124:14:if (files.size() == 0) {
~/efoo/src/esrc/scripts/newlines.e:127:15:    System.exit(-1)
~/efoo/src/esrc/scripts/newlines.e:134:39:        def lastDot := name.lastIndexOf(".")
~/efoo/src/esrc/scripts/newlines.e:135:44:        def ext := name(lastDot+1, name.size())
~/efoo/src/esrc/scripts/newlines.e:136:36:        def isText := extensions.get(ext, null)
~/efoo/src/esrc/scripts/newlines.e:140:30:                stderr.println(`"$file" unregognized extension`)
~/efoo/src/esrc/scripts/newlines.e:146:36:            def text := file.getText()
~/efoo/src/esrc/scripts/pasteRun.e-awt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/pasteRun.e-awt:6:16:def trace(out) :void {
~/efoo/src/esrc/scripts/pasteRun.e-awt:9:39:def addComponent(container,component) :void {
~/efoo/src/esrc/scripts/pasteRun.e-awt:10:10:    E.call(container, "add(Component)",[component])
~/efoo/src/esrc/scripts/pasteRun.e-awt:15:71:    def SysClip := <awt:Toolkit>.getDefaultToolkit().getSystemClipboard()
~/efoo/src/esrc/scripts/pasteRun.e-awt:17:45:    def transferObject := SysClip.getContents(null)
~/efoo/src/esrc/scripts/pasteRun.e-awt:20:70:        def stringFlavor := <awt:datatransfer.DataFlavor>.stringFlavor()
~/efoo/src/esrc/scripts/pasteRun.e-awt:22:54:        pastedString := transferObject.getTransferData(stringFlavor)
~/efoo/src/esrc/scripts/pasteRun.e-awt:26:39:def interpret(sourceString, outPlace) :void {
~/efoo/src/esrc/scripts/pasteRun.e-awt:31:25:        to blockAtTop() :void {
~/efoo/src/esrc/scripts/pasteRun.e-awt:34:28:        to continueAtTop() :void {
~/efoo/src/esrc/scripts/pasteRun.e-awt:48:31:        def result := tree.eval(scope)
~/efoo/src/esrc/scripts/pasteRun.e-awt:50:23:        outPlace.append("\n# value: " + result)
~/efoo/src/esrc/scripts/pasteRun.e-awt:53:23:        outPlace.append("\n# problem: " + problem)
~/efoo/src/esrc/scripts/pasteRun.e-awt:57:47:def set1LineComponentParameters(theComponent) :void {
~/efoo/src/esrc/scripts/pasteRun.e-awt:58:33:    theComponent.setPreferredSize(<awt:Dimension>(150,25))
~/efoo/src/esrc/scripts/pasteRun.e-awt:59:31:    theComponent.setMaximumSize(<awt:Dimension>(1000,25))
~/efoo/src/esrc/scripts/pasteRun.e-awt:60:30:    theComponent.setAlignmentX(0.5)
~/efoo/src/esrc/scripts/pasteRun.e-awt:62:24:def pasteRunWinMaker() :void {
~/efoo/src/esrc/scripts/pasteRun.e-awt:65:40:    addComponent(pasteWin.getContentPane(), pastePane)
~/efoo/src/esrc/scripts/pasteRun.e-awt:70:26:    resultText.setLineWrap(true)
~/efoo/src/esrc/scripts/pasteRun.e-awt:72:33:    resultScroller.setMaximumSize(<awt:Dimension>(2000,1000))
~/efoo/src/esrc/scripts/pasteRun.e-awt:73:35:    resultScroller.setPreferredSize(<awt:Dimension>(200,60))
~/efoo/src/esrc/scripts/pasteRun.e-awt:74:43:    addComponent(resultScroller.getViewport(), resultText)
~/efoo/src/esrc/scripts/pasteRun.e-awt:76:17:    pasteWin.pack()
~/efoo/src/esrc/scripts/pasteRun.e-awt:78:39:        to actionPerformed (theEvent) :void {
~/efoo/src/esrc/scripts/pasteRun.e-awt:80:29:            resultText.append(sourceText)
~/efoo/src/esrc/scripts/pasteRun.e-awt:84:33:    pasteButton.addActionListener(myPasteRunButtonListener)
~/efoo/src/esrc/scripts/pasteRun.e-awt:85:17:    pasteWin.show()
~/efoo/src/esrc/scripts/pasteRun.e-awt:87:36:        to windowClosing(theEvent) :void {
~/efoo/src/esrc/scripts/pasteRun.e-awt:88:32:            interp.continueAtTop()
~/efoo/src/esrc/scripts/pasteRun.e-awt:92:30:    pasteWin.addWindowListener(myWindowListener)
~/efoo/src/esrc/scripts/pasteRun.e-awt:96:17:interp.blockAtTop()
~/efoo/src/esrc/scripts/persist-echat.e-awt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/persist-echat.e-awt:9:20:def traceline(str) :void {
~/efoo/src/esrc/scripts/persist-echat.e-awt:10:18:    stderr.println(str)
~/efoo/src/esrc/scripts/persist-echat.e-awt:14:31:traceline(introducer.negotiable())
~/efoo/src/esrc/scripts/persist-echat.e-awt:34:41:    introducer.sturdyFromURI(uri).getRcvr()
~/efoo/src/esrc/scripts/persist-echat.e-awt:42:15:    dialog.show()
~/efoo/src/esrc/scripts/persist-echat.e-awt:43:30:    var path := dialog.getFile()
~/efoo/src/esrc/scripts/persist-echat.e-awt:45:35:        path := dialog.getDirectory() + path
~/efoo/src/esrc/scripts/persist-echat.e-awt:56:56:                                   <awt:FileDialog>.SAVE())
~/efoo/src/esrc/scripts/persist-echat.e-awt:57:15:    dialog.show()
~/efoo/src/esrc/scripts/persist-echat.e-awt:58:37:    var addressName := dialog.getFile()
~/efoo/src/esrc/scripts/persist-echat.e-awt:60:42:        addressName := dialog.getDirectory() + addressName
~/efoo/src/esrc/scripts/persist-echat.e-awt:69:31:def offerMyAddress(file, uri) :void {
~/efoo/src/esrc/scripts/persist-echat.e-awt:71:16:    file.setText(uri)
~/efoo/src/esrc/scripts/persist-echat.e-awt:74:44:def set1LineComponentParameters(component) :void {
~/efoo/src/esrc/scripts/persist-echat.e-awt:75:30:    component.setPreferredSize(<awt:Dimension>(150,25))
~/efoo/src/esrc/scripts/persist-echat.e-awt:76:28:    component.setMaximumSize(<awt:Dimension>(1000,25))
~/efoo/src/esrc/scripts/persist-echat.e-awt:77:27:    component.setAlignmentX(0.5)
~/efoo/src/esrc/scripts/persist-echat.e-awt:83:42:    def chatPane := chatWin.getContentPane()
~/efoo/src/esrc/scripts/persist-echat.e-awt:85:22:    chatPane.setLayout(border)
~/efoo/src/esrc/scripts/persist-echat.e-awt:88:33:        to windowClosing(event) :void {
~/efoo/src/esrc/scripts/persist-echat.e-awt:89:32:            chatController.leave()
~/efoo/src/esrc/scripts/persist-echat.e-awt:91:32:            interp.continueAtTop()
~/efoo/src/esrc/scripts/persist-echat.e-awt:95:29:    chatWin.addWindowListener(windowListener)
~/efoo/src/esrc/scripts/persist-echat.e-awt:107:39:            to actionPerformed(event) :void {
~/efoo/src/esrc/scripts/persist-echat.e-awt:108:22:                E.call(chatController, verb, [])
~/efoo/src/esrc/scripts/persist-echat.e-awt:111:32:        button.addActionListener(buttonListener)
~/efoo/src/esrc/scripts/persist-echat.e-awt:121:30:    offerChatButton.setEnabled(false)
~/efoo/src/esrc/scripts/persist-echat.e-awt:125:31:    findFriendButton.setEnabled(false)
~/efoo/src/esrc/scripts/persist-echat.e-awt:129:31:    chatScroller.setMaximumSize(<awt:Dimension>(2000,1000))
~/efoo/src/esrc/scripts/persist-echat.e-awt:130:33:    chatScroller.setPreferredSize(<awt:Dimension>(250,80))
~/efoo/src/esrc/scripts/persist-echat.e-awt:134:28:    chatTextArea.setLineWrap(true)
~/efoo/src/esrc/scripts/persist-echat.e-awt:135:34:    chatScroller.getViewport().add(chatTextArea)
~/efoo/src/esrc/scripts/persist-echat.e-awt:140:16:    chatPane.add(nextMessageBox)
~/efoo/src/esrc/scripts/persist-echat.e-awt:145:32:    sendMessageButton.setEnabled(false)
~/efoo/src/esrc/scripts/persist-echat.e-awt:147:16:    chatPane.add(JPanel`$setNameButton
~/efoo/src/esrc/scripts/persist-echat.e-awt:153:16:    chatWin.pack()
~/efoo/src/esrc/scripts/persist-echat.e-awt:154:16:    chatWin.show()
~/efoo/src/esrc/scripts/persist-echat.e-awt:173:52:        to receive(message) :void { chatController.receive(message) }
~/efoo/src/esrc/scripts/persist-echat.e-awt:175:40:            chatController.receiveFriend(friend, name)
~/efoo/src/esrc/scripts/persist-echat.e-awt:177:61:        to friendIsLeaving() :void { chatController.friendIsLeaving() }
~/efoo/src/esrc/scripts/persist-echat.e-awt:178:21:        to revoke() :void { chatController := null }
~/efoo/src/esrc/scripts/persist-echat.e-awt:194:46:        def showMessage(senderName, message) :void {
~/efoo/src/esrc/scripts/persist-echat.e-awt:195:43:            chatUI.getChatTextArea().append(senderName +" says:\t"+ message + "\n")
~/efoo/src/esrc/scripts/persist-echat.e-awt:197:32:        def showDebug(message) :void {
~/efoo/src/esrc/scripts/persist-echat.e-awt:207:23:            to send() :void {
~/efoo/src/esrc/scripts/persist-echat.e-awt:208:58:                def nextMsgBox := chatUI.getNextMessageBox()
~/efoo/src/esrc/scripts/persist-echat.e-awt:209:53:                def nextMessage := nextMsgBox.getText()
~/efoo/src/esrc/scripts/persist-echat.e-awt:210:34:                nextMsgBox.setText("")
~/efoo/src/esrc/scripts/persist-echat.e-awt:215:28:            to setMyName() :void {
~/efoo/src/esrc/scripts/persist-echat.e-awt:216:61:                myName := <swing:JOptionPane>.showInputDialog(
~/efoo/src/esrc/scripts/persist-echat.e-awt:220:51:                    chatUI.getNameButton().setLabel(myName)
~/efoo/src/esrc/scripts/persist-echat.e-awt:221:53:                    chatUI.getNameButton().setEnabled(false)
~/efoo/src/esrc/scripts/persist-echat.e-awt:222:58:                    chatUI.getOfferChatButton().setEnabled(true)
~/efoo/src/esrc/scripts/persist-echat.e-awt:223:59:                    chatUI.getFindFriendButton().setEnabled(true)
~/efoo/src/esrc/scripts/persist-echat.e-awt:226:28:            to offerSelf() :void {
~/efoo/src/esrc/scripts/persist-echat.e-awt:237:24:            to leave() :void {
~/efoo/src/esrc/scripts/persist-echat.e-awt:242:41:                chatController.disconnect("is being left")
~/efoo/src/esrc/scripts/persist-echat.e-awt:244:33:            to receive(message) :void {
~/efoo/src/esrc/scripts/persist-echat.e-awt:251:56:                chatUI.getSendMessageButton().setEnabled(true)
~/efoo/src/esrc/scripts/persist-echat.e-awt:252:54:                chatUI.getOfferChatButton().setEnabled(false)
~/efoo/src/esrc/scripts/persist-echat.e-awt:253:55:                chatUI.getFindFriendButton().setEnabled(false)
~/efoo/src/esrc/scripts/persist-echat.e-awt:255:59:                Ref.whenBroken(friend, def observer(prom) :void {
~/efoo/src/esrc/scripts/persist-echat.e-awt:261:29:            to findFriend() :void {
~/efoo/src/esrc/scripts/persist-echat.e-awt:262:60:                def file := findFriendFile(chatUI.getChatWin())
~/efoo/src/esrc/scripts/persist-echat.e-awt:264:49:                    def friendURI := file.getText()
~/efoo/src/esrc/scripts/persist-echat.e-awt:270:40:                      done(friendName) :void {
~/efoo/src/esrc/scripts/persist-echat.e-awt:273:52:                        chatController.receiveFriend(friend, friendName)
~/efoo/src/esrc/scripts/persist-echat.e-awt:276:49:                        chatController.disconnect("is unreachable")
~/efoo/src/esrc/scripts/persist-echat.e-awt:282:34:            to friendIsLeaving() :void {
~/efoo/src/esrc/scripts/persist-echat.e-awt:283:41:                chatController.disconnect("is leaving")
~/efoo/src/esrc/scripts/persist-echat.e-awt:285:33:            to disconnect(desc) :void {
~/efoo/src/esrc/scripts/persist-echat.e-awt:286:56:                chatUI.getSendMessageButton().setEnabled(false)
~/efoo/src/esrc/scripts/persist-echat.e-awt:290:47:                chatUI.getChatTextArea().append(myFriendName + " " + desc + "\n")
~/efoo/src/esrc/scripts/persist-echat.e-awt:293:37:                myChatReceiver.revoke()
~/efoo/src/esrc/scripts/persist-echat.e-awt:311:18:if (interp.getArgs() =~ [`-save`, filename]) {
~/efoo/src/esrc/scripts/persist-echat.e-awt:335:24:traceline(interp.getArgs())
~/efoo/src/esrc/scripts/persist-echat.e-awt:336:17:interp.blockAtTop()
~/efoo/src/esrc/scripts/racetrack.e-awt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/racetrack.e-awt:6:36:def traceline(text) :void { stderr.println(text) }
~/efoo/src/esrc/scripts/racetrack.e-awt:8:41:def attachAction(component,target,verb) :void {
~/efoo/src/esrc/scripts/racetrack.e-awt:10:35:        to actionPerformed(event) :void {
~/efoo/src/esrc/scripts/racetrack.e-awt:11:18:            E.call(target, verb, [])
~/efoo/src/esrc/scripts/racetrack.e-awt:14:31:    component.addActionListener(listener)
~/efoo/src/esrc/scripts/racetrack.e-awt:19:50:    button.setBackground(<awt:SystemColor>.control())
~/efoo/src/esrc/scripts/racetrack.e-awt:30:42:        to __printOn(writer) :void {writer.print("coord:" + x + "," + y)}
~/efoo/src/esrc/scripts/racetrack.e-awt:31:77:        to samePlace(coord2) :boolean {x == coord2.getX() && y == coord2.getY()}
~/efoo/src/esrc/scripts/racetrack.e-awt:38:73:        to add(coord2) :near {makeCoord(x + coord2.getX(),y + coord2.getY())}
~/efoo/src/esrc/scripts/racetrack.e-awt:44:78:        to subtract(coord2) :near {makeCoord(x - coord2.getX(),y - coord2.getY())}
~/efoo/src/esrc/scripts/racetrack.e-awt:59:52:    def frame := <swing:JFrame>("Car " + car.getName() + " Instrument Panel")
~/efoo/src/esrc/scripts/racetrack.e-awt:63:22:    xIndicator.setText("0")
~/efoo/src/esrc/scripts/racetrack.e-awt:65:50:    yLabel.setBackground(<awt:SystemColor>.control())
~/efoo/src/esrc/scripts/racetrack.e-awt:67:22:    yIndicator.setText("0")
~/efoo/src/esrc/scripts/racetrack.e-awt:81:78:    frame.setDefaultCloseOperation(<swing:WindowConstants>.DO_NOTHING_ON_CLOSE())
~/efoo/src/esrc/scripts/racetrack.e-awt:82:30:    frame.getContentPane().add(realPane)
~/efoo/src/esrc/scripts/racetrack.e-awt:83:14:    frame.pack()
~/efoo/src/esrc/scripts/racetrack.e-awt:84:14:    frame.show()
~/efoo/src/esrc/scripts/racetrack.e-awt:86:21:        to submit() :void {
~/efoo/src/esrc/scripts/racetrack.e-awt:87:35:            submitButton.setEnabled(false)
~/efoo/src/esrc/scripts/racetrack.e-awt:88:26:            car.accelerate(acceleration)
~/efoo/src/esrc/scripts/racetrack.e-awt:90:33:        to prepareForNextTurn() :void {
~/efoo/src/esrc/scripts/racetrack.e-awt:91:68:            xIndicator.setText(makeXIndicator(car.getVelocity().getX()))
~/efoo/src/esrc/scripts/racetrack.e-awt:92:70:            yIndicator.setText(makeYIndicator(-(car.getVelocity().getY())))
~/efoo/src/esrc/scripts/racetrack.e-awt:94:35:            submitButton.setEnabled(true)
~/efoo/src/esrc/scripts/racetrack.e-awt:96:63:            <awt:Component>.transferFocus([frame.getContentPane()], statusPane)
~/efoo/src/esrc/scripts/racetrack.e-awt:99:48:        to setStatus(status) :void {statusPane.setText(status)}
~/efoo/src/esrc/scripts/racetrack.e-awt:100:21:        to upLeft() :void {acceleration := makeCoord(-1,-1)}
~/efoo/src/esrc/scripts/racetrack.e-awt:101:17:        to up() :void {acceleration := makeCoord(0,-1)}
~/efoo/src/esrc/scripts/racetrack.e-awt:102:22:        to upRight() :void {acceleration := makeCoord(1,-1)}
~/efoo/src/esrc/scripts/racetrack.e-awt:103:19:        to left() :void {acceleration := makeCoord(-1,0)}
~/efoo/src/esrc/scripts/racetrack.e-awt:104:19:        to zero() :void {acceleration := makeCoord(0,0)}
~/efoo/src/esrc/scripts/racetrack.e-awt:105:20:        to right() :void {acceleration := makeCoord(1,0)}
~/efoo/src/esrc/scripts/racetrack.e-awt:106:23:        to downLeft() :void {acceleration := makeCoord(-1,1)}
~/efoo/src/esrc/scripts/racetrack.e-awt:107:19:        to down() :void {acceleration := makeCoord(0,1)}
~/efoo/src/esrc/scripts/racetrack.e-awt:108:24:        to downRight() :void {acceleration := makeCoord(1,1)}
~/efoo/src/esrc/scripts/racetrack.e-awt:127:43:    def accelReactors := [].asMap().diverge()
~/efoo/src/esrc/scripts/racetrack.e-awt:135:35:        def locations := [].diverge()
~/efoo/src/esrc/scripts/racetrack.e-awt:136:81:        def slope := (finish.getY() - start.getY()) / (finish.getX() - start.getX())
~/efoo/src/esrc/scripts/racetrack.e-awt:137:48:        def computeRemainingLocations(current) :void {
~/efoo/src/esrc/scripts/racetrack.e-awt:138:37:            var nextX := current.getX()
~/efoo/src/esrc/scripts/racetrack.e-awt:139:37:            var nextY := current.getY()
~/efoo/src/esrc/scripts/racetrack.e-awt:145:56:                distToGo := finish.getX() - current.getX()
~/efoo/src/esrc/scripts/racetrack.e-awt:147:54:                def distTraveled := nextX - start.getX()
~/efoo/src/esrc/scripts/racetrack.e-awt:148:35:                nextY := start.getY() + ((slope * distTraveled) + 0.5) _/1
~/efoo/src/esrc/scripts/racetrack.e-awt:153:56:                distToGo := finish.getY() - current.getY()
~/efoo/src/esrc/scripts/racetrack.e-awt:155:54:                def distTraveled := nextY - start.getY()
~/efoo/src/esrc/scripts/racetrack.e-awt:156:35:                nextX := start.getX() + ((distTraveled/slope) + 0.5) _/1
~/efoo/src/esrc/scripts/racetrack.e-awt:159:26:            locations.push(next)
~/efoo/src/esrc/scripts/racetrack.e-awt:160:33:            if (! (next.samePlace(finish))) {
~/efoo/src/esrc/scripts/racetrack.e-awt:168:30:        to accelerate(accel) :void {
~/efoo/src/esrc/scripts/racetrack.e-awt:172:33:                each.reactToAccel(car)
~/efoo/src/esrc/scripts/racetrack.e-awt:183:59:            hasCrashed := hasCrashed || raceMap.causesCrash(path)
~/efoo/src/esrc/scripts/racetrack.e-awt:184:62:            hasFinished := hasFinished || raceMap.causesFinish(path)
~/efoo/src/esrc/scripts/racetrack.e-awt:187:41:                instrumentPanel.setStatus("Crashed")
~/efoo/src/esrc/scripts/racetrack.e-awt:188:62:            } else if (hasFinished) {instrumentPanel.setStatus("Finished")}
~/efoo/src/esrc/scripts/racetrack.e-awt:196:67:        to prepareForNextTurn() :void {instrumentPanel.prepareForNextTurn()}
~/efoo/src/esrc/scripts/racetrack.e-awt:197:37:        to addAccelReactor(reactor) :void {accelReactors[reactor] := reactor}
~/efoo/src/esrc/scripts/racetrack.e-awt:198:60:        to removeAccelReactor(reactor) :void {accelReactors.remove(reactor)}
~/efoo/src/esrc/scripts/racetrack.e-awt:211:30:    frame.getContentPane().add(realPane)
~/efoo/src/esrc/scripts/racetrack.e-awt:213:33:        to windowClosing(event) :void {
~/efoo/src/esrc/scripts/racetrack.e-awt:214:32:            interp.continueAtTop()
~/efoo/src/esrc/scripts/racetrack.e-awt:218:27:    frame.addWindowListener(windowListener)
~/efoo/src/esrc/scripts/racetrack.e-awt:219:14:    frame.pack()
~/efoo/src/esrc/scripts/racetrack.e-awt:220:14:    frame.show()
~/efoo/src/esrc/scripts/racetrack.e-awt:222:44:        to refresh(textMap) :void {mapPane.setText(textMap)}
~/efoo/src/esrc/scripts/racetrack.e-awt:223:49:        to showStatus(status) :void {statusPane.setText(status)}
~/efoo/src/esrc/scripts/racetrack.e-awt:240:65:    def isWall(coord) :boolean {baseMap[coord.getY()] [coord.getX()] == 'W' }
~/efoo/src/esrc/scripts/racetrack.e-awt:241:67:    def isFinish(coord) :boolean {baseMap[coord.getY()] [coord.getX()] == 'F'}
~/efoo/src/esrc/scripts/racetrack.e-awt:244:42:        if (coord.getX() < 0 || coord.getY() < 0 ||
~/efoo/src/esrc/scripts/racetrack.e-awt:245:79:              coord.getX() >= baseMap[0].size() || coord.getY() >= baseMap.size()) {
~/efoo/src/esrc/scripts/racetrack.e-awt:255:74:                def inBounds(xLoc) :boolean {xLoc >= 0 && xLoc < line.size()}
~/efoo/src/esrc/scripts/racetrack.e-awt:258:47:                    if (each.getLocation().getY() == index &&
~/efoo/src/esrc/scripts/racetrack.e-awt:259:58:                          inBounds(each.getLocation().getX())) {
~/efoo/src/esrc/scripts/racetrack.e-awt:260:54:                        def editable := result.diverge(char)
~/efoo/src/esrc/scripts/racetrack.e-awt:261:76:                        editable[each.getLocation().getX()] := (each.getName())[0]
~/efoo/src/esrc/scripts/racetrack.e-awt:262:51:                        result := editable.snapshot()
~/efoo/src/esrc/scripts/racetrack.e-awt:306:36:    def carSet := [].asMap().diverge()
~/efoo/src/esrc/scripts/racetrack.e-awt:317:46:    var carsReadyToMove  := [].asMap().diverge()
~/efoo/src/esrc/scripts/racetrack.e-awt:318:62:    def mapViewer := makeTrackViewer(raceMap.getAsTextWithCars(cars))
~/efoo/src/esrc/scripts/racetrack.e-awt:320:30:        to reactToAccel(car) :void {
~/efoo/src/esrc/scripts/racetrack.e-awt:323:51:            if (carsReadyToMove.size() >= cars.size()) {
~/efoo/src/esrc/scripts/racetrack.e-awt:324:42:                raceTrack.completeNextTurn()
~/efoo/src/esrc/scripts/racetrack.e-awt:327:31:        to completeNextTurn() :void {
~/efoo/src/esrc/scripts/racetrack.e-awt:328:37:            def winners := [].diverge()
~/efoo/src/esrc/scripts/racetrack.e-awt:330:25:                each.move()
~/efoo/src/esrc/scripts/racetrack.e-awt:331:35:                if (each.hasCrashed()) {
~/efoo/src/esrc/scripts/racetrack.e-awt:332:34:                    cars.removeKey(each)
~/efoo/src/esrc/scripts/racetrack.e-awt:333:43:                } else if (each.hasFinished()) {
~/efoo/src/esrc/scripts/racetrack.e-awt:334:32:                    winners.push(each)
~/efoo/src/esrc/scripts/racetrack.e-awt:337:55:            mapViewer.refresh(raceMap.getAsTextWithCars(cars) )
~/efoo/src/esrc/scripts/racetrack.e-awt:338:28:            if (winners.size() == 1) {
~/efoo/src/esrc/scripts/racetrack.e-awt:339:65:                mapViewer  showStatus("Car " + winners[0].getName() + " has won!")
~/efoo/src/esrc/scripts/racetrack.e-awt:340:35:            } else if (winners.size() > 1) {
~/efoo/src/esrc/scripts/racetrack.e-awt:342:32:            } else if (cars.size() == 0) {
~/efoo/src/esrc/scripts/racetrack.e-awt:344:48:            } else {raceTrack.prepareForNextTurn()}
~/efoo/src/esrc/scripts/racetrack.e-awt:346:33:        to prepareForNextTurn() :void {
~/efoo/src/esrc/scripts/racetrack.e-awt:348:49:            carsReadyToMove := [].asMap().diverge()
~/efoo/src/esrc/scripts/racetrack.e-awt:350:39:                each.prepareForNextTurn()
~/efoo/src/esrc/scripts/racetrack.e-awt:354:42:    for each in cars {each.addAccelReactor(raceTrack)}
~/efoo/src/esrc/scripts/racetrack.e-awt:359:17:interp.blockAtTop()
~/efoo/src/esrc/scripts/racetrack1.e-awt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/racetrack1.e-awt:6:36:def traceline(text) :void { stderr.println(text) }
~/efoo/src/esrc/scripts/racetrack1.e-awt:8:41:def attachAction(component,target,verb) :void {
~/efoo/src/esrc/scripts/racetrack1.e-awt:10:35:        to actionPerformed(event) :void {
~/efoo/src/esrc/scripts/racetrack1.e-awt:11:18:            E.call(target, verb, [])
~/efoo/src/esrc/scripts/racetrack1.e-awt:14:31:    component.addActionListener(listener)
~/efoo/src/esrc/scripts/racetrack1.e-awt:19:50:    button.setBackground(<awt:SystemColor>.control())
~/efoo/src/esrc/scripts/racetrack1.e-awt:30:42:        to __printOn(writer) :void {writer.print("coord:" + x + "," + y)}
~/efoo/src/esrc/scripts/racetrack1.e-awt:31:74:        to equals(coord2) :boolean {x == coord2.getX() && y == coord2.getY()}
~/efoo/src/esrc/scripts/racetrack1.e-awt:32:75:        to plus(coord2) :near {coordMaker(x + coord2.getX(),y + coord2.getY())}
~/efoo/src/esrc/scripts/racetrack1.e-awt:33:76:        to minus(coord2) :near {coordMaker(x - coord2.getX(),y - coord2.getY())}
~/efoo/src/esrc/scripts/racetrack1.e-awt:48:52:    def frame := <swing:JFrame>("Car " + car.getName() + " Instrument Panel")
~/efoo/src/esrc/scripts/racetrack1.e-awt:52:22:    xIndicator.setText("0")
~/efoo/src/esrc/scripts/racetrack1.e-awt:54:50:    yLabel.setBackground(<awt:SystemColor>.control())
~/efoo/src/esrc/scripts/racetrack1.e-awt:56:22:    yIndicator.setText("0")
~/efoo/src/esrc/scripts/racetrack1.e-awt:70:78:    frame.setDefaultCloseOperation(<swing:WindowConstants>.DO_NOTHING_ON_CLOSE())
~/efoo/src/esrc/scripts/racetrack1.e-awt:71:30:    frame.getContentPane().add(realPane)
~/efoo/src/esrc/scripts/racetrack1.e-awt:72:14:    frame.pack()
~/efoo/src/esrc/scripts/racetrack1.e-awt:73:14:    frame.show()
~/efoo/src/esrc/scripts/racetrack1.e-awt:75:21:        to submit() :void {
~/efoo/src/esrc/scripts/racetrack1.e-awt:76:35:            submitButton.setEnabled(false)
~/efoo/src/esrc/scripts/racetrack1.e-awt:77:26:            car.accelerate(acceleration)
~/efoo/src/esrc/scripts/racetrack1.e-awt:79:33:        to prepareForNextTurn() :void {
~/efoo/src/esrc/scripts/racetrack1.e-awt:80:68:            xIndicator.setText(makeXIndicator(car.getVelocity().getX()))
~/efoo/src/esrc/scripts/racetrack1.e-awt:81:70:            yIndicator.setText(makeYIndicator(-(car.getVelocity().getY())))
~/efoo/src/esrc/scripts/racetrack1.e-awt:83:35:            submitButton.setEnabled(true)
~/efoo/src/esrc/scripts/racetrack1.e-awt:85:63:            <awt:Component>.transferFocus([frame.getContentPane()], statusPane)
~/efoo/src/esrc/scripts/racetrack1.e-awt:88:48:        to setStatus(status) :void {statusPane.setText(status)}
~/efoo/src/esrc/scripts/racetrack1.e-awt:89:21:        to upLeft() :void {acceleration := coordMaker(-1,-1)}
~/efoo/src/esrc/scripts/racetrack1.e-awt:90:17:        to up() :void {acceleration := coordMaker(0,-1)}
~/efoo/src/esrc/scripts/racetrack1.e-awt:91:22:        to upRight() :void {acceleration := coordMaker(1,-1)}
~/efoo/src/esrc/scripts/racetrack1.e-awt:92:19:        to left() :void {acceleration := coordMaker(-1,0)}
~/efoo/src/esrc/scripts/racetrack1.e-awt:93:19:        to zero() :void {acceleration := coordMaker(0,0)}
~/efoo/src/esrc/scripts/racetrack1.e-awt:94:20:        to right() :void {acceleration := coordMaker(1,0)}
~/efoo/src/esrc/scripts/racetrack1.e-awt:95:23:        to downLeft() :void {acceleration := coordMaker(-1,1)}
~/efoo/src/esrc/scripts/racetrack1.e-awt:96:19:        to down() :void {acceleration := coordMaker(0,1)}
~/efoo/src/esrc/scripts/racetrack1.e-awt:97:24:        to downRight() :void {acceleration := coordMaker(1,1)}
~/efoo/src/esrc/scripts/racetrack1.e-awt:115:43:    def accelReactors := [].asMap().diverge()
~/efoo/src/esrc/scripts/racetrack1.e-awt:123:35:        def locations := [].diverge()
~/efoo/src/esrc/scripts/racetrack1.e-awt:124:81:        def slope := (finish.getY() - start.getY()) / (finish.getX() - start.getX())
~/efoo/src/esrc/scripts/racetrack1.e-awt:125:48:        def computeRemainingLocations(current) :void {
~/efoo/src/esrc/scripts/racetrack1.e-awt:126:37:            var nextX := current.getX()
~/efoo/src/esrc/scripts/racetrack1.e-awt:127:37:            var nextY := current.getY()
~/efoo/src/esrc/scripts/racetrack1.e-awt:133:56:                distToGo := finish.getX() - current.getX()
~/efoo/src/esrc/scripts/racetrack1.e-awt:135:54:                def distTraveled := nextX - start.getX()
~/efoo/src/esrc/scripts/racetrack1.e-awt:136:35:                nextY := start.getY() + ((slope * distTraveled) + 0.5) _/1
~/efoo/src/esrc/scripts/racetrack1.e-awt:141:56:                distToGo := finish.getY() - current.getY()
~/efoo/src/esrc/scripts/racetrack1.e-awt:143:54:                def distTraveled := nextY - start.getY()
~/efoo/src/esrc/scripts/racetrack1.e-awt:144:35:                nextX := start.getX() + ((distTraveled/slope) + 0.5) _/1
~/efoo/src/esrc/scripts/racetrack1.e-awt:147:26:            locations.push(next)
~/efoo/src/esrc/scripts/racetrack1.e-awt:148:30:            if (! (next.equals(finish))) {
~/efoo/src/esrc/scripts/racetrack1.e-awt:156:30:        to accelerate(accel) :void {
~/efoo/src/esrc/scripts/racetrack1.e-awt:160:33:                each.reactToAccel(car)
~/efoo/src/esrc/scripts/racetrack1.e-awt:165:37:            velocity := velocity.plus(acceleration)
~/efoo/src/esrc/scripts/racetrack1.e-awt:166:44:            def newLocation := location.plus(velocity)
~/efoo/src/esrc/scripts/racetrack1.e-awt:171:59:            hasCrashed := hasCrashed || raceMap.causesCrash(path)
~/efoo/src/esrc/scripts/racetrack1.e-awt:172:62:            hasFinished := hasFinished || raceMap.causesFinish(path)
~/efoo/src/esrc/scripts/racetrack1.e-awt:175:41:                instrumentPanel.setStatus("Crashed")
~/efoo/src/esrc/scripts/racetrack1.e-awt:176:62:            } else if (hasFinished) {instrumentPanel.setStatus("Finished")}
~/efoo/src/esrc/scripts/racetrack1.e-awt:184:67:        to prepareForNextTurn() :void {instrumentPanel.prepareForNextTurn()}
~/efoo/src/esrc/scripts/racetrack1.e-awt:185:37:        to addAccelReactor(reactor) :void {accelReactors[reactor] := reactor}
~/efoo/src/esrc/scripts/racetrack1.e-awt:186:60:        to removeAccelReactor(reactor) :void {accelReactors.remove(reactor)}
~/efoo/src/esrc/scripts/racetrack1.e-awt:199:30:    frame.getContentPane().add(realPane)
~/efoo/src/esrc/scripts/racetrack1.e-awt:201:33:        to windowClosing(event) :void {
~/efoo/src/esrc/scripts/racetrack1.e-awt:202:32:            interp.continueAtTop()
~/efoo/src/esrc/scripts/racetrack1.e-awt:206:27:    frame.addWindowListener(windowListener)
~/efoo/src/esrc/scripts/racetrack1.e-awt:208:14:    frame.pack()
~/efoo/src/esrc/scripts/racetrack1.e-awt:209:14:    frame.show()
~/efoo/src/esrc/scripts/racetrack1.e-awt:211:44:        to refresh(textMap) :void {mapPane.setText(textMap)}
~/efoo/src/esrc/scripts/racetrack1.e-awt:212:49:        to showStatus(status) :void {statusPane.setText(status)}
~/efoo/src/esrc/scripts/racetrack1.e-awt:229:65:    def isWall(coord) :boolean {baseMap[coord.getY()] [coord.getX()] == 'W' }
~/efoo/src/esrc/scripts/racetrack1.e-awt:230:67:    def isFinish(coord) :boolean {baseMap[coord.getY()] [coord.getX()] == 'F'}
~/efoo/src/esrc/scripts/racetrack1.e-awt:233:42:        if (coord.getX() < 0 || coord.getY() < 0 ||
~/efoo/src/esrc/scripts/racetrack1.e-awt:234:79:              coord.getX() >= baseMap[0].size() || coord.getY() >= baseMap.size()) {
~/efoo/src/esrc/scripts/racetrack1.e-awt:244:74:                def inBounds(xLoc) :boolean {xLoc >= 0 && xLoc < line.size()}
~/efoo/src/esrc/scripts/racetrack1.e-awt:247:94:                    if (each.getLocation().getY() == index && inBounds(each.getLocation().getX())) {
~/efoo/src/esrc/scripts/racetrack1.e-awt:248:54:                        def editable := result.diverge(char)
~/efoo/src/esrc/scripts/racetrack1.e-awt:249:76:                        editable[each.getLocation().getX()] := (each.getName())[0]
~/efoo/src/esrc/scripts/racetrack1.e-awt:250:51:                        result := editable.snapshot()
~/efoo/src/esrc/scripts/racetrack1.e-awt:290:29:    def carList := [].diverge()
~/efoo/src/esrc/scripts/racetrack1.e-awt:291:16:    carList.push(carMaker("1",coordMaker(1,9),raceMap))
~/efoo/src/esrc/scripts/racetrack1.e-awt:292:16:    carList.push(carMaker("2",coordMaker(2,9),raceMap))
~/efoo/src/esrc/scripts/racetrack1.e-awt:293:16:    carList.push(carMaker("3",coordMaker(3,9),raceMap))
~/efoo/src/esrc/scripts/racetrack1.e-awt:294:36:    def carMap := [].asMap().diverge()
~/efoo/src/esrc/scripts/racetrack1.e-awt:305:46:    var carsReadyToMove  := [].asMap().diverge()
~/efoo/src/esrc/scripts/racetrack1.e-awt:306:63:    def mapViewer := trackViewerMaker(raceMap.getAsTextWithCars(cars))
~/efoo/src/esrc/scripts/racetrack1.e-awt:308:30:        to reactToAccel(car) :void {
~/efoo/src/esrc/scripts/racetrack1.e-awt:311:51:            if (carsReadyToMove.size() >= cars.size()) {
~/efoo/src/esrc/scripts/racetrack1.e-awt:312:42:                raceTrack.completeNextTurn()
~/efoo/src/esrc/scripts/racetrack1.e-awt:315:31:        to completeNextTurn() :void {
~/efoo/src/esrc/scripts/racetrack1.e-awt:316:37:            def winners := [].diverge()
~/efoo/src/esrc/scripts/racetrack1.e-awt:318:25:                each.move()
~/efoo/src/esrc/scripts/racetrack1.e-awt:319:35:                if (each.hasCrashed()) {
~/efoo/src/esrc/scripts/racetrack1.e-awt:320:34:                    cars.removeKey(each)
~/efoo/src/esrc/scripts/racetrack1.e-awt:321:43:                } else if (each.hasFinished()) {
~/efoo/src/esrc/scripts/racetrack1.e-awt:322:32:                    winners.push(each)
~/efoo/src/esrc/scripts/racetrack1.e-awt:325:55:            mapViewer.refresh(raceMap.getAsTextWithCars(cars) )
~/efoo/src/esrc/scripts/racetrack1.e-awt:326:28:            if (winners.size() == 1) {
~/efoo/src/esrc/scripts/racetrack1.e-awt:327:65:                mapViewer  showStatus("Car " + winners[0].getName() + " has won!")
~/efoo/src/esrc/scripts/racetrack1.e-awt:328:35:            } else if (winners.size() > 1) {
~/efoo/src/esrc/scripts/racetrack1.e-awt:330:32:            } else if (cars.size() == 0) {
~/efoo/src/esrc/scripts/racetrack1.e-awt:332:48:            } else {raceTrack.prepareForNextTurn()}
~/efoo/src/esrc/scripts/racetrack1.e-awt:334:33:        to prepareForNextTurn() :void {
~/efoo/src/esrc/scripts/racetrack1.e-awt:336:49:            carsReadyToMove := [].asMap().diverge()
~/efoo/src/esrc/scripts/racetrack1.e-awt:338:39:                each.prepareForNextTurn()
~/efoo/src/esrc/scripts/racetrack1.e-awt:342:42:    for each in cars {each.addAccelReactor(raceTrack)}
~/efoo/src/esrc/scripts/racetrack1.e-awt:347:17:interp.blockAtTop()
~/efoo/src/esrc/scripts/replace.e:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/replace.e:9:25:if (interp.getArgs().size() != 3) {
~/efoo/src/esrc/scripts/replace.e:13:36:def subject := <file: interp.getArgs()[0]>
~/efoo/src/esrc/scripts/replace.e:14:29:def varName := interp.getArgs()[1]
~/efoo/src/esrc/scripts/replace.e:15:30:def contents := interp.getArgs()[2]
~/efoo/src/esrc/scripts/replace.e:17:48:def `@left$$($varName)@right` := subject.getText()
~/efoo/src/esrc/scripts/replace.e:18:15:subject.setText(`$left$contents$right`)
~/efoo/src/esrc/scripts/replaceall.e:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/replaceall.e:6:46:def replaceAll(filedir, ext, oldstr, newstr) :void {
~/efoo/src/esrc/scripts/replaceall.e:7:27:    if (filedir.isDirectory()) {
~/efoo/src/esrc/scripts/replaceall.e:11:41:    } else if (filedir.getName().endsWith(ext)) {
~/efoo/src/esrc/scripts/replaceall.e:12:38:        stderr.println(filedir.getPath())
~/efoo/src/esrc/scripts/replaceall.e:13:52:        filedir.setText(filedir.getText().replaceAll(oldstr, newstr))
~/efoo/src/esrc/scripts/replaceall.e:18:18:if (interp.getArgs() =~ [rootName, ext, oldstr, newstr]) {
~/efoo/src/esrc/scripts/tamingConverter.e:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/tamingConverter.e:8:20:def traceline(str) :void {
~/efoo/src/esrc/scripts/tamingConverter.e:9:18:    stderr.println(str)
~/efoo/src/esrc/scripts/tamingConverter.e:34:82:    def dom := sml__quasiParser.valueMaker(qsmlSrc.trim()).substitute([]).minimize()
~/efoo/src/esrc/scripts/tamingConverter.e:35:13:    dom.build(safejBuilder)
~/efoo/src/esrc/scripts/tamingConverter.e:39:32:    if (tree.getTag().getTagName() <=> tagName) {
~/efoo/src/esrc/scripts/tamingConverter.e:40:20:        tree.getArgs()
~/efoo/src/esrc/scripts/tamingConverter.e:48:23:    result.getOptString()
~/efoo/src/esrc/scripts/tamingConverter.e:52:29:    def parts := fqname.split(".")
~/efoo/src/esrc/scripts/tamingConverter.e:57:40:        if (! (part <=> part.toLowerCase())) {
~/efoo/src/esrc/scripts/tamingConverter.e:64:25:    result(1, result.size()) + ".safej"
~/efoo/src/esrc/scripts/tamingConverter.e:68:29:    def i := path.lastStartOf("/")
~/efoo/src/esrc/scripts/tamingConverter.e:70:26:    dir[parentPath].mkdirs()
~/efoo/src/esrc/scripts/tamingConverter.e:71:24:    dir[path].textWriter()
~/efoo/src/esrc/scripts/tamingConverter.e:101:33:    def staticMeths := [].diverge()
~/efoo/src/esrc/scripts/tamingConverter.e:102:31:    def instMeths := [].diverge()
~/efoo/src/esrc/scripts/tamingConverter.e:106:28:            staticMeths.push(term`method($rest*)`)
~/efoo/src/esrc/scripts/tamingConverter.e:108:26:            instMeths.push(newMeth)
~/efoo/src/esrc/scripts/tamingConverter.e:111:29:    def honored := [].diverge()
~/efoo/src/esrc/scripts/tamingConverter.e:113:44:        match [term`"true"`]  { honored.push(term`PassByProxy`) }
~/efoo/src/esrc/scripts/tamingConverter.e:118:44:        match [term`"true"`]  { honored.push(term`Selfless`) }
~/efoo/src/esrc/scripts/tamingConverter.e:123:44:        match [term`"true"`]  { honored.push(term`PassByConstruction`) }
~/efoo/src/esrc/scripts/tamingConverter.e:128:44:        match [term`"true"`]  { honored.push(term`Persistent`) }
~/efoo/src/esrc/scripts/tamingConverter.e:132:36:    def honorary := if (honored.size() >= 1) {
~/efoo/src/esrc/scripts/tamingConverter.e:153:39:def convert(smlFiledir, safejRootDir) :void {
~/efoo/src/esrc/scripts/tamingConverter.e:154:30:    if (smlFiledir.isDirectory()) {
~/efoo/src/esrc/scripts/tamingConverter.e:158:33:    } else if (smlFiledir.getName() =~ `@_.txt`) {
~/efoo/src/esrc/scripts/tamingConverter.e:159:48:        def tree := qsml2term(smlFiledir.getText())
~/efoo/src/esrc/scripts/tamingConverter.e:165:30:            simp.prettyPrintOn(out, false)
~/efoo/src/esrc/scripts/tamingConverter.e:167:21:            out.close()
~/efoo/src/esrc/scripts/tamingConverter.e:173:48:def [smlDirName, safejDirName] := interp.getArgs()
~/efoo/src/esrc/scripts/test/audit-test.e:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/test/audit-test.e:30:15:    to getA() :void { a }
~/efoo/src/esrc/scripts/test/mod.updoc:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/test/mod.updoc:3:23:    ? def test1(x, y) :void {
~/efoo/src/esrc/scripts/test/mod.updoc:19:23:    ? def test4(x, y) :void {
~/efoo/src/esrc/scripts/test/test2FocusLayout.e-swt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/test/test2FocusLayout.e-swt:13:30:    to widgetDisposed(event) :void {
~/efoo/src/esrc/scripts/test/test2FocusLayout.e-swt:15:28:        interp.continueAtTop()
~/efoo/src/esrc/scripts/test/test2FocusLayout.e-swt:18:24:shell.addDisposeListener(shutdownListener)
~/efoo/src/esrc/scripts/test/test2FocusLayout.e-swt:21:47:def leftText := <widget:Text>(shell, SWT.BORDER())
~/efoo/src/esrc/scripts/test/test2FocusLayout.e-swt:22:16:leftText.setText("Left Focus Target")
~/efoo/src/esrc/scripts/test/test2FocusLayout.e-swt:23:48:def rightText := <widget:Text>(shell, SWT.BORDER())
~/efoo/src/esrc/scripts/test/test2FocusLayout.e-swt:24:17:rightText.setText("Right Focus Target")
~/efoo/src/esrc/scripts/test/test2FocusLayout.e-swt:25:45:def makeFocusChangeListener(button, target) :void {
~/efoo/src/esrc/scripts/test/test2FocusLayout.e-swt:27:34:        to widgetSelected(event) :void {
~/efoo/src/esrc/scripts/test/test2FocusLayout.e-swt:29:42:            <widget:Control>.transferFocus([shell], target)
~/efoo/src/esrc/scripts/test/test2FocusLayout.e-swt:32:31:    button.addSelectionListener(clickListener)
~/efoo/src/esrc/scripts/test/test2FocusLayout.e-swt:34:54:def focusLeftButton := <widget:Button>(shell, SWT.PUSH())
~/efoo/src/esrc/scripts/test/test2FocusLayout.e-swt:35:23:focusLeftButton.setText("Focus to left field")
~/efoo/src/esrc/scripts/test/test2FocusLayout.e-swt:38:54:def focusRightButton := <widget:Button>(shell,SWT.PUSH())
~/efoo/src/esrc/scripts/test/test2FocusLayout.e-swt:39:24:focusRightButton.setText("Focus to right field")
~/efoo/src/esrc/scripts/test/test2FocusLayout.e-swt:51:10:shell.open()
~/efoo/src/esrc/scripts/test/test2FocusLayout.e-swt:52:17:interp.blockAtTop()
~/efoo/src/esrc/scripts/test/testFocusLayout.e-swt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/test/testFocusLayout.e-swt:13:30:    to widgetDisposed(event) :void {
~/efoo/src/esrc/scripts/test/testFocusLayout.e-swt:15:28:        interp.continueAtTop()
~/efoo/src/esrc/scripts/test/testFocusLayout.e-swt:18:24:shell.addDisposeListener(shutdownListener)
~/efoo/src/esrc/scripts/test/testFocusLayout.e-swt:21:47:def leftText := <widget:Text>(shell, SWT.BORDER())
~/efoo/src/esrc/scripts/test/testFocusLayout.e-swt:22:16:leftText.setText("Left Focus Target")
~/efoo/src/esrc/scripts/test/testFocusLayout.e-swt:23:48:def rightText := <widget:Text>(shell, SWT.BORDER())
~/efoo/src/esrc/scripts/test/testFocusLayout.e-swt:24:17:rightText.setText("Right Focus Target")
~/efoo/src/esrc/scripts/test/testFocusLayout.e-swt:25:45:def makeFocusChangeListener(button, target) :void {
~/efoo/src/esrc/scripts/test/testFocusLayout.e-swt:27:34:        to widgetSelected(event) :void {
~/efoo/src/esrc/scripts/test/testFocusLayout.e-swt:29:42:            <widget:Control>.transferFocus([shell], target)
~/efoo/src/esrc/scripts/test/testFocusLayout.e-swt:32:31:    button.addSelectionListener(clickListener)
~/efoo/src/esrc/scripts/test/testFocusLayout.e-swt:34:54:def focusLeftButton := <widget:Button>(shell, SWT.PUSH())
~/efoo/src/esrc/scripts/test/testFocusLayout.e-swt:35:23:focusLeftButton.setText("Focus to left field")
~/efoo/src/esrc/scripts/test/testFocusLayout.e-swt:38:54:def focusRightButton := <widget:Button>(shell,SWT.PUSH())
~/efoo/src/esrc/scripts/test/testFocusLayout.e-swt:39:24:focusRightButton.setText("Focus to right field")
~/efoo/src/esrc/scripts/test/testFocusLayout.e-swt:51:10:shell.open()
~/efoo/src/esrc/scripts/test/testFocusLayout.e-swt:52:17:interp.blockAtTop()
~/efoo/src/esrc/scripts/test/testLayout.e-awt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/test/testLayout.e-awt:13:16:leftText.setText("Left Focus Target")
~/efoo/src/esrc/scripts/test/testLayout.e-awt:15:17:rightText.setText("Right Focus Target")
~/efoo/src/esrc/scripts/test/testLayout.e-awt:20:23:focusLeftButton.setText("Focus to left field")
~/efoo/src/esrc/scripts/test/testLayout.e-awt:27:24:focusRightButton.setText("Focus to right field")
~/efoo/src/esrc/scripts/test/testLayout.e-awt:35:20:shell.setContentPane(mainPane)
~/efoo/src/esrc/scripts/test/testLayout.e-awt:36:10:shell.show()
~/efoo/src/esrc/scripts/test/testLayout.e-awt:37:17:interp.blockAtTop()
~/efoo/src/esrc/scripts/test/testSimpleText.e-swt:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/test/testSimpleText.e-swt:9:12:def test() :void {
~/efoo/src/esrc/scripts/upgradeComments.e:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/upgradeComments.e:6:35:def traceline(str) :void { stderr.println(str) }
~/efoo/src/esrc/scripts/upgradeComments.e:12:25:        if (name.endsWith(suffix)) {
~/efoo/src/esrc/scripts/upgradeComments.e:22:37:def upgrade(oldFiledir, newFiledir) :void {
~/efoo/src/esrc/scripts/upgradeComments.e:23:30:    if (oldFiledir.isDirectory()) {
~/efoo/src/esrc/scripts/upgradeComments.e:24:56:        require(newFiledir.exists() || newFiledir.mkdirs(),
~/efoo/src/esrc/scripts/upgradeComments.e:25:57:                thunk{`Couldn't make ${newFiledir.getPath()}`})
~/efoo/src/esrc/scripts/upgradeComments.e:29:45:    } else if (endsWithAny(oldFiledir.getName(), [".updoc",
~/efoo/src/esrc/scripts/upgradeComments.e:34:41:        def oldText := oldFiledir.getText()
~/efoo/src/esrc/scripts/upgradeComments.e:37:40:            traceline(newFiledir.getPath())
~/efoo/src/esrc/scripts/upgradeComments.e:38:30:            newFiledir.setText(newText)
~/efoo/src/esrc/scripts/upgradeComments.e:43:18:if (interp.getArgs() =~ [oldName, newName]) {
~/efoo/src/esrc/scripts/upgradeComments.e:45:25:} else if (interp.getArgs() =~ []) {
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:1:0:# Copyright 2002 Combex, Inc. under the terms of the MIT X license
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:12:67:        def fileRcvrs := powerbox.optCap(powerbox.INITIAL_DOC_RCVRS())
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:13:26:        if (fileRcvrs.size() == 0) {
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:21:51:    to run(powerbox, <awt>, <swing>, optFileRcvr) :void {
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:22:57:        def traceline := powerbox.optCap(powerbox.TRACELN())
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:23:62:        def frameMaker := powerbox.optCap(powerbox.FRAME_MAKER())
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:24:65:        def awtDropTarget := powerbox.optCap(powerbox.DROP_TARGET())
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:38:32:        def prepDrop(textPane) :void {
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:42:41:            def reactToFilesDrop(files) :void {
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:43:39:                for i in 0..(files.size() - 1) {
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:47:49:            def reactToFileRcvrsDrop(fileRcvrs) :void {
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:52:62:            setupDrop(textPane, [DataFlavor.javaFileListFlavor()
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:54:81:                                 DataFlavor(DataFlavor.javaJVMLocalObjectMimeType() +
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:68:58:            to windowClosing(event) :void {capEdit.windowClosing()}
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:72:48:        def mainPane := mainFrame.getContentPane()
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:73:86:        mainFrame.setDefaultCloseOperation(<swing:WindowConstants>.DO_NOTHING_ON_CLOSE())
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:74:35:        mainFrame.addWindowListener(windowListener)
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:76:26:        mainPane.setLayout(border)
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:78:38:        def saveAction() :void {capEdit.save()}
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:80:47:        def saveButton := uiTools.newToolButton( <swing:ImageIcon>(saveURL)getImage() , "Save", saveAction)
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:84:28:        textPane.setLineWrap(true)
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:85:33:        textPane.setWrapStyleWord(true)
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:86:27:        textPane.setTabSize(4)
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:90:65:            <swing:ScrollPaneConstants>.VERTICAL_SCROLLBAR_ALWAYS(),
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:91:66:            <swing:ScrollPaneConstants>.HORIZONTAL_SCROLLBAR_NEVER())
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:92:43:        scrollingTextPane.getViewport().add(textPane)
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:97:33:        realPane.setPreferredSize(<awt:Dimension>(300, 300))
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:98:20:        mainPane.add(realPane, "Center")
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:99:82:        when (myTextVow, canWriteVow,myFileNameVow) -> done(text, canWrite,name) :void {
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:100:30:            mainFrame.setTitle( name)
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:101:33:            saveButton.setEnabled(canWrite)
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:102:28:            textPane.setText(myText)
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:104:38:            myText := textPane.getText()
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:105:26:            mainFrame.pack()
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:106:29:            mainFrame.setSize(600,400)
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:107:26:            mainFrame.show()
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:110:27:        def disposeOnce() :void {
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:112:33:                mainFrame.dispose()
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:117:23:            to save() :void {
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:118:42:                myText := textPane.getText()
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:120:48:                when (setVow) -> done(textSet) :void {
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:129:32:            to windowClosing() :void {
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:133:52:                    def finalText:= textPane.getText()
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:138:87:                        when (saveDecision <- getClickedButton()) -> done(var answer) :void {
~/efoo/src/esrc/scripts/webServer/evilEditor.caplet:145:44:                                capEdit.save()
~/efoo/src/esrc/scripts/webServer/ewalnut.html:1:0:<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
~/efoo/src/esrc/scripts/webServer/ewalnut.html:693:20:def v1 := adder.add2(3)
~/efoo/src/esrc/scripts/webServer/ewalnut.html:694:20:def v2 := adder.add3(v1)
~/efoo/src/esrc/scripts/webServer/ewalnut.html:695:19:def v3 := adder.add(v1, v2, 3)</PRE>

~/efoo/src/esrc/scripts/webServer/loveBug.caplet:1:0:# Copyright 2002 Combex, Inc. under the terms of the MIT X license
~/efoo/src/esrc/scripts/webServer/loveBug.caplet:17:57:        def traceline := powerbox.optCap(powerbox.TRACELN())
~/efoo/src/esrc/scripts/webServer/loveBug.caplet:18:62:        def frameMaker := powerbox.optCap(powerbox.FRAME_MAKER())
~/efoo/src/esrc/scripts/webServer/loveBug.caplet:19:65:        def awtDropTarget := powerbox.optCap(powerbox.DROP_TARGET())
~/efoo/src/esrc/scripts/webServer/loveBug.caplet:35:60:        when (openingCompleteVow) -> done(openingComplete) :void {
~/efoo/src/esrc/scripts/webServer/loveBug.caplet:36:60:            def fileRcvrsVow := powerbox.requestFileRcvrsVow(
~/efoo/src/esrc/scripts/webServer/loveBug.caplet:38:53:            when (fileRcvrsVow) -> done2(fileRcvrs) :void {
~/efoo/src/esrc/scripts/webServer/loveBug.caplet:39:34:                if (fileRcvrs.size() > 0) {
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:1:0:#!/usr/bin/env rune
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:9:35:def traceline(str) :void { stderr.println(str) }
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:16:41:    introducer.sturdyFromURI(uri).getRcvr()
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:19:26:    introducer.sturdyToURI(makeSturdyRef(obj))
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:26:33:        match [verb,args] {E.call(target,verb,args)}
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:52:42:def terminateServer(socket,serverSocket) :void {
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:54:16:    socket.close()
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:55:22:    serverSocket.close()
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:56:24:    interp.continueAtTop()
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:63:17:def webServer() :void {
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:65:37:    def socket := serverSocket.accept()
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:66:43:    def outstream := socket.getOutputStream()
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:67:41:    var instream := socket.getInputStream()
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:70:35:    def action := instream.readLine()
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:83:46:        def theDoc := <file: filePath>.getText()
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:84:63:        traceline ("got the caplet text length: " + theDoc.size())
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:85:75:        outstream.write(composeHeader("text/plain", theDoc.size()).getBytes())
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:86:39:        outstream.write(theDoc.getBytes())
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:88:20:        socket.close()
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:94:127:        when ((getObjectFromURI(<file: (toSuffix + ".cap")>.getText())) <- replyToQuery(query,forwardStream)) -> done(result) :void {
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:97:24:            socket.close()
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:103:50:            def theDoc := <file: filePath>.getText()
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:104:61:            def header := composeHeader(htmlMime, theDoc.size())
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:106:43:            outstream.write(header.getBytes())
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:108:43:            outstream.write(theDoc.getBytes())
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:112:20:        socket.close()
~/efoo/src/esrc/scripts/webServer/webServerSocket80.e:118:19:introducer.onTheAir()
